{"version":3,"file":"pages/markdown/index.js","mappings":";;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACnCA;AAEA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC9BA;;;;;;;;;;;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://@coze/chat-sdk/./src/pages/markdown/index.tsx?1c6f","webpack://@coze/chat-sdk/._src_exports_index.ts","webpack://@coze/chat-sdk/._src_pages_markdown_const.ts","webpack://@coze/chat-sdk/._src_pages_markdown_index.tsx"],"sourcesContent":["import _slicedToArray from \"/Users/bytedance/Documents/code/coze/coze_mini_chat/node_modules/.pnpm/@babel+runtime@7.26.9/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { MdStream } from \"@/exports\";\nimport { View } from \"@tarojs/components\";\nimport { markdown } from \"./const\";\nimport { useEffect, useState } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar streamOutput = function streamOutput(onChange) {\n  var index = 10;\n  var timer = setInterval(function () {\n    var content = markdown.slice(0, index);\n    index += 10;\n    onChange(content);\n    if (content.length >= markdown.length) {\n      clearInterval(timer);\n    }\n  }, 150);\n};\nexport default function Index() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    content = _useState2[0],\n    setContent = _useState2[1];\n  useEffect(function () {\n    streamOutput(setContent);\n  }, []);\n  return /*#__PURE__*/_jsx(View, {\n    className: \"light\",\n    children: /*#__PURE__*/_jsx(MdStream, {\n      isSmooth: true,\n      isFinish: content.length === markdown.length,\n      enableCodeBy4Space: false,\n      markdown: content,\n      enableHtmlTags: true\n    })\n  });\n}","import { ChatFlowFramework } from \"../chatflow\";\n\nimport {\n  ChatFramework,\n  ChatSlot,\n  useChatInfoStore,\n  ChatService,\n  MdStream,\n  Logger,\n  Language,\n  ChatType,\n  RawMessageType,\n  useInitSuccess,\n  useSendMessage,\n} from \"../libs\";\n\nexport default {\n  MdStream,\n  ChatFlowFramework,\n  ChatFramework,\n  ChatSlot,\n  useChatInfoStore,\n  ChatService,\n  Logger,\n  Language,\n  ChatType,\n  RawMessageType,\n  useInitSuccess,\n  useSendMessage,\n};\nexport {\n  MdStream,\n  ChatFlowFramework,\n  ChatFramework,\n  ChatSlot,\n  useChatInfoStore,\n  ChatService,\n  Logger,\n  Language,\n  ChatType,\n  RawMessageType,\n  useInitSuccess,\n  useSendMessage,\n};\nexport * from \"@/libs/types\";\nexport { type IChatFlowProps } from \"../chatflow/type\";\n","export const markdown = `\n# Code\n    sadf\n    as\n    what's\n     asdf\n\nas\n\\`\\`\\`javascript\n$(document).ready(function () {\n    alert('RUNOOB');\n});\n\\`\\`\\`\n\n\n![这是图片](/assets/img/philly-magic-garden.jpg \"Magic Gardens\")\n\nas s \\`node\\`\n## Html\n\n<div>\n <strong>asdfasdf</strong>\n  <video controls=\"\" width=\"250\">\n    <source src=\"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.webm\" type=\"video/webm\">\n    <source src=\"https://interactive-examples.mdn.mozilla.net/media/cc0-videos/flower.mp4\" type=\"video/mp4\">\n  </video>\n</div>\n\n## Tables\n\n| Name  | Age | City     |\n|-------|-----|----------|\n| Alice | 30  | New York |\n| Bob   | 25  | London   |\n\n## Task Lists\n\nYou can create task lists in Markdown by using brackets. For example:\n\n- [x] Write example document\n- [ ] Publish document\n- [ ] Share document with friends\n\n- [x] 任务1\n- [x] 任务2\n- [ ] 任务3\n  - [ ] 子任务1\n  - [ ] 子任务2\n  - [ ] 子任务3\n- [ ] 任务4\n  - [ ] 子任务1\n  - [ ] 子任务2\n\n### Unordered List\n\n- Item 1\n- Item 2\n- Item 3\n\n### Ordered List\n\n1. Item 1\n2. Item 2\n3. Item 3\n\n\n`;\n","import { createPageConfig } from '@tarojs/runtime'\nimport component from \"!!../../../node_modules/.pnpm/@tarojs+taro-loader@4.0.8_@swc+helpers@0.5.15_webpack@5.91.0_@swc+core@1.3.96_@swc+helpers@0.5.15__/node_modules/@tarojs/taro-loader/lib/entry-cache.js?name=pages/markdown/index!./index.tsx\"\nvar config = {\"navigationBarTitleText\":\"Coze Chat\"};\n\n\n\nvar taroOption = createPageConfig(component, 'pages/markdown/index', {root:{cn:[]}}, config || {})\nif (component && component.behaviors) {\n  taroOption.behaviors = (taroOption.behaviors || []).concat(component.behaviors)\n}\nvar inst = Page(taroOption)\n\n\n\nexport default component\n"],"names":[],"sourceRoot":""}