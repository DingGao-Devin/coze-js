{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAOA;AAEA;AAaA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AAKA;AACA;AACA;AAEA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAkBA;AAAA;AAAA;AAjBA;AAAA;AAkBA;AAEA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAIA;AAEA;AACA;AACA;AACA;AAIA;AAEA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAjDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAmDA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AATA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAIA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACrQA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;;;;;;;;;;;;;;ACfA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACXA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AARA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AAAA;AAOA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAGA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAGA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAOA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/HA;AAEA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAEA;AAGA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAKA;AAGA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;AC9EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AClEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAEA;AACA;AACA;AAIA;AAJA;AAAA;AAAA;AAKA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAKA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AAKA;AACA;AACA;AAKA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AAEA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;AC1JA;AAEA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAKA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AAEA;AAUA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;ACjEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpEA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AACA;AAAA;AAAA;AAIA;AAGA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;ACnGA;AAEA;AAGA;AACA;AACA;AAAA;AAEA;AAWA;AAAA;AAJA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AAAA;AAEA;AAGA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAGA;AAEA;AAGA;AADA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1HA;AACA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AC5EA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAOA;AALA;AAMA;AACA;AACA;AACA;AACA;AAAA;AAJA;AAAA;AAMA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAGA;AAGA;AACA;AAAA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAFA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAFA;AAGA;AACA;AAEA;AAEA;AAGA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;ACnFA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAJA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AAOA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AAEA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAMA;AACA;AAAA;AAEA;AAGA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AALA;AAAA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvGA;AAEA;AAEA;AAOA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AAAA;AAIA;AAGA;AAAA;AAAA;AAAA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9DA;AAEA;AAYA;AAQA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAAA;AACA;AAGA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAEA;AAYA;AAJA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAKA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AAAA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AAEA;AAIA;AAAA;AAEA;AAGA;;;;;;;;;;;;;;;;;AC/LA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;;ACpCA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AADA;AAIA;AAAA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAIA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;AChDA;AACA;AAGA;AACA;AAAA;AAEA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AADA;AAIA;AAAA;AACA;AACA;AACA;AAAA;AAHA;AAIA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;ACjCA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAGA;AAAA;AACA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;ACrCA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA;AAEA;AACA;AACA;AAQA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AADA;AAGA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AAGA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;ACxIA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AAEA;AAEA;AAOA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAIA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAIA;AACA;AACA;AAAA;AAEA;AAGA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAJA;AAAA;AAKA;AACA;AAAA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzHA;AAEA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAFA;AAGA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAJA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;AChCA;AACA;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;;;;;;;;;;;;;;;;;ACFA;AAEA;AAGA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AALA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;ACzDA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACXA;AAEA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACdA;AAEA;AAEA;AAEA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;ACtBA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AAGA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;;;;;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChFA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;ACVA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACRA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjBA;AACA;AACA;AACA;AAYA;AACA;AAkBA;AACA;AAEA;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;;AAYA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AAWA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;AAKA;AAEA;AAGA;AACA;AAKA;AAEA;AAGA;AACA;AAKA;AAEA;AAGA;AACA;AAKA;AAEA;AAGA;AACA;AAKA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAKA;AAEA;AAGA;AACA;AACA;AAEA;AAGA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;;;;;;;AC/MA;;;;;;;;;;;;;;;;;;;;;;ACEA;AAIA;AAEA;AAGA;AADA;AAEA;AACA;AACA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;ACjBA;AACA;AAEA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;AClBA;AAEA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACPA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAIA;AACA;;;;;;;;;;;;;;;;ACRA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACPA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACPA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzDA;AAUA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AAEA;AACA;AAIA;AAFA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAGA;AACA;AAEA;AAAA;AAEA;AAGA;AACA;AAGA;AAGA;AAGA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC5GA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACpBA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AAAA;AAAA;AAEA;AAIA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AC7BA;AAGA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACnFA;AAEA;AAOA;AACA;AACA;AACA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAMA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AACA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3SA;AACA;AACA;AAIA;AAKA;AACA;AAKA;;;;;;;;;;;;;;;;;;;;ACjBA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAIA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACrBA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AAKA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAFA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAJA;AAAA;AAMA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AARA;AAAA;AAgBA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AA0BA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvCA;AAEA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AANA;AAAA;AAOA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBA;AAzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiDA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;AC/IA;AAKA;AAEA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AAOA;AAEA;AAGA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAPA;AAQA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AApBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsxIA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AACA;AAOA;AAMA;AAEA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;;AAGA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AApCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAqCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAEA;AACA;AAEA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AAKA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AApCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AALA;AAAA;AAMA;AAAA;AAAA;AAAA;AAIA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAFA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AALA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnLA;AACA;AACA;AACA;AAsBA;AAgBA;AASA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAZA;AAAA;AACA;AAAA;AAAA;AAaA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAIA;AACA;AACA;AACA;AACA;;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5MA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACNA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAFA;AAGA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAXA;AACA;AACA;AACA;AASA;AACA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAHA;AAAA;AAIA;AACA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAKA;AAGA;AACA;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAFA;AAAA;AAIA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACnJA;AAEA;AACA;AACA;AAMA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAJA;AAAA;AAMA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;AC1DA;AAEA;AACA;AACA;AAOA;AACA;AACA;AACA;AACA;AACA;AAAA;AAJA;AAAA;AAMA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAIA;AAAA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;AAAA;AADA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACtDA;AAKA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AAFA;AAGA;AAAA;AACA;AACA;AAAA;AAFA;AAIA;AAAA;AACA;AACA;AAAA;AAFA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAQA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;ACvEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAUA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAnBA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAYA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;;AAEA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AANA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACvEA;AAGA;AACA;AAEA;AACA;AAQA;AAKA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AATA;AACA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAIA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAIA;AAAA;AAAA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACtIA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;ACoCA;AACA;;;;;;;;;;;;;;;ACrCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAGA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;ACbA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACAA;AAEA;AAEA;AACA;AAAA;AAYA;AASA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAZA;AACA;AACA;AACA;AACA;AAUA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AAGA;AAwBA;AAOA;AALA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAFA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACrQA;AACA;AAEA;AAAA;AAGA;AAIA;AAAA;AAAA;AAAA;AACA;AAEA;AAIA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;ACpBA;AACA;AAEA;AACA;AAAA;AASA;AACA;AACA;AACA;AACA;AACA;AAKA;AAJA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAMA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC1KA;AAEA;AACA;AACA;AACA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AAAA;AAAA;AACA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AAEA;AACA;AAEA;AAEA;AAAA;AAQA;AAQA;AANA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AAAA;;AAEA;AAAA;AAEA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AC3CA;AAEA;AACA;AAEA;AAAA;AASA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AAGA;AAKA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;AC/BA;AAEA;AACA;AAEA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;ACvBA;AACA;AAEA;AAAA;AAEA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AAEA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAGA;AAEA;AAEA;AACA;;;;;;;;;;;;;;;;;ACjBA;AACA;AAAA;AAEA;AAYA;AALA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7BA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AAQA;AAAA;AAAA;AACA;AAAA;AAHA;AACA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAVA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAQA;;;;;;;;;;;;;;;;;;;;ACrCA;AAEA;AACA;AAEA;AAAA;AAKA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAEA;AAAA;AAKA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxBA;AACA;AACA;AAGA;AAEA;AACA;AAEA;AAAA;AAOA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;AAGA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAJA;AAAA;AAKA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAzBA;AAAA;AAAA;AA0BA;AACA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;AC/EA;AAEA;AAEA;AAAA;AAGA;AAmBA;AARA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAUA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AAGA;AACA;AACA;AAAA;AAQA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AAYA;AAAA;AAaA;AAEA;AAaA;AATA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;;;;;;ACvHA;AAEA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;AC5BA;AAEA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;;;AClDA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAEA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAIA;AAIA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAKA;AAMA;AAUA;AAAA;AARA;AACA;AACA;AAOA;AACA;AAIA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAMA;AACA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;AC5BA;AAGA;AAQA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;AC1DA;AAQA;AAMA;AAJA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACvBA;AAIA;AACA;AAQA;AAMA;AAJA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;ACnDA;AASA;AAKA;AAHA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AC5DA;AACA;AAGA;AAMA;AAJA;AAKA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AAEA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAoBA;AAcA;AALA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AALA;AAAA;AAAA;AAMA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAkBA;AAjBA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAQA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAOA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AC3JA;AAEA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAEA;AAAA;AACA;AACA;AAIA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;AC9EA;AAEA;AAEA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAUA;AAGA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAIA;;;;;;;;;;;;;;;;;AClDA;AAEA;AAAA;AAGA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AAkBA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAEA;AAEA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;AAEA;AAIA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAGA;AAEA;AAIA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAGA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACxNA;AAEA;AAAA;AAGA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AAEA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAGA;AAEA;AAEA;AAGA;AAAA;AAEA;AAGA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACpCA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;ACJA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;ACJA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;ACfA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;ACdA;AACA;AAEA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAeA;AAEA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;AC9CA;AAIA;AAAA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACVA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;AC5CA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AAAA;AAEA;AAGA;AAGA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AChCA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AAAA;AAGA;AAAA;AAIA;AACA;AACA;AACA;;;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AC1BA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAEA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjDA;AAWA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAUA;AAEA;AAaA;AARA;AACA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AAIA;AAWA;AAPA;AACA;AACA;AAMA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAGA;AACA;AAAA;AAEA;AAGA;AACA;AACA;AAGA;AACA;AAIA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;AC9MA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACvBA;AACA;;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AAEA;AAAA;AAcA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;ACrDA;AACA;AAEA;AAEA;AAAA;AAEA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AAEA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;ACzBA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC1BA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AC7BA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtaA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;AC5GA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAOA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACvCA;AACA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AAEA;AAEA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzFA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAMA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;AC5GA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AAEA;AAIA;AACA;AACA;AACA;AAEA;AAWA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAKA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AAEA;AAgBA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AASA;AAEA;AAKA;AAGA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAIA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;AC/SA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AAMA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACxDA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AAQA;AAIA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAAA;AAAA;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;AClEA;AAEA;AACA;AACA;AAEA;AAOA;AACA;AAEA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjFA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AAHA;AAAA;AAAA;AAIA;AAGA;AACA;AACA;AACA;AANA;AAAA;AAQA;AAOA;AAAA;AAAA;AANA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAIA;AAGA;AACA;AAAA;AAAA;AAIA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAIA;AAEA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;ACpKA;AACA;AAEA;AACA;AAAA;AAEA;AAIA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;ACvBA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AAmBA;AAPA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAKA;AACA;AACA;AAAA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;ACjEA;AAEA;AAEA;AACA;AAEA;AAAA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;ACzBA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAaA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAA;AACA;AACA;AAIA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAGA;AAAA;AAEA;AACA;AAGA;AACA;AAIA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AACA;AAEA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAGA;AAEA;AAIA;AAAA;AAAA;AACA;AACA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAKA;AACA;AACA;AAAA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AC5JA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AAEA;AACA;AAEA;AAEA;AAAA;AACA;AAGA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzCA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAEA;AAcA;AANA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAGA;AAEA;AAgBA;AANA;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AAAA;AAKA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAGA;;;;;;;;;;;;;;;;;;;;AC/FA;AAEA;AAEA;AACA;AAAA;AAEA;AAGA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACLA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;AC/BA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AACA;AASA;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAGA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAAA;AACA;AACA;AAGA;AACA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAGA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAIA;AACA;AAAA;AACA;AAEA;AAAA;AAIA;AACA;AACA;AAAA;AAGA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAAA;AAEA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AAAA;AAGA;AAGA;;;;;;;;;;;;;;;ACnLA;AAEA;AAGA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;ACpBA;AAGA;AAGA;AACA;AACA;AAGA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACLA;AAEA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAQA;AAKA;AAAA;AAHA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AAGA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAAA;AAEA;AAIA;AACA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AAEA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAGA;AACA;AACA;AACA;AAAA;AACA;AAGA;;;;;;;;;;;;;;;;;;;;ACjFA;AACA;AACA;AACA;AAAA;AAQA;AAAA;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;ACtCA;AACA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AClCA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAGA;;;;;;;;;;;;;;;;;;;AC/EA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACLA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;ACbA;AACA;AAEA;AAgBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;ACrEA;AAMA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AA+CA;AAAA;AA9CA;AAoCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AA3CA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA9BA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBA;AACA;AAMA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AANA;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;;;;;;;;;;;;;;AC5HA;AACA;AACA;AAGA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACjBA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAaA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACnFA;AAEA;AACA;AAGA;AACA;AAGA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;;ACbA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAMA;AACA;AACA;AAKA;AACA;AACA;;;;;;;;;;;;;;;AClCA;AACA;AAGA;AAAA;AAEA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;ACRA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAHA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnCA;AAGA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAMA;AAKA;AAAA;AAAA;AAGA;AACA;AACA;AAOA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjCA;AAOA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAGA;AAMA;AAAA;AAJA;AACA;AAAA;AAIA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAEA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAMA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AAIA;AAAA;AAAA;AAAA;AAMA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AAAA;AADA;AAAA;AAAA;AA6CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAVA;AAAA;AAAA;AA3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAGA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAEA;AACA;AAAA;AAZA;AAAA;AAcA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AArDA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;ACjPA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACbA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAtBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAwBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AA1CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4CA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AApHA;AACA;AACA;AAAA;AAAA;AAmHA;AA5HA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA;AAKA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAGA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AAAA;AACA;AAIA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAnCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsCA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAMA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAjBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAorBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAdA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAjBA;;;;;;;;;;;;;;;;;;;;AClSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACdA;AAKA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAGA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAvDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAQA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAxLA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACRA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAOA;AACA;AAAA;AAAA;AAAA;AAKA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;;;;;;;;;;;;;;;;ACnDA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAvBA;AAAA;AAAA;;;;;;;;;;;;;;;;;;ACVA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAxBA;AAAA;AAAA;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;ACfA;AACA;AAEA;AAAA;AAGA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAAA;;;;;;;;;;;;;;;;;ACjBA;AACA;AAEA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;AChBA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AA8CA;AAAA;AA9CA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;;;;;;;;;;;ACrsources":["webpack://@coze/chat-sdk/._src_chatflow_helper_chat-service.ts","webpack://@coze/chat-sdk/._src_chatflow_helper_gen-error-render.tsx","webpack://@coze/chat-sdk/._src_chatflow_helper_get-connector-id.ts","webpack://@coze/chat-sdk/._src_chatflow_helper_get-token.ts","webpack://@coze/chat-sdk/._src_chatflow_hooks_use-init-chat.ts","webpack://@coze/chat-sdk/._src_chatflow_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-background_helper.ts","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-background_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-error_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-footer_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-framework_hooks_use-web-keyboard-handle.ts","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-framework_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-group-list_chat-group_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-group-list_command_comman-tooltip_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-group-list_command_command-audio_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-group-list_command_command-copy_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-group-list_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-group-list_prologue-group_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-group-list_query-message_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-group-list_resp-message-list_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-group-list_suggestion-list_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-header_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-input_clear-context_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-input_delete-message_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-input_hooks_use-command-slot.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-input_hooks_use-input-adjust.ts","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-input_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-loading_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-modal_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-scroll-view_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-slot_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-toast_index.tsx","webpack://@coze/chat-sdk/._src_libs_framework_index.ts","webpack://@coze/chat-sdk/._src_libs_hooks_index.ts","webpack://@coze/chat-sdk/._src_libs_hooks_use-persist-callback.ts","webpack://@coze/chat-sdk/._src_libs_hooks_use-size.ts","webpack://@coze/chat-sdk/._src_libs_hooks_use-update-effect.ts","webpack://@coze/chat-sdk/._src_libs_hooks_use-valid-context.ts","webpack://@coze/chat-sdk/._src_libs_i18n_index.ts","webpack://@coze/chat-sdk/._src_libs_i18n_resource_index.ts","webpack://@coze/chat-sdk/._src_libs_i18n_resource_simple_en.ts","webpack://@coze/chat-sdk/._src_libs_i18n_resource_simple_zh.ts","webpack://@coze/chat-sdk/._src_libs_i18n_resource_special_en.tsx","webpack://@coze/chat-sdk/._src_libs_i18n_resource_special_zh.tsx","webpack://@coze/chat-sdk/._src_libs_index.ts","webpack://@coze/chat-sdk/._src_libs_provider_context_chat-frame-props-context.tsx","webpack://@coze/chat-sdk/._src_libs_provider_context_chat-store-context.tsx","webpack://@coze/chat-sdk/._src_libs_provider_context_index.tsx","webpack://@coze/chat-sdk/._src_libs_provider_framework.tsx","webpack://@coze/chat-sdk/._src_libs_provider_hooks_use-chat-max-width.ts","webpack://@coze/chat-sdk/._src_libs_provider_hooks_use-init-bg-info.ts","webpack://@coze/chat-sdk/._src_libs_provider_hooks_use-init-success.ts","webpack://@coze/chat-sdk/._src_libs_provider_hooks_use-laytout.ts","webpack://@coze/chat-sdk/._src_libs_provider_hooks_use-theme-type.ts","webpack://@coze/chat-sdk/._src_libs_provider_hooks_use-voice-info.ts","webpack://@coze/chat-sdk/._src_libs_provider_index.tsx","webpack://@coze/chat-sdk/._src_libs_provider_store_api-client.ts","webpack://@coze/chat-sdk/._src_libs_provider_store_chat-info.ts","webpack://@coze/chat-sdk/._src_libs_provider_store_chat-input.ts","webpack://@coze/chat-sdk/._src_libs_provider_store_chat-props.ts","webpack://@coze/chat-sdk/._src_libs_provider_store_chat-status.ts","webpack://@coze/chat-sdk/._src_libs_provider_store_conversation.ts","webpack://@coze/chat-sdk/._src_libs_provider_store_index.ts","webpack://@coze/chat-sdk/._src_libs_provider_store_ui-event.ts","webpack://@coze/chat-sdk/._src_libs_provider_store_user-info.ts","webpack://@coze/chat-sdk/._src_libs_services_helper_chat-service.ts","webpack://@coze/chat-sdk/._src_libs_services_helper_message_index.ts","webpack://@coze/chat-sdk/._src_libs_services_helper_message_send-message_async-send-message.ts","webpack://@coze/chat-sdk/._src_libs_services_helper_message_send-message_multi-send-message.ts","webpack://@coze/chat-sdk/._src_libs_services_helper_message_send-message_raw-send-message.ts","webpack://@coze/chat-sdk/._src_libs_services_index.ts","webpack://@coze/chat-sdk/._src_libs_services_use-audio-speech.ts","webpack://@coze/chat-sdk/._src_libs_services_use-chat-init.ts","webpack://@coze/chat-sdk/._src_libs_services_use-clear-context.ts","webpack://@coze/chat-sdk/._src_libs_services_use-clear-message.ts","webpack://@coze/chat-sdk/._src_libs_services_use-create-prologue-message.ts","webpack://@coze/chat-sdk/._src_libs_services_use-scroll-more.ts","webpack://@coze/chat-sdk/._src_libs_services_use-send-message.ts","webpack://@coze/chat-sdk/._src_libs_types_base_chat.ts","webpack://@coze/chat-sdk/._src_libs_types_base_file.ts","webpack://@coze/chat-sdk/._src_libs_types_base_index.ts","webpack://@coze/chat-sdk/._src_libs_types_base_ui-event.ts","webpack://@coze/chat-sdk/._src_libs_types_index.ts","webpack://@coze/chat-sdk/._src_libs_types_services_send-message.ts","webpack://@coze/chat-sdk/._src_libs_types_utils_i18n.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_audio-input_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_audio-input_use-audio-record.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_audio-play_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_audio-wave_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_avatar_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_bubble-text_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_bubble_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_button_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_c-image_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_center-aligned-box_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_check-box_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_disable-container_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_dot_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_error-boundary_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_error-retry_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_file-chooser_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_icon-button_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_link_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_context_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_helper_add-indicator.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_helper_autofix-img.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_helper_autofix-link.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_helper_autofix.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_helper_gen-ast.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_helper_get-text-from-paragraph.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_helper_traversal-last-node.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_hooks_use-render-change.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_hooks_use-smooth-ast-change.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_hooks_use-smooth-show-markdown.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_hooks_use-task-change.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_block_blockquote_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_block_code_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_block_heading_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_block_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_block_list-item_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_block_list_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_block_paragpha_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_block_table_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_block_thematic-break_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_break_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_delete_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_emphasis_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_html_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_image_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_indicator_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_inline-code_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_link_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_strong_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_text_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_root_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_util_ast.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_modal_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_radio_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_scroll-view_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_scroll-view_use-helper-button.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_scroll-view_use-wheel-handle.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_spacing_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_spinning_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_svg_hooks_use-broom-svg.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_svg_hooks_use-copy.svg.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_svg_hooks_use-feishu-svg.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_svg_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_toast_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_tooltip_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_upload_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_waiting_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_audio-input_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_audio-input_permission-deny_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_hooks_use-audio-message-handle.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_hooks_use-keyborader-height-handle.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_hooks_use-multi-mode-message-handle.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_hooks_use-text-input-handle.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_send-btn_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_send-switch-btn_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_task-message_indext.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_type.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_upload-btn_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_index.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_components_chatflow-node_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_components_file_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_components_image_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_components_markdown_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_components_text_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_components_waiting_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_container_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_content_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_helper_extract-chatlow-message.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_helper_is-support-snaswer-message.ts","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_onboarding_index.tsx","webpack://@coze/chat-sdk/._src_libs_ui-kit_suggestion-list_index.tsx","webpack://@coze/chat-sdk/._src_libs_utils_adapter.ts","webpack://@coze/chat-sdk/._src_libs_utils_decorder.ts","webpack://@coze/chat-sdk/._src_libs_utils_device.ts","webpack://@coze/chat-sdk/._src_libs_utils_env.ts","webpack://@coze/chat-sdk/._src_libs_utils_event-source_event-source.ts","webpack://@coze/chat-sdk/._src_libs_utils_event-source_request.ts","webpack://@coze/chat-sdk/._src_libs_utils_event-source_tt-event-source.ts","webpack://@coze/chat-sdk/._src_libs_utils_event-source_wx-event-source.ts","webpack://@coze/chat-sdk/._src_libs_utils_get-cdn-url.ts","webpack://@coze/chat-sdk/._src_libs_utils_get-file-type.ts","webpack://@coze/chat-sdk/._src_libs_utils_get-scroll-info.ts","webpack://@coze/chat-sdk/._src_libs_utils_get-svg-base64.ts","webpack://@coze/chat-sdk/._src_libs_utils_index.ts","webpack://@coze/chat-sdk/._src_libs_utils_is-valid-context.ts","webpack://@coze/chat-sdk/._src_libs_utils_logger.ts","webpack://@coze/chat-sdk/._src_libs_utils_mini-chat-error.ts","webpack://@coze/chat-sdk/._src_libs_utils_mini-coze-api.ts","webpack://@coze/chat-sdk/._src_libs_utils_modal.ts","webpack://@coze/chat-sdk/._src_libs_utils_nanoid.ts","webpack://@coze/chat-sdk/._src_libs_utils_play-audio.ts","webpack://@coze/chat-sdk/._src_libs_utils_recorder-manager_h5-recorder-manager.ts","webpack://@coze/chat-sdk/._src_libs_utils_recorder-manager_index.ts","webpack://@coze/chat-sdk/._src_libs_utils_recorder-manager_taro-recorder-manager.ts","webpack://@coze/chat-sdk/._src_libs_utils_recorder-manager_type.ts","webpack://@coze/chat-sdk/._src_libs_utils_safe-json-parse.ts","webpack://@coze/chat-sdk/._src_libs_utils_taro_clipboard.ts","webpack://@coze/chat-sdk/._src_libs_utils_taro_get-and-open-setting.ts","webpack://@coze/chat-sdk/._src_libs_utils_taro_get-bounding-rect.ts","webpack://@coze/chat-sdk/._src_libs_utils_taro_get-viewport-bounding-rect.ts","webpack://@coze/chat-sdk/._src_libs_utils_toast.ts","webpack://@coze/chat-sdk/._src_libs_utils_webm-to-wav.ts","webpack://@coze/chat-sdk/._src_chatflow_hooks_index.module.less","webpack://@coze/chat-sdk/._src_chatflow_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-background_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-error_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-footer_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-framework_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-group-list_chat-group_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-group-list_command_comman-tooltip_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-group-list_command_command-audio_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-group-list_command_command-copy_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-group-list_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-group-list_prologue-group_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-group-list_query-message_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-group-list_resp-message-list_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-header_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-input_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-loading_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-scroll-view_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-slot_index.module.less","webpack://@coze/chat-sdk/._src_libs_framework_component_chat-toast_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_audio-input_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_audio-play_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_audio-wave_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_avatar_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_bubble-text_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_bubble_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_button_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_c-image_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_center-aligned-box_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_check-box_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_disable-container_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_error-retry_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_file-chooser_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_icon-button_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_link_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_block_blockquote_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_block_code_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_block_heading_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_block_list_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_block_table_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_block_thematic-break_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_break_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_delete_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_emphasis_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_image_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_indicator_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_inline-code_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_link_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_strong_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_phrase_text_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_md-stream_render_root_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_modal_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_radio_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_scroll-view_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_spacing_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_spinning_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_svg_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_toast_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_tooltip_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_upload_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_atomic_waiting_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_audio-input_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_audio-input_permission-deny_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_send-btn_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_send-switch-btn_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_task-message_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_chat-input_upload-btn_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_components_chatflow-node_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_components_file_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_components_image_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_components_markdown_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_components_text_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_components_waiting_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_message_container_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_onboarding_index.module.less","webpack://@coze/chat-sdk/._src_libs_ui-kit_suggestion-list_index.module.less","webpack://@coze/chat-sdk/ignored|_Users_bytedance_Documents_code_coze_coze_mini_chat_node_modules_.pnpm_@coze+api@1.0.21_axios@1.7.9_node_modules_@coze_api_dist_esm|crypto","webpack://@coze/chat-sdk/ignored|_Users_bytedance_Documents_code_coze_coze_mini_chat_node_modules_.pnpm_@coze+api@1.0.21_axios@1.7.9_node_modules_@coze_api_dist_esm|jsonwebtoken","webpack://@coze/chat-sdk/ignored|_Users_bytedance_Documents_code_coze_coze_mini_chat_node_modules_.pnpm_@coze+api@1.0.21_axios@1.7.9_node_modules_@coze_api_dist_esm|node-fetch","webpack://@coze/chat-sdk/ignored|_Users_bytedance_Documents_code_coze_coze_mini_chat_node_modules_.pnpm_@coze+api@1.0.21_axios@1.7.9_node_modules_@coze_api_dist_esm|os"],"sourcesContent":["import {\n  BgImageInfo,\n  ChatInfo,\n  ChatService,\n  type ChatServiceProps,\n} from \"@/libs\";\nimport { type IChatFlowProps } from \"../type\";\nimport { getConnectorId } from \"./get-connector-id\";\nimport { StreamChatReq, RequestOptions, StreamChatData } from \"@coze/api\";\nimport {\n  getCdnUrl,\n  logger,\n  MiniChatError,\n  MiniChatErrorCode,\n} from \"@/libs/utils\";\nimport type {\n  ProjectInfoResp,\n  WorkflowInfoResp,\n  BackgroundImageResp,\n} from \"./chat-service-type\";\nimport { SuggestPromoteInfo } from \"@/libs/types/base/chat\";\n\nexport const getCustomAppInfo = (chatFlowProps: IChatFlowProps) => {\n  let bgInfo: BgImageInfo | undefined;\n  if (chatFlowProps.areaUi?.bgInfo && chatFlowProps.areaUi?.bgInfo?.imgUrl) {\n    bgInfo = {\n      imgUrl: chatFlowProps.areaUi.bgInfo.imgUrl,\n      themeColor: chatFlowProps.areaUi.bgInfo.themeColor,\n      gradientPosition: {\n        left: 0,\n        right: 0,\n      },\n      canvasPosition: {\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0,\n      },\n    };\n  }\n  return {\n    name: chatFlowProps?.project?.name,\n    icon_url: chatFlowProps?.project?.iconUrl,\n    onboarding_info: {\n      prologue: chatFlowProps?.project?.onBoarding?.prologue || \"\",\n      suggested_questions:\n        chatFlowProps?.project?.onBoarding?.suggestions || [],\n    },\n    description: chatFlowProps.project?.desc,\n    suggestPromoteInfo: chatFlowProps.project?.suggestPromoteInfo,\n    bgInfo: bgInfo\n      ? {\n          pc: bgInfo,\n          mobile: bgInfo,\n        }\n      : undefined,\n  };\n};\n\nexport const getBgInfo = (\n  resp?: BackgroundImageResp\n): BgImageInfo | undefined => {\n  if (resp?.origin_image_url) {\n    return {\n      canvasPosition: {\n        height: resp.canvas_position?.height || 0,\n        left: resp.canvas_position?.left || 0,\n        top: resp.canvas_position?.top || 0,\n        width: resp.canvas_position?.width || 0,\n      },\n      gradientPosition: {\n        left: resp.gradient_position?.left || 0,\n        right: resp.gradient_position?.right || 0,\n      },\n      imgUrl: resp.origin_image_url || \"\",\n      themeColor: resp.theme_color || \"\",\n    };\n  }\n};\n\nexport const combineRequestOptions = (\n  appData?: ProjectInfoResp[\"data\"],\n  workflowData?: WorkflowInfoResp[\"role\"],\n  chatFlowProps?: IChatFlowProps\n) => {\n  const { icon_url: iconUrl, name = \"\" } = appData || {};\n\n  const appInfoResult: Partial<ChatInfo> = {\n    name: name,\n    icon_url: iconUrl,\n    description: \"\",\n    create_time: 0,\n    update_time: 0,\n    version: \"\",\n  };\n  appInfoResult.onboarding_info = { prologue: \"\", suggested_questions: [] };\n  appInfoResult.name =\n    workflowData?.name ||\n    appInfoResult.name ||\n    chatFlowProps?.project?.defaultName;\n  appInfoResult.icon_url =\n    workflowData?.avatar?.image_url ||\n    appInfoResult.icon_url ||\n    chatFlowProps?.project.defaultIconUrl;\n\n  appInfoResult.onboarding_info = {\n    prologue: workflowData?.onboarding_info?.prologue || \"\",\n    display_all_suggestions:\n      workflowData?.onboarding_info?.display_all_suggestions,\n    suggested_questions:\n      workflowData?.onboarding_info?.suggested_questions?.filter(\n        (item) => !!item\n      ) || [],\n  };\n  appInfoResult.suggestPromoteInfo = workflowData?.suggest_reply_info\n    ? {\n        suggestReplyMode: workflowData?.suggest_reply_info?.suggest_reply_mode,\n        customizedSuggestPrompt:\n          workflowData?.suggest_reply_info?.customized_suggest_prompt,\n      }\n    : undefined;\n  appInfoResult.bgInfo = {\n    pc: getBgInfo(workflowData?.background_image_info?.web_background_image),\n    mobile: getBgInfo(\n      workflowData?.background_image_info?.mobile_background_image\n    ),\n  };\n  appInfoResult.voiceInfo = {\n    isTextToVoiceEnable: workflowData?.audio_config?.is_text_to_voice_enable,\n    voiceConfigMap: workflowData?.audio_config?.voice_config_map,\n  };\n  appInfoResult.inputMode = {\n    default: workflowData?.user_input_config?.default_input_mode,\n  };\n  return appInfoResult;\n};\n\nexport class ChatFlowService extends ChatService {\n  private chatFlowProps: IChatFlowProps;\n  constructor(props: ChatServiceProps, chatFlowProps: IChatFlowProps) {\n    super(props);\n    this.chatFlowProps = chatFlowProps;\n  }\n  updateChatFlowProps(chatFlowProps: IChatFlowProps) {\n    this.chatFlowProps = chatFlowProps;\n  }\n  async createNewConversation() {\n    return this._createNewConversation(false);\n  }\n  async getAppInfo() {\n    const connectorId = getConnectorId(this.chatFlowProps);\n    const isWebSdk = this.chatFlowProps?.project?.mode === \"websdk\";\n    const [appRes, workflowRes] = await Promise.allSettled([\n      isWebSdk\n        ? this.apiClient?.get<unknown, ProjectInfoResp>(\n            `/v1/apps/${this.chatFlowProps?.project?.id}?connector_id=${connectorId}`\n          )\n        : null,\n      this.chatFlowProps?.workflow?.id\n        ? this.apiClient?.get<unknown, { data: WorkflowInfoResp }>(\n            `/v1/workflows/${this.chatFlowProps?.workflow?.id}?${[\n              `connector_id=${connectorId}`,\n              `is_debug=${\n                this.chatFlowProps?.project?.mode === \"draft\" ? \"true\" : \"\"\n              }`,\n              `caller=${this.chatFlowProps?.project?.caller || \"\"}`,\n            ].join(\"&\")}`\n          )\n        : null,\n    ]);\n    const appData =\n      appRes?.status === \"fulfilled\" ? appRes?.value?.data : undefined;\n    const workflowData =\n      workflowRes?.status === \"fulfilled\"\n        ? workflowRes?.value?.data?.role\n        : undefined;\n    logger.debug(\"Get Workflow Info: \", { appRes, workflowRes });\n    if (isWebSdk && !appData) {\n      throw new MiniChatError(\n        MiniChatErrorCode.SDK_API_APP_UnPublished,\n        \"The app is not published\"\n      );\n    }\n    // 默认数据不用合并进去\n    const appInfo = combineRequestOptions(appData, workflowData);\n    if (this.chatFlowProps?.workflow?.id && !appInfo.icon_url) {\n      appInfo.icon_url = getCdnUrl(\n        this.chatFlowProps.setting?.cdnBaseUrlPath,\n        \"assets/imgs/chatflow-logo.png\"\n      );\n    }\n\n    logger.debug(\"Get Workflow Info(Combine):\", appInfo);\n    return {\n      appId: this.appId,\n      type: this.chatType,\n      ...appInfo,\n    };\n  }\n  getOrCreateConversationId() {\n    return this._createNewConversation(true);\n  }\n  private async _createNewConversation(isCreateNew: boolean = false) {\n    if (this.chatFlowProps?.project?.type === \"bot\") {\n      const { id: conversationId, last_section_id: sectionId = \"\" } =\n        await this.apiClient.conversations.create({\n          // @ts-expect-error -- linter-disable-autofix\n          connector_id: this.connectorId,\n        });\n      return { conversationId, sectionId };\n    } else {\n      const { id: conversationId, last_section_id: sectionId = \"\" } =\n        await this.apiClient.conversations.create({\n          // @ts-expect-error -- linter-disable-autofix\n          app_id: this.appId,\n          conversation_name: this.chatFlowProps?.project?.conversationName,\n          get_or_create: isCreateNew,\n          workflow_id: this.chatFlowProps?.workflow?.id,\n          draft_mode: this.chatFlowProps?.project?.mode === \"draft\",\n          connector_id: getConnectorId(this.chatFlowProps),\n        });\n      return { conversationId, sectionId };\n    }\n  }\n  asyncChat(\n    params: StreamChatReq & {\n      connector_id?: string;\n      suggestPromoteInfo?: SuggestPromoteInfo;\n    },\n    options?: RequestOptions\n  ): AsyncIterable<StreamChatData> {\n    const bodyData: Record<string, unknown> = {};\n    bodyData.additional_messages = params.additional_messages || [];\n    bodyData.connector_id = params.connector_id;\n    bodyData.conversation_id = params.conversation_id;\n\n    bodyData.workflow_id = this.chatFlowProps?.workflow?.id;\n    bodyData.parameters = this.chatFlowProps?.workflow?.parameters;\n    bodyData.execute_mode =\n      this.chatFlowProps?.project?.mode === \"draft\" ? \"DEBUG\" : undefined;\n    bodyData.app_id =\n      this.chatFlowProps?.project?.type === \"app\"\n        ? this.chatFlowProps?.project?.id\n        : undefined;\n    bodyData.bot_id =\n      this.chatFlowProps?.project?.type === \"bot\"\n        ? this.chatFlowProps?.project?.id\n        : undefined;\n\n    bodyData.connector_id = getConnectorId(this.chatFlowProps);\n    bodyData.ext = {\n      _caller: this.chatFlowProps?.project?.caller,\n    };\n    bodyData.suggest_reply_info = params.suggestPromoteInfo\n      ? {\n          suggest_reply_mode: params.suggestPromoteInfo?.suggestReplyMode,\n          customized_suggest_prompt:\n            params.suggestPromoteInfo?.customizedSuggestPrompt,\n        }\n      : undefined;\n    // @ts-expect-error -- linter-disable-autofix\n    return this.apiClient.workflows.chat.stream(bodyData, options);\n  }\n}\n","import { IChatFlowProps } from \"../type\";\nimport { ChatErrorDefault, IMiniChatError } from \"@/libs\";\nimport { Spacing } from \"@/libs/ui-kit\";\nexport const genErrorRender = (props: IChatFlowProps) => {\n  if (!props?.areaUi?.input?.renderChatInputTopSlot) {\n    return undefined;\n  }\n  return (_error?: IMiniChatError, retryChatInit?: () => void) => {\n    return (\n      <Spacing width100 height100 vertical>\n        <Spacing width100 height100 flex1>\n          <ChatErrorDefault retryChatInit={retryChatInit} />\n        </Spacing>\n        {props?.areaUi?.input?.renderChatInputTopSlot?.()}\n      </Spacing>\n    );\n  };\n};\n","import { type IChatFlowProps } from \"../type\";\n\nexport const getConnectorId = (props: IChatFlowProps) => {\n  const { project } = props;\n  const { mode, connectorId } = project || {};\n  if (mode === \"websdk\") {\n    return \"999\";\n  } else if (mode === \"draft\") {\n    return \"10000010\";\n  }\n  return connectorId || \"\";\n};\n","import { request } from \"@tarojs/taro\";\nimport { type IChatFlowProps } from \"../type\";\nimport { logger } from \"@/libs/utils\";\n\nexport const getToken = async (props: IChatFlowProps) => {\n  let token = props.auth?.token;\n  let refreshToken = props.auth?.refreshToken;\n  if (props.auth?.type === \"internal\") {\n    token = (await getTokenInternal()) || \"\";\n    refreshToken = getTokenInternal;\n  }\n  return { token, refreshToken };\n};\nasync function getTokenInternal() {\n  try {\n    const result = await request({\n      url: \"/api/permission_api/coze_web_app/impersonate_coze_user\",\n      method: \"POST\",\n      dataType: \"json\",\n      timeout: 30000,\n      data: {},\n    });\n    return result.data?.data?.access_token;\n  } catch (_err) {\n    logger.error(\"getTokenInternal error\", _err);\n    return \"\";\n  }\n}\n","import { useEffect, useMemo, useRef, useState } from \"react\";\nimport { useUpdateEffect } from \"@/libs/hooks\";\nimport { logger } from \"@/libs/utils\";\nimport { type ChatFrameworkProps, ChatType } from \"@/libs/types\";\nimport { genErrorRender } from \"../helper/gen-error-render\";\nimport { type IChatFlowProps } from \"../type\";\nimport { getToken } from \"../helper/get-token\";\nimport { ChatFlowService, getCustomAppInfo } from \"../helper/chat-service\";\nimport { getConnectorId } from \"../helper/get-connector-id\";\nimport styles from \"./index.module.less\";\nexport const useInitChat = (props: IChatFlowProps) => {\n  const { project: projectInfo, userInfo } = props;\n  const [hasReady, setHasReady] = useState(false);\n  const [authProp, setAuthProp] = useState<ChatFrameworkProps[\"auth\"]>();\n  const refService = useRef<ChatFlowService>();\n\n  // The parameters will be changed immediately, so we don't code it in useEffect.\n  refService.current?.updateChatFlowProps(props);\n  const syncModifyChatProps: Omit<ChatFrameworkProps, \"auth\"> = useMemo(\n    () => ({\n      chat: {\n        appId: projectInfo?.id,\n        type: projectInfo?.type === \"app\" ? ChatType.App : ChatType.Bot,\n        ...getCustomAppInfo(props),\n      },\n      user: userInfo,\n      ui: {\n        layout: props.areaUi?.layout || \"pc\",\n        isMiniCustomHeader: props?.areaUi?.isMiniCustomHeader,\n        isReadonly: props?.areaUi?.isDisabled,\n        header: {\n          isNeed: false,\n          ...(props?.areaUi?.header || {}),\n        },\n        footer: {\n          containerClassName:\n            props.project?.mode !== \"websdk\"\n              ? styles[\"footer-container\"]\n              : undefined,\n\n          ...props?.areaUi?.footer,\n        },\n        loading: {\n          renderLoading: props?.areaUi?.renderLoading,\n        },\n        error: {\n          renderError: genErrorRender(props),\n        },\n        chatSlot: {\n          base: {\n            maxWidth: 600,\n          },\n          input: props?.areaUi?.input,\n          clearContext: props?.areaUi?.clearContext,\n          clearMessage: props?.areaUi?.clearMessage,\n          uploadBtn: props?.areaUi?.uploadBtn,\n          message: props?.areaUi?.message,\n        },\n      },\n      eventCallbacks: {\n        onImageClick: props?.eventCallbacks?.onImageClick,\n        onInitRetry: () => {\n          setHasReady(false);\n        },\n        onThemeChange: props?.eventCallbacks?.onThemeChange,\n        message: props?.eventCallbacks?.message,\n      },\n      setting: {\n        ...(props?.setting || {}),\n        onGetCustomChatService: (chatServiceProps) => {\n          refService.current = new ChatFlowService(chatServiceProps, props);\n          return refService.current;\n        },\n      },\n    }),\n    [props]\n  );\n  useEffect(() => {\n    if (hasReady) {\n      return;\n    }\n\n    // just check param for console, don't do any more;\n    checkParam(props);\n    (async () => {\n      // getToken will never throw an exception, so we don't need to catch it;\n      const { token, refreshToken } = await getToken(props);\n      setAuthProp({\n        // don't need to check token, because it will be checked in chat framework\n        token: token as string,\n        onRefreshToken: refreshToken as () => Promise<string>,\n        connectorId: getConnectorId(props),\n      });\n      setHasReady(true);\n    })();\n  }, [hasReady]);\n\n  useUpdateEffect(() => {\n    logger.info(\"useInitChat reRender\");\n    setHasReady(false);\n  }, [\n    projectInfo?.id,\n    projectInfo?.type,\n    projectInfo?.conversationName,\n    projectInfo?.mode,\n    props?.workflow?.id,\n  ]);\n  return {\n    hasReady,\n    chatProps: Object.assign(syncModifyChatProps, { auth: authProp }),\n  };\n};\n\nfunction checkParam(props: IChatFlowProps) {\n  let error: Error | undefined;\n  if (props?.project?.type === \"bot\") {\n    if (props?.project?.mode !== \"draft\") {\n      logger.error(\"mode must be draft when project type is bot\");\n    }\n  } else {\n    if (props?.auth?.type !== \"internal\") {\n      if (!props?.auth?.token) {\n        logger.error(\"token is required when auth type is not internal\");\n      }\n    }\n  }\n  return error;\n}\n","import { FC, PropsWithChildren, useEffect } from \"react\";\nimport { IChatFlowProps } from \"./type\";\nimport { useInitChat } from \"./hooks/use-init-chat\";\nimport {\n  ChatFramework,\n  ChatSlot,\n  useConversationStore,\n  useInitSuccess,\n} from \"@/libs\";\nimport { logger } from \"@/libs/utils\";\nimport { useUpdateEffect } from \"@/libs/hooks\";\nimport { View } from \"@tarojs/components\";\nimport styles from \"./index.module.less\";\nimport { CenterAlignedBox, Spinning } from \"@/libs/ui-kit\";\nimport cls from \"classnames\";\n\nconst ChatFlowSlot: FC<PropsWithChildren<IChatFlowProps>> = (props) => {\n  const inProcessChatMessageGroup = useConversationStore((store) => {\n    return store.inProcessChatMessageGroup;\n  });\n  const executeId = inProcessChatMessageGroup?.query?.extData\n    ?.executeId as string;\n  const onGetChatFlowExecuteId = props?.eventCallbacks?.onGetChatFlowExecuteId;\n  useUpdateEffect(() => {\n    logger.debug(\"ChatFlow excuteId\", executeId);\n    if (executeId && onGetChatFlowExecuteId) {\n      onGetChatFlowExecuteId(executeId);\n    }\n  }, [executeId]);\n\n  const isChatInitSuccess = useInitSuccess();\n  useEffect(() => {\n    if (isChatInitSuccess) {\n      props?.eventCallbacks?.onInitSuccess?.();\n    }\n  }, [isChatInitSuccess]);\n  return (\n    <>\n      {props.children || (\n        <ChatSlot\n          className={cls({\n            [styles[\"chat-slot-websdk\"]]: props.project.mode === \"websdk\",\n          })}\n        />\n      )}\n    </>\n  );\n};\n\nexport const ChatFlowFramework: FC<PropsWithChildren<IChatFlowProps>> = (\n  props\n) => {\n  logger.setLoglevel(props?.setting?.logLevel);\n  const { chatProps, hasReady } = useInitChat(props);\n  const { auth, ...restProps } = props || {};\n  logger.info(\"ChatFlow props\", {\n    props: restProps,\n    hasReady,\n    auth: {\n      type: auth?.type,\n      token: `${auth?.token?.slice(0, 5)}*******${auth?.token?.slice(-5, 5)}`,\n    },\n  });\n  if (!chatProps?.auth || !hasReady) {\n    return (\n      <CenterAlignedBox className={styles.loading}>\n        {props.areaUi?.renderLoading ? (\n          props.areaUi?.renderLoading()\n        ) : (\n          <Spinning />\n        )}\n      </CenterAlignedBox>\n    );\n  }\n  return (\n    <View style={props.style} className={styles.chatflow}>\n      <ChatFramework {...chatProps} auth={chatProps.auth}>\n        <ChatFlowSlot {...props} />\n      </ChatFramework>\n    </View>\n  );\n};\n","import { BgImageInfo } from \"@/libs/types\";\n\ntype DeviceMode = \"mobile\" | \"pc\";\nexport const cropperSizeMap = {\n  pc: {\n    width: 486,\n    height: 346,\n  },\n  mobile: {\n    width: 248,\n    height: 346,\n  },\n};\n\nfunction hexToRgb(hex: string) {\n  // 如果是三位十六进制，将其扩展为六位\n  if (hex.length === 4) {\n    hex = hex[1] + hex[1] + hex[2] + hex[2] + hex[3] + hex[3];\n  }\n  hex = hex.slice(1); // 去掉'#'\n  let r = parseInt(hex.slice(0, 2), 16);\n  let g = parseInt(hex.slice(2, 4), 16);\n  let b = parseInt(hex.slice(4), 16);\n  return `rgb(${r},${g},${b})`;\n}\n// 输入透明度系数 和color 返回新的颜色\nexport function addAlpha(color: string, alpha: number): string {\n  if (/^((#[0-9A-Fa-f]{3})|(#[0-9A-Fa-f]{6}))$/.test(color)) {\n    color = hexToRgb(color);\n  }\n  const regex = /^rgba\\((\\d{1,3}),(\\d{1,3}),(\\d{1,3})\\)$/;\n  if (!regex.test(color)) {\n    return color;\n  }\n\n  const values: string[] = color.slice(5, -1).split(\",\");\n  values.push(alpha.toString());\n\n  const newColor = `rgba(${values.join(\",\")})`;\n\n  return newColor;\n}\n\nexport const getGradient = (\n  gradient: BgImageInfo[\"gradientPosition\"],\n  canvasData: BgImageInfo[\"canvasPosition\"],\n  cropperWidth = 0\n) => {\n  const { left: cropperImgLeft = 0, width: cropperImgWidth = 0 } = canvasData;\n  if (cropperImgWidth && cropperWidth) {\n    return {\n      left: cropperImgLeft / cropperWidth,\n      right: (cropperWidth - cropperImgWidth - cropperImgLeft) / cropperWidth,\n    };\n  } else {\n    return gradient;\n  }\n};\n\nexport const getDeviceMode = (width: number, height: number): DeviceMode => {\n  if (!width || !height) {\n    return \"pc\";\n  }\n  return width / height <= getStandardRatio(\"mobile\") ? \"mobile\" : \"pc\";\n};\nexport const getStandardRatio = (mode: DeviceMode): number =>\n  cropperSizeMap[mode].width / cropperSizeMap[mode].height;\n","import { Image, View } from \"@tarojs/components\";\nimport { FC, useMemo } from \"react\";\nimport styles from \"./index.module.less\";\nimport { type BgImageInfoMap } from \"@/libs/types\";\nimport { addAlpha, cropperSizeMap, getDeviceMode, getGradient } from \"./helper\";\nimport { useSize } from \"@/libs/hooks\";\nimport { logger } from \"@/libs/utils\";\n\nlet chatBackGroundId: number = 1000;\nexport const ChatBackground: FC<BgImageInfoMap> = (props) => {\n  const id = useMemo(() => `chatbg_id_${chatBackGroundId++}`, []);\n  const {\n    width: containerWidth,\n    height: containerHeight,\n    reInitSize,\n  } = useSize(id);\n\n  const mode = getDeviceMode(containerWidth, containerHeight);\n  const bgInfo = props[mode];\n  if (!bgInfo || !bgInfo?.imgUrl) {\n    return null;\n  }\n  const {\n    themeColor = \"transparent\",\n    imgUrl,\n    canvasPosition,\n    gradientPosition,\n  } = bgInfo;\n  const isDefault = !canvasPosition.width || !canvasPosition.height; // 如果未设置宽高度，则使用默认模式进行渲染\n\n  const mediumColor = addAlpha(themeColor, 0.95);\n  const cropperSize = cropperSizeMap[mode];\n  const { left: gradientLeft = 0, right: gradientRight = 0 } = getGradient(\n    gradientPosition,\n    canvasPosition,\n    cropperSize.width\n  );\n  const imgWidth = containerHeight * (cropperSize.width / cropperSize.height);\n\n  logger.debug(\"ChatBackground\", containerWidth, containerHeight);\n  return (\n    <View\n      id={id}\n      className={styles[\"bg-image\"]}\n      style={{\n        backgroundColor: themeColor,\n      }}\n      ref={reInitSize}\n    >\n      <View className={styles.mask} />\n      <View\n        className={styles[\"img-container\"]}\n        style={{\n          width: isDefault ? \"100%\" : imgWidth,\n          maxWidth: isDefault ? \"100\" : imgWidth,\n        }}\n      >\n        <Gradient\n          position={gradientLeft}\n          direction=\"left\"\n          background={`linear-gradient(90deg,  ${themeColor} 10%, ${mediumColor} 28%, transparent 92.4%)`}\n          isShow={!isDefault}\n        />\n\n        {imgUrl ? (\n          <Image\n            src={imgUrl}\n            mode={isDefault ? \"aspectFill\" : \"heightFix\"}\n            className={styles.img}\n            style={\n              isDefault\n                ? {\n                    left: \"50%\",\n                    width: \"100%\",\n                    height: \"100%\",\n                    transform: \"translateX(-50%)\",\n                  }\n                : {\n                    height: `${\n                      (canvasPosition.height / cropperSize.height) * 100\n                    }%`,\n                    left: `${\n                      gradientLeft\n                        ? gradientLeft * 100\n                        : -gradientRight * 2 * 100\n                    }%`,\n                    top: `${(canvasPosition.top / cropperSize.height) * 100}%`,\n                  }\n            }\n          />\n        ) : null}\n\n        <Gradient\n          position={gradientRight}\n          direction=\"right\"\n          isShow={!isDefault}\n          background={`linear-gradient(90deg,  transparent 10% , ${mediumColor} 72%, ${themeColor} 92%)`}\n        />\n      </View>\n    </View>\n  );\n};\n\nconst Gradient: React.FC<{\n  position: number;\n  background: string;\n  direction: \"left\" | \"right\";\n  isShow?: boolean;\n}> = ({ position = 0, background, direction, isShow = true }) => {\n  if (!isShow) {\n    return null;\n  }\n  return (\n    <View\n      className={styles.gradient}\n      style={{\n        [direction]: `${(position > 0 ? position : 0) * 100 - 0.1}%`,\n        width: \"10%\",\n        background,\n        opacity: 1,\n      }}\n    />\n  );\n};\n\n/*\n 背景图方案\n  <View\n            className={styles.img}\n            style={\n              isDefault\n                ? {\n                    backgroundImage: `url(${imgUrl})`,\n                    backgroundRepeat: \"no-repeat\",\n                    backgroundPosition: \"center\",\n                    backgroundSize: \"cover\",\n                    left: \"50%\",\n                    width: \"100%\",\n                    transform: \"translateX(-50%)\",\n                  }\n                : {\n                    backgroundImage: `url(${imgUrl})`,\n                    height: `${\n                      (canvasPosition.height / cropperSize.height) * 100\n                    }%`,\n                    left: `${\n                      gradientLeft\n                        ? gradientLeft * 100\n                        : -gradientRight * 2 * 100\n                    }%`,\n                    top: `${(canvasPosition.top / cropperSize.height) * 100}%`,\n                  }\n            }\n          />\n*/\n","import { Text, View } from \"@tarojs/components\";\n\nimport { Spacing, Button } from \"@/libs/ui-kit\";\nimport { useChatInfoStore, useChatPropsStore, useI18n } from \"@/libs/provider\";\nimport styles from \"./index.module.less\";\nimport { FC } from \"react\";\n\nexport const ChatErrorDefault: FC<{ retryChatInit?: () => void }> = ({\n  retryChatInit,\n}) => {\n  const i18n = useI18n();\n  const miniChatError = useChatInfoStore((store) => store.error);\n  return (\n    <View className={styles.container}>\n      <Spacing horizontalCenter flex1 verticalCenter className={styles.content}>\n        <Spacing vertical verticalCenter horizontalCenter gap={16}>\n          <Spacing\n            className={styles[\"error-img\"]}\n            gap={4}\n            vertical\n            horizontalCenter\n            verticalCenter\n          >\n            <View className={styles[\"error-img-warn-1\"]} />\n            <View className={styles[\"error-img-warn-dot\"]} />\n          </Spacing>\n          <Text className={styles[\"error-txt\"]}>\n            {miniChatError?.getErrorMessageByI18n(\n              i18n,\n              undefined,\n              i18n.t(\"chatInitRetry\")\n            )}\n          </Text>\n          <Button onClick={retryChatInit}>{i18n.t(\"retryBtn\")}</Button>\n        </Spacing>\n      </Spacing>\n    </View>\n  );\n};\n\nexport const ChatError: FC<{ retryChatInit?: () => void }> = ({\n  retryChatInit,\n}) => {\n  const renderError = useChatPropsStore(\n    (store) => store.ui?.error?.renderError\n  );\n  const onInitRetry = useChatPropsStore(\n    (store) => store.eventCallbacks?.onInitRetry\n  );\n  const retryInit = onInitRetry || retryChatInit;\n  if (renderError) {\n    return <>{renderError(undefined, retryInit)}</>;\n  }\n  return <ChatErrorDefault retryChatInit={retryInit} />;\n};\n","import { Text } from \"@tarojs/components\";\nimport { CenterAlignedBox, Link } from \"@/libs/ui-kit\";\nimport styles from \"./index.module.less\";\nimport { useI18n, useChatPropsStore } from \"@/libs/provider\";\nimport { useMemo } from \"react\";\nimport cls from \"classnames\";\n\nexport const ChatFooter = () => {\n  const i18n = useI18n();\n  const footer = useChatPropsStore((store) => store.ui?.footer);\n  const footerContent = useMemo(() => {\n    return footer?.expressionText\n      ? getTextByExpress(footer?.expressionText, footer?.linkvars)\n      : i18n.t(\"chatFooterTip\");\n  }, [footer?.expressionText, footer?.linkvars]);\n  if (footer?.isNeed === false) {\n    return null;\n  }\n\n  return (\n    <CenterAlignedBox\n      className={cls(styles.container, footer?.containerClassName)}\n    >\n      <Text\n        className={cls(styles.footer, footer?.textClassName)}\n        numberOfLines={1}\n        overflow=\"ellipsis\"\n      >\n        {footerContent}\n      </Text>\n    </CenterAlignedBox>\n  );\n};\n\nfunction getTextByExpress(\n  expressionText: string,\n  linkvars?: Record<\n    string,\n    {\n      text: string;\n      link: string;\n    }\n  >\n) {\n  const arrLinks: React.ReactNode[] = [];\n  const splitLinkTag = \"{{{link}}}\";\n  const textWithLinkTags = expressionText.replace(\n    /\\{\\{\\s*(\\w+)\\s*\\}\\}/g,\n    (_, key) => {\n      const { link, text: linkText } = linkvars?.[key] || {};\n      if (link && linkText) {\n        arrLinks.push(<Link src={link}>{linkText}</Link>);\n        return splitLinkTag;\n      } else {\n        arrLinks.push(linkText || \"\");\n      }\n      return splitLinkTag;\n    }\n  );\n  return textWithLinkTags.split(splitLinkTag).map((item, index) => (\n    <Text key={`text_link_${index}`}>\n      {item}\n      {arrLinks[index]}\n    </Text>\n  ));\n}\n","import { UIEventType } from \"@/libs/types\";\nimport { useUiEventStore } from \"@/libs/provider/context/chat-store-context\";\nimport { isWeb, logger } from \"@/libs/utils\";\nimport { useEffect } from \"react\";\n\nexport const useWebKeyboardHandle = (chatFrameId: string) => {\n  const frameTarget = useUiEventStore((store) => store.event);\n  useEffect(() => {\n    if (isWeb && chatFrameId) {\n      const el = document.getElementById(chatFrameId);\n      let isFocused = false;\n      if (el) {\n        const onKeyDown = (e: KeyboardEvent) => {\n          logger.debug(\"Frame Target keydown\");\n          frameTarget.trigger(UIEventType.KeyDown, {\n            chatFrameId,\n            code: e.code,\n          });\n        };\n        const onKeyUp = (e: KeyboardEvent) => {\n          logger.debug(\"Frame Target keyup\", e);\n          frameTarget.trigger(UIEventType.KeyUp, {\n            chatFrameId,\n            code: e.code,\n          });\n        };\n        const onFocus = () => {\n          logger.debug(\"Frame Target focus\");\n          isFocused = true;\n          frameTarget.trigger(UIEventType.FrameFocus, {\n            chatFrameId,\n          });\n        };\n        const onBlur = () => {\n          logger.debug(\"Frame Target  blur\");\n          isFocused = false;\n          frameTarget.trigger(UIEventType.FrameBlur, {\n            chatFrameId,\n          });\n        };\n        const triggerFocus = () => {\n          el.focus();\n          // 已经focus了，不会再次出发，因此需要手动触发focus事件\n          if (isFocused) {\n            onFocus?.();\n          }\n        };\n        el.addEventListener(\"keydown\", onKeyDown);\n        el.addEventListener(\"keyup\", onKeyUp);\n        el.addEventListener(\"focus\", onFocus);\n        el.addEventListener(\"blur\", onBlur);\n        frameTarget.on(UIEventType.TriggerFocus, triggerFocus);\n\n        el.setAttribute(\"tabindex\", \"0\");\n        setTimeout(() => {\n          el.focus();\n        }, 1000);\n\n        return () => {\n          el.removeEventListener(\"keydown\", onKeyDown);\n          el.removeEventListener(\"keyup\", onKeyUp);\n          el.removeEventListener(\"focus\", onFocus);\n          el.removeEventListener(\"blur\", onBlur);\n          frameTarget.off(UIEventType.TriggerFocus, triggerFocus);\n        };\n      }\n    }\n  }, [chatFrameId]);\n};\n","import { UIEventType, type ChatFrameworkProps } from \"@/libs/types\";\nimport { useChatInit } from \"@/libs/services\";\nimport {\n  ChatFrameProvider,\n  useChatInfoStore,\n  useChatPropsStore,\n  useInitBgInfo,\n  useIsMobile,\n  useThemeType,\n} from \"@/libs/provider\";\nimport { ChatBackground } from \"../chat-background\";\nimport cls from \"classnames\";\nimport { ChatSlot } from \"../chat-slot\";\nimport { ChatLoading } from \"../chat-loading\";\nimport { Spacing } from \"@/libs/ui-kit\";\nimport { ChatFooter } from \"../chat-footer\";\nimport { ChatHeader } from \"../chat-header\";\nimport { View } from \"@tarojs/components\";\nimport { ChatToast } from \"../chat-toast\";\nimport { ChatModal } from \"../chat-modal\";\nimport \"../../../ui-kit/token/index.css\";\nimport styles from \"./index.module.less\";\nimport { logger } from \"@/libs/utils\";\nimport { ChatError } from \"../chat-error\";\nimport { ReactNode, useEffect, useMemo } from \"react\";\nimport { eventCenter } from \"@tarojs/taro\";\nimport { useWebKeyboardHandle } from \"./hooks/use-web-keyboard-handle\";\n\nconst ChatFrameInit = ({ children }) => {\n  const { isLoading, error } = useChatInfoStore((store) => ({\n    isLoading: store.isLoading,\n    error: store.error,\n  }));\n\n  logger.info(\"in chat frame init\", { isLoading, error });\n  const { retryChatInit } = useChatInit();\n\n  if (error) {\n    return <ChatError retryChatInit={retryChatInit} />;\n  }\n  if (isLoading) {\n    return <ChatLoading />;\n  }\n  return <>{children}</>;\n};\n\nlet frameId = 1000;\nexport const ChatContent = ({ children }: { children?: ReactNode }) => {\n  const bgInfo = useInitBgInfo();\n  const chatFrameId = useMemo(() => `chat_frame_${frameId++}`, []);\n  const isMobile = useIsMobile();\n  const themeType = useThemeType();\n  const onThemeChange = useChatPropsStore(\n    (store) => store.eventCallbacks?.onThemeChange\n  );\n  const frameworkClassName = useChatPropsStore(\n    (store) => store.ui?.frameworkClassName\n  );\n  const isBgTheme = themeType === \"bg-theme\";\n  useWebKeyboardHandle(chatFrameId);\n  useEffect(() => {\n    onThemeChange?.(themeType);\n  }, [themeType]);\n  return (\n    <Spacing\n      vertical\n      className={cls(\n        styles.container,\n        \"light-theme chat-root\",\n        {\n          \"bg-theme\": isBgTheme,\n          \"bg-mobile\": isMobile,\n        },\n        frameworkClassName\n      )}\n      onClick={() => {\n        eventCenter.trigger(UIEventType.FrameClick);\n      }}\n      id={chatFrameId}\n    >\n      {isBgTheme ? <ChatBackground {...bgInfo} /> : null}\n      <ChatHeader />\n      <View className={styles.chat}>\n        <ChatFrameInit>{children || <ChatSlot />}</ChatFrameInit>\n      </View>\n      <ChatFooter />\n      <ChatToast />\n      <ChatModal />\n    </Spacing>\n  );\n};\n\nexport const ChatFramework = ({ children, ...props }: ChatFrameworkProps) => {\n  logger.info(\"SdkVersion: 0.1.3-alpha.2025021406\");\n  return (\n    <ChatFrameProvider {...props}>\n      <ChatContent>{children}</ChatContent>\n    </ChatFrameProvider>\n  );\n};\n","import { FC, memo } from \"react\";\n\nimport { Spacing } from \"@/libs/ui-kit\";\nimport { type ChatMessageGroup } from \"@/libs/types\";\n\nimport { RespMessageList } from \"../resp-message-list\";\nimport { QueryMessage } from \"../query-message\";\nimport styles from \"./index.module.less\";\n\nexport const ChatGroup: FC<{\n  chatGroup: ChatMessageGroup;\n  isProcessing?: boolean;\n  isLastMessage?: boolean;\n  isShowSuggestion?: boolean;\n}> = memo(\n  ({\n    chatGroup,\n    isProcessing = false,\n    isLastMessage = false,\n    isShowSuggestion = false,\n  }) => {\n    return (\n      <Spacing vertical gap={16} className={styles[\"chat-group\"]}>\n        {chatGroup.query ? (\n          <QueryMessage\n            message={chatGroup.query}\n            isAWaiting={isProcessing || false}\n            hasRespMessage={!!chatGroup.respMessages.length}\n            isLastMessage={isLastMessage}\n          />\n        ) : null}\n        <RespMessageList\n          messages={chatGroup.respMessages}\n          isLastMessage={isLastMessage}\n          // 当进行中，同时已经消息有返回了，则认为等待接收消息中\n          isAWaiting={isProcessing && !!chatGroup.query?.chat_id}\n          isShowSuggestion={isShowSuggestion}\n        />\n      </Spacing>\n    );\n  }\n);\n","import { ChatMessage } from \"@/libs/types\";\nimport { useIsMobile, useIsNeedTextToAudio } from \"@/libs/provider\";\nimport { Spacing, Tooltip } from \"@/libs/ui-kit\";\nimport { FC, PropsWithChildren } from \"react\";\nimport styles from \"./index.module.less\";\nimport { CommandAudio } from \"../command-audio\";\nimport { CommandCopy } from \"../command-copy\";\nimport { View } from \"@tarojs/components\";\nexport const CommandTooltip: FC<\n  PropsWithChildren<{ message: ChatMessage; isActive?: boolean }>\n> = ({ children, message, isActive }) => {\n  const isMobile = useIsMobile();\n  const content = !isMobile ? (\n    <PcCommandContent message={message} />\n  ) : (\n    <MobileCommandContent message={message} />\n  );\n  const direction = !isMobile ? \"bottom\" : \"top\";\n  return (\n    <Tooltip\n      content={content}\n      type={!isMobile ? \"hover\" : \"longtap\"}\n      isActive={\n        message.content_type === \"text\" && isActive && message.content !== \"\"\n      }\n      direction={direction}\n    >\n      {children}\n    </Tooltip>\n  );\n};\n\nconst PcCommandContent: FC<{ message: ChatMessage }> = ({ message }) => {\n  const isNeedTextToAudio = useIsNeedTextToAudio();\n  return (\n    <Spacing className={styles[\"pc-content\"]} gap={4}>\n      {isNeedTextToAudio ? (\n        <CommandContainer width={24}>\n          <CommandAudio\n            text={message.content}\n            svgTheme=\"gray-bold\"\n            isNeedHover={true}\n          />\n        </CommandContainer>\n      ) : null}\n      <CommandContainer width={24}>\n        <CommandCopy\n          text={message.content}\n          svgTheme=\"gray-bold\"\n          isNeedHover={true}\n        />\n      </CommandContainer>\n    </Spacing>\n  );\n};\nconst MobileCommandContent: FC<{ message: ChatMessage }> = ({ message }) => {\n  const isNeedTextToAudio = useIsNeedTextToAudio();\n  return (\n    <Spacing className={styles[\"mobile-content\"]} vertical>\n      {isNeedTextToAudio ? (\n        <CommandContainer width={100}>\n          <CommandAudio\n            text={message.content}\n            svgTheme=\"gray-bold\"\n            isShowText={true}\n            isNeedHover={true}\n          />\n        </CommandContainer>\n      ) : null}\n      <CommandContainer width={100}>\n        <CommandCopy\n          text={message.content}\n          svgTheme=\"gray-bold\"\n          isShowText={true}\n          isNeedHover={true}\n        />\n      </CommandContainer>\n    </Spacing>\n  );\n};\n\nconst CommandContainer: FC<PropsWithChildren<{ width: number }>> = ({\n  children,\n  width,\n}) => {\n  return (\n    <View\n      style={{\n        width: width || 24,\n        height: 24,\n      }}\n    >\n      {children}\n    </View>\n  );\n};\n","import { useAudioSpeech } from \"@/libs/services\";\nimport { AudioPlay, IconButton, Spacing, Spinning } from \"@/libs/ui-kit\";\nimport { AudioPlayEvent, logger, PlayAudio, showToast } from \"@/libs/utils\";\nimport { Text } from \"@tarojs/components\";\nimport { FC, useEffect, useRef, useState } from \"react\";\nimport styles from \"./index.module.less\";\nimport { useChatStatusStore, useI18n } from \"@/libs/provider\";\nimport { DisableContainer } from \"@/libs/ui-kit/atomic/disable-container\";\nimport cls from \"classnames\";\nimport { useUiEventStore } from \"@/libs/provider/context/chat-store-context\";\nimport { usePersistCallback } from \"@/libs/hooks\";\nconst AudioComp: FC<{\n  isPlaying: boolean;\n  isLoading: boolean;\n  svgTheme?: \"light\" | \"dark\" | \"gray-bold\";\n}> = ({ isPlaying, isLoading, svgTheme }) => {\n  if (isLoading) {\n    return <Spinning size=\"small\" />;\n  }\n  return <AudioPlay isPlaying={isPlaying} theme={svgTheme} />;\n};\n\nexport const CommandAudio: FC<{\n  text: string;\n  isShowText?: boolean;\n  className?: string;\n  isNeedHover?: boolean;\n  svgTheme?: \"light\" | \"dark\" | \"gray-bold\";\n}> = ({ text, isShowText, svgTheme, isNeedHover, className }) => {\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const refPlayAudio = useRef<PlayAudio | null>(null);\n  const { audioSpeech } = useAudioSpeech();\n  const refPlaying = useRef(false);\n  const i18n = useI18n();\n  const targetFrameEvent = useUiEventStore((store) => store.event);\n\n  const isAudioRecording = useChatStatusStore(\n    (store) => store.isAudioRecording\n  );\n  refPlaying.current = isPlaying;\n\n  const handleError = usePersistCallback(() => {\n    showToast(\n      {\n        content: i18n.t(\"playVoiceFail\"),\n        icon: \"error\",\n      },\n      targetFrameEvent\n    );\n  });\n  useEffect(() => {\n    if (!isPlaying) {\n      return;\n    }\n    (async () => {\n      try {\n        setIsLoading(true);\n        if (!refPlayAudio.current) {\n          refPlayAudio.current = new PlayAudio();\n        }\n        await refPlayAudio.current.playText(text, audioSpeech);\n        refPlayAudio.current.on(AudioPlayEvent.STOP, (res) => {\n          logger.debug(\"CommandAudio Stop Audio Play\", res);\n          if (res.isError) {\n            handleError();\n          }\n          setIsPlaying(false);\n        });\n      } catch (error) {\n        //如果失败\n        handleError();\n        setIsPlaying(false);\n      }\n      setIsLoading(false);\n    })();\n    return () => {\n      //暂停播放\n      refPlayAudio.current?.stop();\n      setIsLoading(false);\n      setIsPlaying(false);\n    };\n  }, [isPlaying]);\n  if (!text) return null;\n\n  return (\n    <DisableContainer\n      disabled={isAudioRecording}\n      className={cls(styles.container, className)}\n    >\n      <Spacing\n        className={styles.container}\n        width100\n        onClick={() => {\n          setIsPlaying(!isPlaying);\n        }}\n        gap={8}\n      >\n        <IconButton\n          size=\"small\"\n          type=\"square-hover-btn\"\n          hoverTheme={isNeedHover ? \"hover\" : \"none\"}\n        >\n          <AudioComp\n            isLoading={isLoading}\n            isPlaying={isPlaying}\n            svgTheme={svgTheme}\n          />\n        </IconButton>\n        {isShowText ? (\n          <Text\n            className={styles[\"text\"]}\n            numberOfLines={1}\n            maxLines={1}\n            overflow=\"ellipsis\"\n          >\n            {i18n.t(\"playVoice\")}\n          </Text>\n        ) : null}\n      </Spacing>\n    </DisableContainer>\n  );\n};\n","import { IconButton, Spacing } from \"@/libs/ui-kit\";\nimport { setClipboardData, showToast } from \"@/libs/utils\";\nimport { Text } from \"@tarojs/components\";\nimport { FC } from \"react\";\nimport styles from \"./index.module.less\";\nimport { DisableContainer } from \"@/libs/ui-kit/atomic/disable-container\";\nimport { SvgCopy } from \"@/libs/ui-kit/atomic/svg\";\nimport {\n  useI18n,\n  useUiEventStore,\n} from \"@/libs/provider/context/chat-store-context\";\nimport cls from \"classnames\";\nimport Taro from \"@tarojs/taro\";\nimport { UIEventType } from \"@/libs/types\";\nexport const CommandCopy: FC<{\n  text: string;\n  isShowText?: boolean;\n  svgTheme?: \"light\" | \"dark\" | \"gray-bold\";\n  isNeedHover?: boolean;\n  className?: string;\n}> = ({ text, isShowText, svgTheme, isNeedHover, className }) => {\n  const targetEventCenter = useUiEventStore((store) => store.event);\n  const i18n = useI18n();\n  return (\n    <DisableContainer className={cls(styles.container, className)}>\n      <Spacing\n        width100\n        onClick={(event) => {\n          event.stopPropagation();\n          Taro.eventCenter.trigger(UIEventType.FrameClick);\n          setClipboardData({\n            data: text,\n            success(isUseWeb) {\n              if (isUseWeb) {\n                showToast(\n                  {\n                    content: i18n.t(\"copySuccess\"),\n                    icon: \"success\",\n                  },\n                  targetEventCenter\n                );\n              }\n            },\n            fail() {\n              showToast(\n                {\n                  content: i18n.t(\"copyFailed\"),\n                  icon: \"error\",\n                },\n                targetEventCenter\n              );\n            },\n          });\n        }}\n        gap={8}\n      >\n        <IconButton\n          size=\"small\"\n          type=\"square-hover-btn\"\n          hoverTheme={isNeedHover ? \"hover\" : \"none\"}\n        >\n          <SvgCopy theme={svgTheme} />\n        </IconButton>\n        {isShowText ? (\n          <Text\n            className={styles[\"text\"]}\n            numberOfLines={1}\n            maxLines={1}\n            overflow=\"ellipsis\"\n          >\n            {i18n.t(\"copyText\")}\n          </Text>\n        ) : null}\n      </Spacing>\n    </DisableContainer>\n  );\n};\n","import { Fragment } from \"react\";\n\nimport cls from \"classnames\";\nimport { View } from \"@tarojs/components\";\nimport { type ChatMessageGroup } from \"@/libs/types\";\nimport { useConversationStore, useIsMobile } from \"@/libs/provider\";\nimport { SectionPrologueGroup, TopPrologueGroup } from \"./prologue-group\";\nimport { ChatGroup } from \"./chat-group\";\nimport styles from \"./index.module.less\";\n\nconst ChatGroups = ({\n  chatMessageGroups,\n  className,\n}: {\n  chatMessageGroups: ChatMessageGroup[];\n  className?: string;\n  id?: string;\n}) => {\n  const { hasInProcessChatMessageGroup, sectionId } = useConversationStore(\n    (store) => ({\n      hasInProcessChatMessageGroup: !!store.inProcessChatMessageGroup,\n      sectionId: store.sectionId,\n    })\n  );\n  return (\n    <View className={cls(styles[\"chat-group\"], className)}>\n      {chatMessageGroups.map((item, index) => (\n        <Fragment key={item.id}>\n          <ChatGroup\n            chatGroup={item}\n            isLastMessage={\n              index === chatMessageGroups.length - 1 &&\n              !hasInProcessChatMessageGroup\n            }\n            isShowSuggestion={\n              // 如果是最后一个，同时没有进行中消息，同时section是一条数据，则展示suggestion;\n              index === chatMessageGroups.length - 1 &&\n              !hasInProcessChatMessageGroup &&\n              sectionId === item.sectionId\n            }\n          />\n          <SectionPrologueGroup\n            chatMessageGroupNow={item}\n            chatMessageGroupNext={chatMessageGroups[index + 1]}\n          />\n        </Fragment>\n      ))}\n    </View>\n  );\n};\nconst InProcessingChatMessageGroup = () => {\n  const { inProcessChatMessageGroup } = useConversationStore((store) => ({\n    inProcessChatMessageGroup: store.inProcessChatMessageGroup,\n  }));\n  if (!inProcessChatMessageGroup) {\n    return null;\n  }\n  return (\n    <ChatGroup\n      chatGroup={inProcessChatMessageGroup}\n      isLastMessage={true}\n      isProcessing={true}\n      isShowSuggestion={true}\n    />\n  );\n};\n\nexport const ChatGroupList = () => {\n  const { chatMessageGroups } = useConversationStore((store) => ({\n    chatMessageGroups: store.chatMessageGroups,\n  }));\n  const isMobile = useIsMobile();\n  return (\n    <View\n      className={cls(styles.container, {\n        [styles.mobile]: isMobile,\n      })}\n    >\n      <TopPrologueGroup />\n      <ChatGroups chatMessageGroups={chatMessageGroups} />\n      <InProcessingChatMessageGroup />\n    </View>\n  );\n};\n","import { FC, useMemo } from \"react\";\n\nimport { useCreatePrologueMessage } from \"@/libs/services\";\nimport { type ChatMessageGroup } from \"@/libs/types\";\nimport { useConversationStore, useI18n } from \"@/libs/provider\";\nimport { ChatGroup } from \"../chat-group\";\nimport { View, Text } from \"@tarojs/components\";\nimport { Spacing } from \"@/libs/ui-kit\";\nimport styles from \"./index.module.less\";\n// section分隔线以及\nexport const SectionPrologueGroup: FC<{\n  chatMessageGroupNow: ChatMessageGroup;\n  chatMessageGroupNext?: ChatMessageGroup;\n}> = ({ chatMessageGroupNow, chatMessageGroupNext }) => {\n  const { hasInProcessChatMessageGroup, sectionId } = useConversationStore(\n    (store) => ({\n      hasInProcessChatMessageGroup: !!store.inProcessChatMessageGroup,\n      sectionId: store.sectionId,\n    })\n  );\n  const isShowDivide = useMemo(() => {\n    if (chatMessageGroupNext) {\n      if (chatMessageGroupNext.sectionId !== chatMessageGroupNow.sectionId) {\n        return true;\n      }\n    } else if (chatMessageGroupNow.sectionId !== sectionId) {\n      return true;\n    }\n    return false;\n  }, [chatMessageGroupNow, chatMessageGroupNext, sectionId]);\n  const isShowSuggestion = useMemo(() => {\n    if (\n      isShowDivide &&\n      !hasInProcessChatMessageGroup &&\n      !chatMessageGroupNext\n    ) {\n      return true;\n    }\n    return false;\n  }, [\n    isShowDivide,\n    hasInProcessChatMessageGroup,\n    chatMessageGroupNext,\n    sectionId,\n  ]);\n\n  const nextSectionId = chatMessageGroupNext?.sectionId || sectionId;\n\n  if (!isShowDivide) {\n    return null;\n  }\n  return (\n    <PrologueChatMessage\n      isShowDivide={isShowDivide}\n      isShowSuggestion={isShowSuggestion}\n      nextSectionId={nextSectionId}\n    />\n  );\n};\n\nconst PrologueChatMessage: FC<{\n  isShowDivide?: boolean;\n  isShowSuggestion?: boolean;\n  nextSectionId?: string;\n}> = ({ isShowDivide, isShowSuggestion, nextSectionId }) => {\n  const prologueChatGroup = useCreatePrologueMessage(nextSectionId);\n  const i18n = useI18n();\n  return (\n    <View>\n      {isShowDivide ? (\n        <Spacing\n          gap={20}\n          className={styles[\"divide-container\"]}\n          verticalCenter\n          horizontalCenter\n        >\n          <View className={styles[\"divide-line\"]}></View>\n          <Text>{i18n.t(\"clearContextDivide\")}</Text>\n          <View className={styles[\"divide-line\"]}></View>\n        </Spacing>\n      ) : null}\n\n      {prologueChatGroup ? (\n        <ChatGroup\n          chatGroup={prologueChatGroup}\n          isShowSuggestion={isShowSuggestion}\n        />\n      ) : null}\n    </View>\n  );\n};\n\nexport const TopPrologueGroup = () => {\n  const { isShowOnBoarding, prevHasMore } = useConversationStore((store) => ({\n    isShowOnBoarding: store.isShowOnBoarding,\n    chatMessageGroups: store.chatMessageGroups,\n    inProcessChatMessageGroup: store.inProcessChatMessageGroup,\n    prevHasMore: store.prevHasMore,\n  }));\n  if (isShowOnBoarding() || prevHasMore) {\n    return null;\n  }\n  return <PrologueChatMessage isShowDivide={false} isShowSuggestion={false} />;\n};\n","import { FC, memo } from \"react\";\n\nimport { View } from \"@tarojs/components\";\n\nimport {\n  MessageContent,\n  MessageContainer,\n  Spinning,\n  SvgError,\n} from \"@/libs/ui-kit\";\n\nimport cls from \"classnames\";\nimport styles from \"./index.module.less\";\nimport { useChatPropsStore, useUserInfoStore } from \"@/libs/provider\";\nimport { ChatMessage } from \"@/libs/types\";\nimport { useSendMessage } from \"@/libs/services\";\nimport { CommandTooltip } from \"../command/comman-tooltip\";\nexport const QueryMessage: FC<{\n  message: ChatMessage;\n  isAWaiting?: boolean;\n  isLastMessage?: boolean;\n  hasRespMessage?: boolean;\n}> = memo(\n  ({ message, isAWaiting = false, hasRespMessage, isLastMessage = false }) => {\n    const userInfo = useUserInfoStore((store) => store.info);\n    const { reSendLastErrorMessage } = useSendMessage();\n    const isShowError = message.error && !hasRespMessage;\n    const isShowLoading = !isShowError && isAWaiting && !message.chat_id;\n    const { sendTextMessage } = useSendMessage();\n    const onImageClick = useChatPropsStore((store) => {\n      return store.eventCallbacks?.onImageClick;\n    });\n    return (\n      <MessageContainer\n        senderInfo={userInfo || undefined}\n        className={styles[\"query-container\"]}\n      >\n        <View className={styles[\"query-message\"]}>\n          <CommandTooltip\n            message={message}\n            isActive={!message.isAudioTranslatingToText}\n          >\n            <MessageContent\n              message={message}\n              onImageClick={onImageClick}\n              sendTextMessage={sendTextMessage}\n            />\n          </CommandTooltip>\n          {isShowLoading ? (\n            <Spinning className={styles[\"state-slot\"]} size=\"small\" />\n          ) : null}\n          {isShowError ? (\n            <SvgError\n              className={cls(styles[\"state-slot\"], {\n                [styles.disable]: !isLastMessage,\n              })}\n              onClick={() => isLastMessage && reSendLastErrorMessage?.()}\n            />\n          ) : null}\n        </View>\n      </MessageContainer>\n    );\n  }\n);\n","import { FC, useMemo } from \"react\";\n\nimport {\n  Spacing,\n  MessageContent,\n  WaitingMessage,\n  isSupportAnswerMessage,\n  MessageContainer,\n} from \"@/libs/ui-kit\";\nimport {\n  ChatMessage,\n  IOnTaskListChange,\n  IOnTaskListChangeProps,\n} from \"@/libs/types\";\nimport {\n  useChatInfoStore,\n  useChatPropsStore,\n  useI18n,\n  useIsNeedTextToAudio,\n  useThemeType,\n} from \"@/libs/provider\";\n\nimport { SuggestionList } from \"../suggestion-list\";\n\nimport styles from \"./index.module.less\";\nimport { CommandAudio } from \"../command/command-audio\";\nimport { CommandTooltip } from \"../command/comman-tooltip\";\nimport { CommandCopy } from \"../command/command-copy\";\nimport { useSendMessage } from \"@/libs/services\";\nimport { getCdnUrl, logger } from \"@/libs/utils\";\nimport { usePersistCallback } from \"@/libs/hooks\";\nimport { useChatInputStore } from \"@/libs/provider/context\";\nexport const RespMessageList: FC<{\n  messages: ChatMessage[];\n  isAWaiting: boolean;\n  isShowSuggestion?: boolean;\n  isLastMessage?: boolean;\n}> = ({ messages, isAWaiting, isShowSuggestion, isLastMessage }) => {\n  const appInfo = useChatInfoStore((info) => info.info);\n  const cdnBaseUrlPath = useChatPropsStore(\n    (store) => store.setting?.cdnBaseUrlPath\n  );\n  const messageUiConfigMap = useChatPropsStore(\n    (store) => store.ui?.chatSlot?.message\n  );\n  const answerMessages = useMemo(\n    () =>\n      messages.filter((item) =>\n        isSupportAnswerMessage(item, messageUiConfigMap)\n      ),\n    [messages]\n  );\n\n  const followUpMessages = useMemo(\n    () =>\n      messages\n        .filter((item) => item.type === \"follow_up\" && item.content)\n        .slice(0, 3),\n    [messages]\n  );\n  if (\n    !isAWaiting &&\n    answerMessages.length === 0 &&\n    followUpMessages.length === 0\n  ) {\n    // 兜底\n    // 没有回答\n    return null;\n  }\n  return (\n    <MessageContainer\n      className={styles[\"resp-container\"]}\n      senderInfo={{\n        name: appInfo?.name || \"\",\n        avatar:\n          appInfo?.icon_url ||\n          getCdnUrl(cdnBaseUrlPath, \"assets/imgs/coze-logo.png\"),\n        id: appInfo?.appId || \"\",\n      }}\n    >\n      <RespMessageListContent\n        isAWaiting={isAWaiting}\n        isShowSuggestion={isShowSuggestion}\n        followUpMessages={followUpMessages}\n        answerMessages={answerMessages}\n        isLastMessage={isLastMessage}\n      />\n    </MessageContainer>\n  );\n};\n\nconst RespMessageListContent: FC<{\n  answerMessages: ChatMessage[];\n  followUpMessages: ChatMessage[];\n  isAWaiting: boolean;\n  isShowSuggestion?: boolean;\n  isLastMessage?: boolean;\n}> = ({\n  answerMessages,\n  followUpMessages,\n  isAWaiting,\n  isShowSuggestion,\n  isLastMessage,\n}) => {\n  const isNeedTextToAudio = useIsNeedTextToAudio();\n  const onImageClick = useChatPropsStore((store) => {\n    return store.eventCallbacks?.onImageClick;\n  });\n  const setTaskList = useChatInputStore((store) => store.setTaskList);\n  const messageUiConfigMap = useChatPropsStore(\n    (store) => store.ui?.chatSlot?.message\n  );\n  const i18n = useI18n();\n  const themeType = useThemeType();\n  const isReadOnly = useChatPropsStore((store) => store.ui?.isReadonly);\n  const { sendTextMessage } = useSendMessage();\n  const onMessageTaskChange: IOnTaskListChange = usePersistCallback(\n    (taskInfoProps: IOnTaskListChangeProps) => {\n      setTaskList(taskInfoProps);\n      logger.debug(\"RespMessageListContent Task Select\", taskInfoProps);\n    }\n  );\n\n  const svgTheme = themeType === \"light\" ? \"dark\" : \"light\";\n  const allText = answerMessages\n    .filter((item) => item.content_type === \"text\")\n    .map((item) => item.content)\n    .join(\"\");\n  const isNeedWaitingMessage =\n    isAWaiting && !answerMessages.some((item) => !item.isComplete);\n\n  if (\n    isAWaiting &&\n    answerMessages.length === 0 &&\n    followUpMessages.length === 0\n  ) {\n    return <WaitingMessage />;\n  }\n\n  return (\n    <Spacing className={styles.resp} vertical gap={8}>\n      {answerMessages.length > 0 ? (\n        <>\n          <Spacing vertical className={styles.answer} gap={8}>\n            {answerMessages.map((item, index) => (\n              <CommandTooltip\n                key={item.id || `noId_${index}`}\n                message={item}\n                isActive={!isLastMessage && !isReadOnly}\n              >\n                <MessageContent\n                  message={item}\n                  onImageClick={onImageClick}\n                  sendTextMessage={sendTextMessage}\n                  i18n={i18n}\n                  //disabled={!isLastMessage || isReadOnly}\n                  isLastMessage={isLastMessage}\n                  isReadOnly={isReadOnly}\n                  isAWaiting={\n                    // 如果是回答的最后一条消息，同时是等待中的消息，则添加一个圆点的等待状态\n                    followUpMessages.length === 0 &&\n                    answerMessages.length - 1 === index &&\n                    isAWaiting &&\n                    !item.isComplete\n                  }\n                  onTaskChange={onMessageTaskChange}\n                  messageUiConfigMap={messageUiConfigMap}\n                />\n              </CommandTooltip>\n            ))}\n          </Spacing>\n          {isLastMessage && !isAWaiting && allText ? (\n            <Spacing gap={4} verticalCenter>\n              {isNeedTextToAudio ? (\n                <CommandAudio\n                  text={allText}\n                  svgTheme={svgTheme}\n                  isNeedHover={svgTheme === \"dark\" ? true : false}\n                />\n              ) : null}\n              <CommandCopy\n                text={allText}\n                svgTheme={svgTheme}\n                isNeedHover={svgTheme === \"dark\" ? true : false}\n              />\n            </Spacing>\n          ) : null}\n        </>\n      ) : null}\n      {followUpMessages.length > 0 && isShowSuggestion ? (\n        <SuggestionList messages={followUpMessages} />\n      ) : null}\n      {isNeedWaitingMessage ? <WaitingMessage /> : null}\n    </Spacing>\n  );\n};\n","import { FC } from \"react\";\n\nimport type { ChatV3Message } from \"@coze/api\";\n\nimport { SuggestionList as SuggestionListUi } from \"@/libs/ui-kit\";\nimport { useSendMessage } from \"@/libs/services\";\n\nexport const SuggestionList: FC<{\n  messages: ChatV3Message[];\n}> = ({ messages }) => {\n  const { sendTextMessage } = useSendMessage();\n  return (\n    <SuggestionListUi\n      suggestions={messages.map((item) => item.content)}\n      onClickSuggestion={sendTextMessage}\n    />\n  );\n};\n","import { Text } from \"@tarojs/components\";\nimport { CImage, Spacing } from \"@/libs/ui-kit\";\nimport styles from \"./index.module.less\";\nimport { useChatPropsStore, useI18n } from \"@/libs/provider\";\nimport { useCommandSlot } from \"../chat-input/hooks/use-command-slot\";\nimport { Fragment } from \"react\";\nimport { getCdnUrl } from \"@/libs/utils\";\n\nexport const ChatHeader = () => {\n  const header = useChatPropsStore((store) => store.ui?.header);\n  const i18n = useI18n();\n  const cdnBaseUrlPath = useChatPropsStore(\n    (store) => store.setting?.cdnBaseUrlPath\n  );\n  const commandSlots = useCommandSlot(\"headerRight\");\n  if (header?.isNeed === false) {\n    return null;\n  }\n  return (\n    <Spacing verticalCenter className={styles.container} gap={8}>\n      <CImage\n        src={\n          header?.icon || getCdnUrl(cdnBaseUrlPath, \"assets/imgs/coze-logo.png\")\n        }\n        className={styles[\"app-avatar\"]}\n        mode=\"aspectFill\"\n      />\n      <Text className={styles.title} overflow=\"ellipsis\" numberOfLines={1}>\n        {header?.title || i18n.t(\"defaultHeaderTitle\")}\n      </Text>\n      {commandSlots.map((item, index) => (\n        <Fragment key={index}>{item}</Fragment>\n      ))}\n      {header?.renderRightSlot?.()}\n    </Spacing>\n  );\n};\n","import { SvgConversation, IconButton } from \"@/libs/ui-kit\";\n\nimport { FC, useMemo } from \"react\";\nimport { DisableContainer } from \"@/libs/ui-kit/atomic/disable-container\";\nimport { useClearContext } from \"@/libs/services\";\nimport { useChatStatusStore, useConversationStore } from \"@/libs/provider\";\n\nexport const ClearContext: FC<{\n  type?: \"circle-btn\" | \"square-hover-btn\";\n  svgTheme?: \"dark\" | \"light\";\n}> = ({ type = \"circle-btn\", svgTheme }) => {\n  const { clearContext } = useClearContext();\n  const { clearContext: clearContextDisableState } = useChatStatusStore(\n    (store) => store.disableState\n  );\n\n  const { sectionId, chatMessageGroups } = useConversationStore((store) => ({\n    sectionId: store.sectionId,\n    chatMessageGroups: store.chatMessageGroups,\n  }));\n  const isCanUser = useMemo(() => {\n    if (chatMessageGroups.length === 0) {\n      return false;\n    }\n    if (\n      sectionId &&\n      chatMessageGroups[chatMessageGroups.length - 1]?.sectionId\n    ) {\n      if (\n        sectionId !== chatMessageGroups[chatMessageGroups.length - 1]?.sectionId\n      ) {\n        return false;\n      }\n    }\n    return true;\n  }, [sectionId, chatMessageGroups]);\n  return (\n    <DisableContainer disabled={clearContextDisableState || !isCanUser}>\n      <IconButton\n        onClick={clearContext}\n        type={type}\n        hoverTheme={svgTheme === \"light\" ? \"none\" : \"hover\"}\n        bgColor=\"bold\"\n      >\n        <SvgConversation theme={svgTheme} />\n      </IconButton>\n    </DisableContainer>\n  );\n};\n","import { SvgBroom, IconButton } from \"@/libs/ui-kit\";\nimport { useClearMessage } from \"@/libs/services\";\n\nimport { FC } from \"react\";\nimport { DisableContainer } from \"@/libs/ui-kit/atomic/disable-container\";\nimport { useChatStatusStore, useConversationStore } from \"@/libs/provider\";\n\nexport const DeleteMessage: FC<{\n  type?: \"circle-btn\" | \"square-hover-btn\";\n  svgTheme?: \"dark\" | \"light\";\n}> = ({ type = \"circle-btn\", svgTheme }) => {\n  const { clearMessage } = useClearMessage();\n  const { clearMessage: clearMessageDisableState } = useChatStatusStore(\n    (store) => store.disableState\n  );\n\n  const { chatMessageGroups } = useConversationStore((store) => ({\n    sectionId: store.sectionId,\n    chatMessageGroups: store.chatMessageGroups,\n  }));\n  const isCanUse = chatMessageGroups.length > 0;\n  return (\n    <DisableContainer disabled={clearMessageDisableState || !isCanUse}>\n      <IconButton\n        onClick={clearMessage}\n        type={type}\n        hoverTheme={svgTheme === \"light\" ? \"none\" : \"hover\"}\n        bgColor=\"bold\"\n      >\n        <SvgBroom theme={svgTheme} />\n      </IconButton>\n    </DisableContainer>\n  );\n};\n","import { useChatPropsStore, useThemeType } from \"@/libs/provider\";\nimport { ClearContext } from \"../clear-context\";\nimport { DeleteMessage } from \"../delete-message\";\nimport { UiCommandPosition } from \"@/libs/types\";\nimport { logger } from \"@/libs/utils\";\n\nexport const useCommandSlot = (position: UiCommandPosition) => {\n  const ui = useChatPropsStore((store) => store.ui);\n  const clearContextConfig = Object.assign(\n    { isNeed: true, position: \"inputLeft\", SlotComponent: ClearContext },\n    ui?.chatSlot?.clearContext || {}\n  );\n  const uiTheme = useThemeType();\n  const clearMessageConfig = Object.assign(\n    { isNeed: true, position: \"headerRight\", SlotComponent: DeleteMessage },\n    ui?.chatSlot?.clearMessage || {}\n  );\n  logger.debug(\"useCommandSlot\", {\n    clearContextConfig,\n    clearMessageConfig,\n    position,\n    ui,\n  });\n  return [clearContextConfig, clearMessageConfig]\n    .filter((item) => {\n      return item.isNeed && item.position === position;\n    })\n    .map(({ position, SlotComponent }) =>\n      position === \"headerRight\" ? (\n        <SlotComponent\n          type=\"square-hover-btn\"\n          svgTheme={uiTheme === \"bg-theme\" ? \"light\" : \"dark\"}\n        />\n      ) : (\n        <SlotComponent svgTheme={\"dark\"} />\n      )\n    );\n};\n","import { getBoundingRect, getViewportBoundingRect, logger } from \"@/libs/utils\";\nimport { useChatPropsStore } from \"@/libs/provider\";\nimport { useCallback, useState } from \"react\";\n\n/*\n * When the custom navigation bar is selected for the mini-program,\n * it is necessary to position the location of the <input> element.\n */\nexport const useInputAdjust = (inputId: string) => {\n  const [bottomOffset, setBottomOffset] = useState(0);\n  const isMiniCustomHeader = useChatPropsStore(\n    (store) => store.ui?.isMiniCustomHeader\n  );\n  const inputAdjustDefault = isMiniCustomHeader !== true;\n  const changeInputLocation = useCallback(\n    async (height: number) => {\n      if (inputAdjustDefault) {\n        return;\n      }\n      if (height === 0) {\n        setBottomOffset(0);\n        return;\n      }\n      const [viewportRect] = await getViewportBoundingRect();\n      const [inputRect] = await getBoundingRect(`#${inputId}`);\n      const bottomNow = viewportRect.height - inputRect.bottom;\n\n      if (height > bottomNow) {\n        setBottomOffset(height - bottomNow);\n      }\n    },\n    [inputId]\n  );\n  logger.info(\"Chat Input's inputAdjust value:\", {\n    inputAdjustDefault,\n    isMiniCustomHeader: isMiniCustomHeader,\n  });\n  return { changeInputLocation, bottomOffset, inputAdjustDefault };\n};\n","import { Fragment, useMemo } from \"react\";\n\nimport { ChatInput as ChatInputUi, Spacing } from \"@/libs/ui-kit\";\nimport { useSendMessage } from \"@/libs/services\";\nimport {\n  useChatPropsStore,\n  useChatStatusStore,\n  useDefaultInputMode,\n  useI18n,\n  useIsMobile,\n  useIsNeedAudioInput,\n} from \"@/libs/provider\";\nimport { useInputAdjust } from \"./hooks/use-input-adjust\";\nimport styles from \"./index.module.less\";\nimport { useCommandSlot } from \"./hooks/use-command-slot\";\nimport { View } from \"@tarojs/components\";\nimport {\n  useChatInputStore,\n  useUiEventStore,\n} from \"@/libs/provider/context/chat-store-context\";\nimport { usePersistCallback } from \"@/libs/hooks\";\nimport { logger } from \"@/libs/utils\";\nimport cls from \"classnames\";\nlet chatInputNo = 1;\n\nexport const ChatInput = () => {\n  const i18n = useI18n();\n\n  const { sendTextMessage, sendFileMessage, sendAudioMessage } =\n    useSendMessage();\n  const { input: inputDisableState } = useChatStatusStore(\n    (store) => store.disableState\n  );\n  const uiConfig = useChatPropsStore((store) => store.ui);\n  const setIsAudioRecording = useChatStatusStore(\n    (state) => state.setIsAudioRecording\n  );\n  const isAudioRecording = useChatStatusStore(\n    (store) => store.isAudioRecording\n  );\n  const taskList = useChatInputStore((store) => store.taskList);\n  const isNeedAudio = useIsNeedAudioInput();\n  const inputType = useDefaultInputMode();\n  const inputUiConfig = uiConfig?.chatSlot?.input;\n  const uploadConfig = uiConfig?.chatSlot?.uploadBtn;\n  const renderChatInputTopSlot = inputUiConfig?.renderChatInputTopSlot;\n  const inputId = useMemo(() => `chatInput${chatInputNo++}`, []);\n  const { changeInputLocation, bottomOffset, inputAdjustDefault } =\n    useInputAdjust(inputId);\n  const targetFrameEvent = useUiEventStore((store) => store.event);\n  const commandSlots = useCommandSlot(\"inputLeft\");\n  const isMobile = useIsMobile();\n  const onAudioRecording = usePersistCallback((isAudioRecording: boolean) => {\n    setIsAudioRecording(isAudioRecording);\n  });\n\n  logger.info(\"ChatInput input info\", {\n    isNeedAudio,\n    inputType,\n  });\n  logger.debug(\"ChatInput configInfo:\", inputUiConfig, taskList);\n\n  if (inputUiConfig?.isNeed === false) {\n    return null;\n  }\n\n  return (\n    <View\n      className={cls(styles.container, {\n        [styles[\"recording-audio\"]]: isAudioRecording,\n      })}\n      id={inputId}\n      style={{\n        bottom: `${bottomOffset}px`,\n      }}\n      onTouchStart={(event) => {\n        event.stopPropagation();\n      }}\n    >\n      <View className={styles[\"slot-container\"]}>\n        {renderChatInputTopSlot?.()}\n      </View>\n      <Spacing\n        gap={0}\n        verticalCenter\n        width100\n        style={{ overflow: \"visible\", paddingTop: 10 }}\n      >\n        {commandSlots.length ? (\n          <Spacing\n            gap={12}\n            verticalCenter\n            style={{\n              overflow: \"visible\",\n              width: isAudioRecording ? 0 : commandSlots.length * 46,\n            }}\n            className={styles[\"command-container\"]}\n          >\n            {commandSlots.map((item, index) => (\n              <Fragment key={index}>{item}</Fragment>\n            ))}\n          </Spacing>\n        ) : null}\n\n        <View\n          className={styles[\"input-container\"]}\n          style={{\n            maxWidth: isAudioRecording\n              ? \"100%\"\n              : `calc(100% - ${commandSlots.length * 46}px)`,\n          }}\n        >\n          <ChatInputUi\n            isNeedUpload={uploadConfig?.isNeed !== false}\n            isNeedTaskMessage={inputUiConfig?.isNeedTaskMessage}\n            disabled={inputDisableState}\n            defaultValue={inputUiConfig?.defaultText}\n            defaultInputType={inputType}\n            taskList={taskList}\n            isNeedAudio={isNeedAudio || false}\n            placeholder={\n              inputUiConfig?.placeholder || i18n.t(\"chatInputPlaceholder\")\n            }\n            onSendTextMessage={sendTextMessage}\n            onSendFileMessage={sendFileMessage}\n            onSendAudioMessage={sendAudioMessage}\n            onKeyBoardHeightChange={changeInputLocation}\n            inputAdjustDefault={inputAdjustDefault}\n            frameEventTarget={targetFrameEvent}\n            isPcMode={!isMobile}\n            onAudioRecording={onAudioRecording}\n          />\n        </View>\n      </Spacing>\n    </View>\n  );\n};\n","import { View } from \"@tarojs/components\";\n\nimport { Spacing, Spinning } from \"@/libs/ui-kit\";\nimport { useChatMaxWidth, useChatPropsStore } from \"@/libs/provider\";\nimport styles from \"./index.module.less\";\n\nexport const ChatLoading = () => {\n  const renderLoading = useChatPropsStore(\n    (store) => store.ui?.loading?.renderLoading\n  );\n  const maxWidth = useChatMaxWidth();\n  if (renderLoading) {\n    return <View className={styles.loading}>{renderLoading()}</View>;\n  }\n  return (\n    <View\n      className={styles.loading}\n      style={{\n        maxWidth: maxWidth,\n      }}\n    >\n      <Spacing horizontalCenter flex1 verticalCenter>\n        <Spinning />\n      </Spacing>\n    </View>\n  );\n};\n","import { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { type UIModalEvent, UIEventType } from \"@/libs/types\";\nimport { useUiEventStore } from \"@/libs/provider/context/chat-store-context\";\nimport { Modal } from \"@/libs/ui-kit/atomic/modal\";\n\nlet modalId = 1000;\nexport const ChatModal = () => {\n  const [event, setEvent] = useState<UIModalEvent>();\n  const key = useMemo(() => `modal_${modalId++}`, [event]);\n  const uiEvent = useUiEventStore((store) => store.event);\n  useEffect(() => {\n    uiEvent.on(UIEventType.ChatModalShow, (e: UIModalEvent) => {\n      setEvent(e);\n    });\n  }, [uiEvent]);\n  const hideModal = useCallback(() => {\n    setEvent(undefined);\n  }, []);\n  if (!event || !event.renderModal) {\n    return null;\n  }\n  // event修改的时候，会重新渲染，所以需要key\n  return (\n    <Modal onHide={hideModal} key={key}>\n      {event.renderModal(hideModal)}\n    </Modal>\n  );\n};\n","import { FC, PropsWithChildren, useEffect, useMemo, useRef } from \"react\";\n\nimport cls from \"classnames\";\n\nimport {\n  ScrollView,\n  Spinning,\n  ErrorRetry,\n  ErrorRetryBtn,\n  ScrollViewRef,\n} from \"@/libs/ui-kit\";\nimport { useScrollMore } from \"@/libs/services\";\nimport { useConversationStore, useI18n } from \"@/libs/provider\";\n\nimport styles from \"./index.module.less\";\nimport { logger } from \"@/libs/utils\";\nimport { useUiEventStore } from \"@/libs/provider/context/chat-store-context\";\nimport { UIEventType } from \"@/libs/types\";\nimport { useUpdateEffect } from \"@/libs/hooks\";\n\nconst ChatTopStatus: FC<{\n  onScrollToUpper?: () => void;\n}> = ({ onScrollToUpper }) => {\n  const i18n = useI18n();\n\n  const { prevError, prevHasMore } = useConversationStore((store) => ({\n    prevError: store.prevError,\n    prevHasMore: store.prevHasMore,\n  }));\n  const isNeedPrevLoadMore = prevHasMore;\n  return (\n    <>\n      {prevError ? (\n        <ErrorRetry\n          errorText={i18n.t(\"messageListRetry\", {\n            retry: (\n              <ErrorRetryBtn\n                retryText={i18n.t(\"retryBtn\")}\n                onClick={() => {\n                  onScrollToUpper?.();\n                }}\n              />\n            ),\n          })}\n        />\n      ) : isNeedPrevLoadMore ? (\n        <Spinning\n          text={i18n.t(\"messageListLoading\")}\n          className={styles.loading}\n          size={\"small\"}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport const ChatScrollView: FC<PropsWithChildren> = ({ children }) => {\n  const refScroll = useRef<ScrollViewRef>(null);\n  const { upperThreshold, onScrollToUpper } = useScrollMore();\n  const { isUnshiftingMessageFlag, clearUnshiftingMessageFlg } =\n    useConversationStore((store) => ({\n      isUnshiftingMessageFlag: store.isUnshiftingMessageFlag,\n      clearUnshiftingMessageFlg: store.clearUnshiftingMessageFlg,\n    }));\n  const hasProcessChatMessageGroup = useConversationStore(\n    (store) => !!store.inProcessChatMessageGroup\n  );\n\n  const chatEvent = useUiEventStore((store) => store.event);\n\n  useEffect(() => {\n    if (isUnshiftingMessageFlag) {\n      clearUnshiftingMessageFlg();\n    }\n  }, [isUnshiftingMessageFlag]);\n\n  const chatContent = useMemo(() => {\n    return (\n      <>\n        <ChatTopStatus {...{ onScrollToUpper }} />\n        {children}\n      </>\n    );\n  }, [children, onScrollToUpper]);\n\n  useEffect(() => {\n    chatEvent.on(UIEventType.ChatSlotToBottom, () => {\n      refScroll.current?.scrollToBottom();\n    });\n    chatEvent.on(UIEventType.ChatSlotScrollToAnchorBottom, () => {\n      refScroll.current?.scrollToAnchorBottom();\n    });\n    chatEvent.on(UIEventType.ChatSlotRemoveAnchorBottom, () => {\n      refScroll.current?.removeAnchorBottom();\n    });\n  }, []);\n  useUpdateEffect(() => {\n    if (hasProcessChatMessageGroup) {\n      refScroll.current?.scrollToAnchorBottom();\n    } else {\n      refScroll.current?.removeAnchorBottom();\n    }\n  }, [hasProcessChatMessageGroup]);\n  logger.debug(\"ScrollView props isUnshiftingMessageFlag\", {\n    isUnshiftingMessageFlag,\n  });\n\n  return (\n    <ScrollView\n      id=\"chatScroll\"\n      ref={refScroll}\n      className={cls(styles[\"scroll-container\"])}\n      scrollY={true}\n      isLoadMore={isUnshiftingMessageFlag}\n      lowerThreshold={upperThreshold}\n      onScrollToLower={onScrollToUpper}\n      isNeedHelper={true}\n    >\n      {chatContent}\n    </ScrollView>\n  );\n};\n","import { View } from \"@tarojs/components\";\n\nimport { OnBoarding } from \"@/libs/ui-kit\";\nimport { useSendMessage } from \"@/libs/services\";\nimport {\n  useChatInfoStore,\n  useChatMaxWidth,\n  useChatPropsStore,\n  useConversationStore,\n  useUserInfoStore,\n} from \"@/libs/provider\";\nimport { ChatScrollView } from \"../chat-scroll-view\";\nimport { ChatInput } from \"../chat-input\";\nimport { ChatGroupList } from \"../chat-group-list\";\nimport cls from \"classnames\";\nimport styles from \"./index.module.less\";\nimport { FC, memo, useMemo } from \"react\";\nimport { logger } from \"@/libs/utils\";\n\nconst ChatOnBoarding = memo(() => {\n  const { chatInfo } = useChatInfoStore((store) => ({\n    chatInfo: store.info,\n  }));\n  const onImageClick = useChatPropsStore(\n    (store) => store.eventCallbacks?.onImageClick\n  );\n  const { sendTextMessage } = useSendMessage();\n  const userInfo = useUserInfoStore((store) => store.info);\n  const { isShowOnBoarding } = useConversationStore((store) => ({\n    isShowOnBoarding: store.isShowOnBoarding,\n    chatMessageGroups: store.chatMessageGroups,\n    inProcessChatMessageGroup: store.inProcessChatMessageGroup,\n  }));\n  logger.debug(\"ChatOnBoarding:\", chatInfo, isShowOnBoarding());\n  if (!isShowOnBoarding()) {\n    return null;\n  }\n  return (\n    <OnBoarding\n      user={userInfo || undefined}\n      chat={chatInfo || undefined}\n      onImageClick={onImageClick}\n      onClickSuggestion={(message) => {\n        sendTextMessage?.(message);\n      }}\n    />\n  );\n});\n\nexport const ChatSlot: FC<{\n  className?: string;\n}> = memo(({ className }) => {\n  const maxWidth = useChatMaxWidth();\n  const chatSlotClassName = useChatPropsStore(\n    (store) => store.ui?.chatSlotClassName\n  );\n  logger.debug(\"ChatSlot maxWidth\", maxWidth);\n  const chatContent = useMemo(() => {\n    //防止每次刷新ChatScrollView\n    return (\n      <>\n        <ChatOnBoarding />\n        <ChatGroupList />\n      </>\n    );\n  }, []);\n  return (\n    <View\n      className={cls(styles.slot, chatSlotClassName, className)}\n      style={{\n        maxWidth: maxWidth,\n      }}\n    >\n      <ChatScrollView>{chatContent}</ChatScrollView>\n      <ChatInput />\n    </View>\n  );\n});\n","import { Toast } from \"@/libs/ui-kit\";\nimport styles from \"./index.module.less\";\nimport { useEffect, useState } from \"react\";\nimport { type UIChatToastEvent, UIEventType } from \"@/libs/types\";\nimport { useUiEventStore } from \"@/libs/provider/context/chat-store-context\";\nimport { View } from \"@tarojs/components\";\nexport const ChatToast = () => {\n  const [event, setEvent] = useState<UIChatToastEvent>();\n  const uiEvent = useUiEventStore((store) => store.event);\n  useEffect(() => {\n    uiEvent.on(UIEventType.ChatToastShow, (e: UIChatToastEvent) => {\n      setEvent(e);\n    });\n  }, [uiEvent]);\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setEvent(undefined);\n    }, Math.max(Math.min(10000, event?.duration || 6000), 3000));\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [event]);\n  if (!event || !event.content) {\n    return null;\n  }\n  return (\n    <View className={styles[\"chat-toast\"]}>\n      <Toast className={styles.container} icon={event.icon} isNeedClose={false}>\n        {event.content}\n      </Toast>\n    </View>\n  );\n};\n","export { ChatFramework } from \"./component/chat-framework\";\nexport { ChatSlot } from \"./component/chat-slot\";\nexport { ChatErrorDefault } from \"./component/chat-error\";\n","export { useValidContext } from \"./use-valid-context\";\nexport { useUpdateEffect } from \"./use-update-effect\";\nexport { usePersistCallback } from \"./use-persist-callback\";\nexport { useSize } from \"./use-size\";\n","import { useCallback, useRef } from \"react\";\n\nexport const usePersistCallback = <T extends (...args: any[]) => any>(\n  fn: T\n) => {\n  const ref = useRef<T>(fn);\n  ref.current = fn;\n  return useCallback((...args: Parameters<T>) => ref.current(...args), []);\n};\n","import { getBoundingRect, isWeb } from \"@/libs/utils\";\nimport { useEffect, useState } from \"react\";\nimport { usePersistCallback } from \"./use-persist-callback\";\ntype Size = { width: number; height: number };\n\nexport const useSize = (id: string) => {\n  const [size, setState] = useState<Size>(() => {\n    return {\n      width: 0,\n      height: 0,\n    };\n  });\n  const reInitSize = usePersistCallback(() => {\n    if (isWeb) {\n      const el = document.getElementById(id);\n      if (el) {\n        return {\n          width: el.clientWidth,\n          height: el.clientHeight,\n        };\n      }\n    } else {\n      getBoundingRect(`#${id}`).then((res) => {\n        if (res?.[0]?.width) {\n          setState({\n            width: res[0].width,\n            height: res[0].height,\n          });\n        }\n      });\n    }\n  });\n  useEffect(() => {\n    reInitSize();\n  }, [id]);\n\n  useEffect(() => {\n    //网页监听变化\n    if (!isWeb) {\n      return;\n    }\n    const el = document.getElementById(id);\n    if (!el) {\n      return;\n    }\n    const resizeObserver = new ResizeObserver((entries) => {\n      entries.forEach((entry) => {\n        const { clientWidth, clientHeight } = entry.target;\n        setState({ width: clientWidth, height: clientHeight });\n      });\n    });\n    resizeObserver.observe(el);\n    return () => {\n      resizeObserver.disconnect();\n    };\n  }, [id]);\n  return { ...size, reInitSize };\n};\n","import { useEffect, useRef } from \"react\";\n\nexport const useUpdateEffect = (effect: () => void, deps: any[]) => {\n  const isMounted = useRef(false);\n  useEffect(() => {\n    if (!isMounted.current) {\n      isMounted.current = true;\n    } else {\n      return effect();\n    }\n  }, deps);\n};\n","import { type Context, useContext } from 'react';\n\nimport { isValidContext } from '@/libs/utils';\nimport { type NullableType } from '@/libs/types';\n\nexport const useValidContext = <T>(\n  context: Context<NullableType<T>>,\n  errorMsg = 'Invalid chat frame context',\n) => {\n  const value = useContext(context);\n  if (!isValidContext(value)) {\n    throw new Error(errorMsg);\n  }\n  return value;\n};\n","import { II18n, Language } from \"@/libs/types\";\n\nimport { resource } from \"./resource\";\n\nexport class I18n implements II18n {\n  readonly language;\n  constructor(language: string) {\n    this.language = language;\n  }\n  t(\n    key: string,\n    _options?: Record<string, unknown>,\n    _fallbackText?: string\n  ): string {\n    const i18nKey = resource[this.language] || resource[Language.EN];\n    if (i18nKey.simple[key]) {\n      return i18nKey.simple[key];\n    } else if (i18nKey.special[key]) {\n      return i18nKey.special[key](_options);\n    } else {\n      return _fallbackText || \"\";\n    }\n  }\n}\n","import { Language } from '@/libs/types';\n\nimport { type Resource } from './type';\nimport SpecialCn from './special/zh';\nimport SpecialEn from './special/en';\nimport SimpleCn from './simple/zh';\nimport SimpleEn from './simple/en';\n\nexport const resource: Record<Language, Resource> = {\n  [Language.EN]: {\n    simple: SimpleEn,\n    special: SpecialEn,\n  },\n  [Language.ZH_CN]: {\n    simple: SimpleCn,\n    special: SpecialCn,\n  },\n};\n","export default {\n  noAnswer: \"No answer\",\n  chatFooterTip: \"Powered by Coze\",\n  sendFailed: \"Send Failed\",\n  chatInputPlaceholder: \"Send Message\",\n  retryBtn: \"retry\",\n  messageListLoading: \"loading...\",\n  chooseImage: \"picture\",\n  chooseCamera: \"camera\",\n  chooseImageError: \"upload failed\",\n  messageTypeUnSupport: \"The message is not unsupported.\",\n  defaultHeaderTitle: \"Coze Bot\",\n  copyCode: \"Copy\",\n  copyText: \"Copy\",\n  copySuccess: \"Copy success\",\n  copyFailed: \"Copy failed\",\n  clearContextDivide: \"Context cleared\",\n  clearContextFailed: \"Clear context failed\",\n  clearMessageFailed: \"Clear message failed\",\n  playVoice: \"Play voice\",\n  permissionMkfTitle: \"Turn on microphone permission\",\n  permissionMkfDesc:\n    \"Unable to use the voice interaction function, please reauthorize the microphone permission\",\n  permissionMkfBtnIKnown: \"I know\",\n\n  audioInputPcText: \"Hold down here or the space to speak\",\n  audioInputMobileText: \"Hold on and talk\",\n  audioInputTooltipTouching: \"Slide up to cancel the input and let go\",\n  audioInputTooltipCancel: \"Release your hand to cancel the send\",\n  audioInputErrorUnDetectContent: \"No content was detected\",\n  audioInputErrorRecord: \"Recording has failed, please try again\",\n  unFocusInputText: \"Click to activate input\",\n  audioInputTooltipSend: \"Release to send\",\n  audioInputDisabledText: \"Sending...\",\n  playVoiceFail: \"Play voice failed\",\n  sendMessageUploadFailed: \"Failed to upload file\",\n  sendMessageTranslationAudioFailed: \"Failed to identify content\",\n  sendMessageTranslationAudioNone: \"The content is not recognized\",\n  submit: \"Submit\",\n  chatflowNodeInputPlaceholder: \"Please enter content\",\n\n  taskMessageMyChoice: \"My Choice:\",\n\n  miniChatError_1001: \"The content is not recognized\",\n  miniChatError_1002: \"Failed to create conversation\",\n  miniChatError_1003: \"Failed to get message list\",\n\n  miniChatError_4000: \"Request parameter error\",\n  miniChatError_4001: \"The specified conversation does not exist\",\n  miniChatError_4002: \"The specified conversation does not exist\",\n  miniChatError_4003:\n    \"The parameter passed to the meta_data field exceeds the field limit\",\n\n  miniChatError_4004:\n    \"The parameter passed to the additional_messages field exceeds the field limit\",\n  miniChatError_4005: \"The specified message does not exist\",\n  miniChatError_4006: \"The specified message does not exist\",\n  miniChatError_4008: \"The daily use of the Bot has exceeded the limit\",\n  miniChatError_4009: \"The current number of users is too high\",\n  miniChatError_4010:\n    \"The prompt token number of the previous question exceeds the model limit.\",\n  miniChatError_4011:\n    \"Insufficient balance of Coze Tokens in the current account.\",\n  miniChatError_4012: \"Invalid model\",\n  miniChatError_4013:\n    \"Due to limited resources, the model usage frequency may be too high and the request may be intercepted by the system\",\n  miniChatError_4014: \"The Bot cannot answer this question\",\n  miniChatError_4015: \"The Bot is not published\",\n  miniChatError_4016:\n    \"There is already a running conversation in the current session, please wait for the conversation to complete before initiating a new conversation\",\n  miniChatError_4019:\n    \"The account has an overdue payment, please recharge immediately.\",\n  miniChatError_4020: \"The current RPM has exceeded the purchased quota\",\n  miniChatError_4027:\n    \"Your account has an overdue payment, please recharge immediately.\",\n  miniChatError_4028:\n    \"Insufficient coze credits balance, please wait for the quota refresh or upgrade to paid version.\",\n\n  miniChatError_4100: \"The personal access token (PAT) is incorrect\",\n  miniChatError_4101:\n    \"The personal access token currently used does not have permission to access the resource\",\n  miniChatError_4300: \"The file to be uploaded is empty\",\n  miniChatError_4301: \"Only one file can be uploaded at a time\",\n  miniChatError_4302:\n    \"The file size to be uploaded exceeds the interface limit\",\n  miniChatError_4303: \"The file format is not supported\",\n  miniChatError_4304: \"File issues\",\n  miniChatError_5000: \"Internal server error\",\n  miniChatError_6006:\n    \"Workflow code node execution timeout: The node in the workflow has exceeded its max execution time one minute. \",\n  miniChatError_700012006: \"The personal access token (PAT) is incorrect\",\n  miniChatError_788788103:\n    \"Your account has an overdue payment, please recharge immediately.\",\n};\n","export default {\n  noAnswer: \"没有回答\",\n  chatFooterTip: \"由扣子提供\",\n  sendFailed: \"发送失败\",\n  chatInputPlaceholder: \"发送消息\",\n  retryBtn: \"重试\",\n  messageListLoading: \"加载中...\",\n  chooseImage: \"照片\",\n  chooseCamera: \"拍照\",\n  chooseImageError: \"上传失败\",\n  messageTypeUnSupport: \"不支持支持该消息格式\",\n  defaultHeaderTitle: \"扣子智能体\",\n  copyCode: \"复制\",\n  copyText: \"复制\",\n  submit: \"提交\",\n  copySuccess: \"复制成功\",\n  copyFailed: \"复制失败\",\n  clearContextDivide: \"清空上下文\",\n  clearContextFailed: \"清空上下文失败\",\n  clearMessageFailed: \"清空消息失败\",\n  playVoice: \"播放语音\",\n  permissionMkfTitle: \"开启麦克风权限\",\n  permissionMkfDesc: \"无法使用语音交互功能，请重新授权麦克风权限\",\n  permissionMkfBtnIKnown: \"我知道了\",\n  audioInputPcText: \"按住此处或空格说话\",\n  audioInputMobileText: \"按住说话\",\n  audioInputTooltipTouching: \"上滑取消输入，松手发送\",\n  audioInputTooltipSend: \"松手发送\",\n  audioInputTooltipCancel: \"松手取消发送\",\n  audioInputErrorUnDetectContent: \"未检测到内容\",\n  audioInputErrorRecord: \"录音失败，请重试\",\n  audioInputDisabledText: \"消息发送中...\",\n  unFocusInputText: \"点击当前对话区激活输入框\",\n\n  playVoiceFail: \"播放失败\",\n\n  sendMessageUploadFailed: \"上传文件失败\",\n  sendMessageTranslationAudioFailed: \"识别内容失败\",\n  sendMessageTranslationAudioNone: \"未识别到内容\",\n  chatflowNodeInputPlaceholder: \"请输入内容\",\n  taskMessageMyChoice: \"我的选择是：\",\n\n  miniChatError_1001: \"未识别到内容\",\n  miniChatError_1002: \"会话创建失败\",\n  miniChatError_1003: \"获取消息列表失败\",\n\n  miniChatError_4000: \"请求参数错误\",\n  miniChatError_4001: \"指定对话不存在\",\n\n  miniChatError_4002: \"指定对话不存在\",\n  miniChatError_4003: \"meta_data 字段的传参超出字段限制\",\n  miniChatError_4004: \"additional_messages 字段的传参超出字段限制\",\n  miniChatError_4005: \"指定消息不存在\",\n  miniChatError_4006: \"指定消息不存在\",\n  miniChatError_4008: \"当日 Bot 使用次数超过限制\",\n  miniChatError_4009: \"当前使用人数过多\",\n  miniChatError_4010: \"前问题请求的 prompt token 数量超过模型上限\",\n  miniChatError_4011: \"当前账户的 Coze Token 余额不足\",\n  miniChatError_4012: \"无效模型\",\n  miniChatError_4013: \"因资源有限，模型使用频率过高时，请求可能会被系统拦截\",\n  miniChatError_4014: \"Bot 无法回答此问题\",\n  miniChatError_4015: \"此 Bot 未发布\",\n  miniChatError_4016:\n    \"当前会话中已有运行中的对话，请等待对话完成后再发起新的对话\",\n  miniChatError_4019: \"扣子专业版账号已欠费\",\n  miniChatError_4020: \"当前 RPM 已超出购买的额度\",\n\n  miniChatError_4027: \"专业版账户已欠费，请立即充值\",\n  miniChatError_4028: \"资源点余额不足，请等待额度刷新或升级到专业版\",\n\n  miniChatError_4100: \"个人访问令牌（PAT）不正确\",\n  miniChatError_4101: \"当前使用的个人访问令牌没有权限访问该资源\",\n  miniChatError_4300: \"待上传的文件为空\",\n  miniChatError_4301: \"每次调用上传文件接口，只能上传一个文件\",\n  miniChatError_4302: \"待上传的文件大小超出接口限制\",\n  miniChatError_4303: \"文件格式问题，暂不支持上传此类型的文件\",\n  miniChatError_4304: \"文件故障等问题\",\n  miniChatError_5000: \"服务端内部错误\",\n  miniChatError_6006: \"code节点超时\",\n  miniChatError_700012006: \"个人访问令牌（PAT）不正确\",\n  miniChatError_788788103: \"专业版账户已欠费，请立即充值\",\n};\n","import { I18nSpecial } from \"../type\";\nconst resource: I18nSpecial = {\n  chatInitRetry: (options) => <>Start error,{options?.retry}</>,\n  messageListRetry: (options) => (\n    <>Get message history error,{options?.retry}</>\n  ),\n  copyLinkSuccess: (options) => `Copy link: ${options?.url}`,\n  audioInputTooltipTick: (options) => (\n    <>{options?.duration} automatically end recording after and sending</>\n  ),\n};\nexport default resource;\n","import { I18nSpecial } from \"../type\";\nconst resource: I18nSpecial = {\n  chatInitRetry: (options) => <>启动遇到问题，{options?.retry}</>,\n  messageListRetry: (options) => <>获取历史数据失败，{options?.retry}</>,\n  copyLinkSuccess: (options) => `复制链接: ${options?.url}`,\n  audioInputTooltipTick: (options) => (\n    <>{options?.duration} 后自动结束录制并发送</>\n  ),\n};\nexport default resource;\n","export { ChatFramework, ChatSlot, ChatErrorDefault } from \"./framework\";\nexport {\n  useChatInfoStore,\n  useConversationStore,\n  useInitSuccess,\n} from \"./provider\";\nexport { MdStream } from \"./ui-kit\";\nexport { ChatService, useSendMessage } from \"./services\";\nexport { Logger } from \"./utils\";\nexport * from \"./types\";\n","import { createContext, FC } from \"react\";\n\nimport { type ChatFrameworkProps, type NullableType } from \"@/libs/types\";\nimport { useValidContext } from \"@/libs/hooks\";\nexport type NullChatFrameworkProps = NullableType<ChatFrameworkProps>;\nconst ChatFramePropsContext = createContext<NullChatFrameworkProps>({\n  chat: null,\n  auth: null,\n  user: null,\n  children: null,\n  setting: null,\n});\nexport const ChatFamePropsProvider: FC<NullChatFrameworkProps> = ({\n  children,\n  ...props\n}) => <ChatFramePropsContext.Provider value={props} children={children} />;\nexport const useChatPropsContext = () =>\n  useValidContext<ChatFrameworkProps>(ChatFramePropsContext);\n","import { createContext, useMemo, FC, PropsWithChildren } from \"react\";\nimport { logger } from \"@/libs/utils\";\nimport { useStoreWithEqualityFn } from \"zustand/traditional\";\nimport { shallow } from \"zustand/shallow\";\n\nimport type {\n  ApiClientStore,\n  ChatInfoStore,\n  ConversationStore,\n  ChatStatusStore,\n  UserInfoStore,\n  ChatPropsStore,\n  UiEventStore,\n  ChatInputStore,\n} from \"@/libs/types\";\nimport { NullableType, Language } from \"@/libs/types\";\nimport {\n  createApiClientStore,\n  type CreateApiClientStore,\n  useCreateChatInfoStore,\n  type CreateChatInfoStore,\n  useCreateConversationStore,\n  type CreateConversationStore,\n  useCreateStatusStore,\n  type CreateChatStatusStore,\n  useCreateUserInfoStore,\n  type CreateUserInfoStore,\n  useCreateChatPropsStore,\n  type CreateChatPropsStore,\n  useCreateUiEventStore,\n  type CreateUiEventStore,\n  useCreateChatInputStore,\n  type CreateChatInputStore,\n} from \"@/libs/provider/store\";\nimport { I18n as I18nLocal } from \"@/libs/i18n\";\nimport { useValidContext } from \"@/libs/hooks\";\n\nimport { useChatPropsContext } from \"./chat-frame-props-context\";\n\n/**** Begin store的定义位置 */\nenum StoreType {\n  ApiClientStore,\n  ChatInfoStore,\n  ConversationStore,\n  ChatStatusStore,\n  UserInfoStore,\n  I18n,\n  ChatPropsStore,\n  UiEvent,\n  ChatInputStore,\n}\n\ninterface StoreContextInter {\n  [StoreType.ApiClientStore]: CreateApiClientStore;\n  [StoreType.ChatInfoStore]: CreateChatInfoStore;\n  [StoreType.ConversationStore]: CreateConversationStore;\n  [StoreType.ChatStatusStore]: CreateChatStatusStore;\n  [StoreType.UserInfoStore]: CreateUserInfoStore;\n  [StoreType.I18n]: I18nLocal;\n  [StoreType.ChatPropsStore]: CreateChatPropsStore;\n  [StoreType.UiEvent]: CreateUiEventStore;\n  [StoreType.ChatInputStore]: CreateChatInputStore;\n}\n\nconst ChatStoreContext = createContext<NullableType<StoreContextInter>>({\n  [StoreType.ApiClientStore]: null,\n  [StoreType.ChatInfoStore]: null,\n  [StoreType.ConversationStore]: null,\n  [StoreType.ChatStatusStore]: null,\n  [StoreType.UserInfoStore]: null,\n  [StoreType.I18n]: null,\n  [StoreType.ChatPropsStore]: null,\n  [StoreType.UiEvent]: null,\n  [StoreType.ChatInputStore]: null,\n});\n\n/*** End store的定义位置 */\nexport const ChatPropsProvider = ChatStoreContext.Provider;\n\nexport const ChatStoreProvider: FC<PropsWithChildren> = ({ children }) => {\n  const chatProps = useChatPropsContext();\n  const { auth, chat, setting } = chatProps;\n  logger.setLoglevel(setting?.logLevel);\n  const apiClientStore = useMemo(\n    () => createApiClientStore({ auth, setting, chat }),\n    []\n  );\n  const chatInfoStore = useCreateChatInfoStore();\n  const conversationStore = useCreateConversationStore();\n  const chatStatusStore = useCreateStatusStore();\n  const userInfoStore = useCreateUserInfoStore();\n  const chatPropsStore = useCreateChatPropsStore();\n  const uiEventStore = useCreateUiEventStore();\n  const chatInputStore = useCreateChatInputStore();\n  const i18nLocal = useMemo(\n    () => setting?.i18n || new I18nLocal(setting?.language || Language.ZH_CN),\n    []\n  );\n  const storeMap = useMemo(() => {\n    return {\n      [StoreType.ApiClientStore]: apiClientStore,\n      [StoreType.ChatInfoStore]: chatInfoStore,\n      [StoreType.ConversationStore]: conversationStore,\n      [StoreType.ChatStatusStore]: chatStatusStore,\n      [StoreType.UserInfoStore]: userInfoStore,\n      [StoreType.I18n]: i18nLocal,\n      [StoreType.ChatPropsStore]: chatPropsStore,\n      [StoreType.UiEvent]: uiEventStore,\n      [StoreType.ChatInputStore]: chatInputStore,\n    };\n  }, []);\n  logger.debug(\"ChatFramework props:\", chatProps);\n  return (\n    <ChatStoreContext.Provider value={storeMap}>\n      {children}\n    </ChatStoreContext.Provider>\n  );\n};\nconst useChatStoreContext = () => useValidContext(ChatStoreContext);\n\nexport const useApiClientStore: <T>(\n  selector: (store: ApiClientStore) => T\n) => T = (selector) => {\n  const store = useChatStoreContext();\n  return useStoreWithEqualityFn(\n    store[StoreType.ApiClientStore],\n    selector,\n    shallow\n  );\n};\n\nexport const useChatInfoStore: <T>(\n  selector: (store: ChatInfoStore) => T\n) => T = (selector) => {\n  const store = useChatStoreContext();\n  return useStoreWithEqualityFn(\n    store[StoreType.ChatInfoStore],\n    selector,\n    shallow\n  );\n};\n\nexport const useConversationStore: <T>(\n  selector: (store: ConversationStore) => T\n) => T = (selector) => {\n  const store = useChatStoreContext();\n  return useStoreWithEqualityFn(\n    store[StoreType.ConversationStore],\n    selector,\n    shallow\n  );\n};\n\nexport const useChatStatusStore: <T>(\n  selector: (store: ChatStatusStore) => T\n) => T = (selector) => {\n  const store = useChatStoreContext();\n  return useStoreWithEqualityFn(\n    store[StoreType.ChatStatusStore],\n    selector,\n    shallow\n  );\n};\n\nexport const useUserInfoStore: <T>(\n  selector: (store: UserInfoStore) => T\n) => T = (selector) => {\n  const store = useChatStoreContext();\n  return useStoreWithEqualityFn(\n    store[StoreType.UserInfoStore],\n    selector,\n    shallow\n  );\n};\n\nexport const useI18n = () => {\n  const store = useChatStoreContext();\n  return store[StoreType.I18n];\n};\n\nexport const useChatPropsStore: <T>(\n  selector: (store: ChatPropsStore) => T\n) => T = (selector) => {\n  const store = useChatStoreContext();\n  return useStoreWithEqualityFn(\n    store[StoreType.ChatPropsStore],\n    selector,\n    shallow\n  );\n};\n\nexport const useUiEventStore: <T>(selector: (store: UiEventStore) => T) => T = (\n  selector\n) => {\n  const store = useChatStoreContext();\n  return useStoreWithEqualityFn(store[StoreType.UiEvent], selector, shallow);\n};\n\nexport const useChatInputStore: <T>(\n  selector: (store: ChatInputStore) => T\n) => T = (selector) => {\n  const store = useChatStoreContext();\n  return useStoreWithEqualityFn(\n    store[StoreType.ChatInputStore],\n    selector,\n    shallow\n  );\n};\n","export {\n  ChatFamePropsProvider,\n  type NullChatFrameworkProps,\n  useChatPropsContext,\n} from \"./chat-frame-props-context\";\nexport {\n  ChatStoreProvider,\n  useApiClientStore,\n  useChatInfoStore,\n  useConversationStore,\n  useChatStatusStore,\n  useUserInfoStore,\n  useI18n,\n  useChatPropsStore,\n  useChatInputStore,\n} from \"./chat-store-context\";\n","import { FC } from \"react\";\n\nimport {\n  ChatFamePropsProvider,\n  ChatStoreProvider,\n  type NullChatFrameworkProps,\n} from \"./context\";\n\nexport const ChatFrameProvider: FC<NullChatFrameworkProps> = ({\n  children,\n  ...resProps\n}) => {\n  return (\n    <ChatFamePropsProvider {...resProps}>\n      <ChatStoreProvider>{children}</ChatStoreProvider>\n    </ChatFamePropsProvider>\n  );\n};\n","import { logger } from \"@/libs/utils\";\nimport { useChatPropsStore } from \"../context\";\n\nexport const useChatMaxWidth = () => {\n  const maxWidth = useChatPropsStore((store) => {\n    logger.debug(\n      \"ChatSlot useChatPropsStore...\",\n      store.ui?.chatSlot?.base?.maxWidth\n    );\n    return store.ui?.chatSlot?.base?.maxWidth;\n  });\n  if (!maxWidth) {\n    return undefined;\n  }\n  if (!(maxWidth - 0)) {\n    return undefined;\n  }\n  return Math.max(300, maxWidth - 0);\n};\n","import { useChatInfoStore, useChatPropsStore } from \"@/libs/provider\";\n\nexport const useInitBgInfo = () => {\n  const bgInfoFromProps = useChatPropsStore((store) => store.chat.bgInfo);\n  const bgInfo = useChatInfoStore((store) => store.info?.bgInfo);\n  const bgInfoResult = bgInfoFromProps || bgInfo;\n  return bgInfoResult;\n};\n","import { useChatInfoStore } from \"../context\";\n\nexport const useInitSuccess = () => {\n  const { isLoading, error } = useChatInfoStore((store) => ({\n    isLoading: store.isLoading,\n    error: store.error,\n  }));\n  return isLoading === false && !error ? true : false;\n};\n","import { useChatPropsStore } from \"@/libs/provider\";\n\nexport const useLayout = () => {\n  const layout = useChatPropsStore((store) => store.ui?.layout);\n  return layout === \"mobile\" ? \"mobile\" : \"pc\";\n};\nexport const useIsMobile = () => {\n  return useLayout() === \"mobile\";\n};\n","import { ThemeType } from \"@/exports\";\nimport { useInitBgInfo } from \"./use-init-bg-info\";\n\nexport const useThemeType = (): ThemeType => {\n  const bgInfo = useInitBgInfo();\n  const theme = bgInfo?.pc && bgInfo?.mobile ? \"bg-theme\" : \"light\";\n  return theme;\n};\n","import { Language } from \"@/libs/types\";\nimport { useChatInfoStore, useChatPropsStore, useI18n } from \"../context\";\nimport { logger } from \"@/libs/utils\";\nimport { InputType } from \"@/libs/ui-kit/chat-input/type\";\n\nexport const useVoiceInfo = () => {\n  const voiceInfo = useChatInfoStore((store) => store.info?.voiceInfo);\n\n  return voiceInfo;\n};\nexport const useIsNeedAudioInput = () => {\n  const isNeedAudio = useChatPropsStore(\n    (store) => store.ui?.chatSlot?.input?.isNeedAudio\n  );\n  /*const isWeixinWeb = useMemo(() => {\n    if (isWeb) {\n      if (navigator.userAgent.includes(\"wechat\")) {\n        return true;\n      }\n    }\n    return false;\n  }, []);*/\n  // Tha audio input is not suppotted in weixin webview\n  return isNeedAudio || false;\n};\n\nexport const useDefaultInputMode = () => {\n  const defaultMode = useChatInfoStore(\n    (store) => store.info?.inputMode?.default\n  );\n  const isNeedAudio = useIsNeedAudioInput();\n  return defaultMode === 2 && isNeedAudio ? InputType.Voice : InputType.Text;\n};\n\nexport const useVoiceId = () => {\n  const voiceInfo = useChatInfoStore((store) => store.info?.voiceInfo);\n  const i18n = useI18n();\n  const langList =\n    i18n.language === Language.ZH_CN ? [\"zh\", \"en\"] : [\"en\", \"zh\"];\n  let voiceId;\n  for (let i = 0; i < langList.length; i++) {\n    if (voiceInfo?.voiceConfigMap?.[langList[i]]?.voice_id) {\n      voiceId = voiceInfo?.voiceConfigMap?.[langList[i]]?.voice_id;\n    }\n  }\n  logger.debug(\"useVoiceId voiceInfo:\", voiceInfo, voiceId);\n  return voiceId;\n};\n\nexport const useIsNeedTextToAudio = () => {\n  const voiceInfo = useVoiceInfo();\n  const voiceId = useVoiceId();\n  logger.debug(\"useIsNeedAudioInput info:\", {\n    voiceId,\n    isNeedTextToAudio: (voiceId && !!voiceInfo?.isTextToVoiceEnable) || false,\n  });\n  return (voiceId && !!voiceInfo?.isTextToVoiceEnable) || false;\n};\n","export {\n  useChatPropsContext,\n  useApiClientStore,\n  useChatInfoStore,\n  useConversationStore,\n  useChatStatusStore,\n  useUserInfoStore,\n  useI18n,\n  useChatPropsStore,\n} from \"./context\";\nexport { ChatFrameProvider } from \"./framework\";\nexport { useInitBgInfo } from \"./hooks/use-init-bg-info\";\nexport { useThemeType } from \"./hooks/use-theme-type\";\nexport { useLayout, useIsMobile } from \"./hooks/use-laytout\";\nexport { useInitSuccess } from \"./hooks/use-init-success\";\nexport { useChatMaxWidth } from \"./hooks/use-chat-max-width\";\nexport {\n  useIsNeedAudioInput,\n  useVoiceId,\n  useIsNeedTextToAudio,\n  useDefaultInputMode,\n} from \"./hooks/use-voice-info\";\n","import { create } from \"zustand\";\nimport { logger, MiniCozeApi } from \"@/libs/utils\";\nimport type { ApiCreateStoreProps, ApiClientStore } from \"@/libs/types\";\nimport { ChatService } from \"@/libs/services\";\nexport const createApiClientStore = ({\n  auth,\n  setting,\n  chat,\n}: ApiCreateStoreProps) => {\n  const { token, onRefreshToken, connectorId = \"999\" } = auth;\n  const {\n    apiBaseUrl,\n    requestHeader = {},\n    onGetCustomChatService,\n  } = setting || {};\n  const apiClient = new MiniCozeApi({\n    token,\n    allowPersonalAccessTokenInBrowser: true,\n    baseURL: apiBaseUrl,\n    axiosOptions: {\n      headers: {\n        ...requestHeader,\n      },\n    },\n    debug: logger.isDebug(),\n    onRefreshToken: onRefreshToken,\n  });\n  const chatServiceProps = {\n    apiClient,\n    connectorId,\n    appId: chat.appId,\n    chatType: chat.type,\n  };\n  const chatService =\n    onGetCustomChatService?.(chatServiceProps) ||\n    new ChatService(chatServiceProps);\n  return create<ApiClientStore>()((_set) => ({\n    connectorId,\n    apiClient,\n    chatService,\n  }));\n};\n\nexport type CreateApiClientStore = ReturnType<typeof createApiClientStore>;\n","import { create } from \"zustand\";\n\nimport type { ChatInfoStore, ChatInfo } from \"@/libs/types\";\nimport { useChatPropsContext } from \"../context\";\nimport { useMemo } from \"react\";\nimport { useUpdateEffect } from \"@/libs/hooks\";\nimport { logger, MiniChatError } from \"@/libs/utils\";\nconst getCustomChatInfo = (chat: ChatInfo): Partial<ChatInfo> => {\n  return Object.fromEntries(\n    Object.entries({\n      name: chat.name,\n      description: chat.description,\n      icon_url: chat.icon_url,\n      onboarding_info: chat.onboarding_info,\n      bgInfo: chat.bgInfo,\n      voiceInfo: chat.voiceInfo,\n      suggestPromoteInfo: chat.suggestPromoteInfo,\n    }).filter(([_, value]) => !!value)\n  );\n};\n\nconst combineChatInfo = (\n  chatInfoFromInit: ChatInfo,\n  customChatInfo: Partial<ChatInfo>\n) => {\n  const customSuggestionList =\n    customChatInfo.onboarding_info?.suggested_questions?.filter(\n      (item) => !!item\n    ) || [];\n  return {\n    ...chatInfoFromInit,\n    ...customChatInfo,\n    onboarding_info: {\n      display_all_suggestions:\n        customChatInfo.onboarding_info?.display_all_suggestions ??\n        chatInfoFromInit.onboarding_info?.display_all_suggestions,\n      prologue: !!customChatInfo.onboarding_info?.prologue\n        ? customChatInfo.onboarding_info?.prologue\n        : chatInfoFromInit.onboarding_info?.prologue,\n      suggested_questions: (!!customSuggestionList?.length\n        ? customSuggestionList\n        : chatInfoFromInit.onboarding_info?.suggested_questions\n      )?.filter((item) => !!item),\n    },\n  };\n};\nconst createChatInfoStore = ({ chat }: { chat: ChatInfo }) => {\n  // If the chat's parameter(name, description, icon_url, onboarding_info) is not empty, then use it to set the chat info\n  let customChatInfo = getCustomChatInfo(chat);\n  let chatInfoFromInit: ChatInfo | undefined;\n  return create<ChatInfoStore>()((set) => ({\n    id: chat.appId,\n    type: chat.type,\n    info: null,\n    isLoading: true,\n    error: null,\n    setIsLoading: (isLoading: boolean) => {\n      set({\n        isLoading,\n        error: null,\n      });\n    },\n    // 设置系统配置的数据\n    setChatInfo: (info: ChatInfo) => {\n      chatInfoFromInit = info;\n      logger.debug(\"setChatInfo\", { initInfo: info, customChatInfo });\n      set({\n        error: null,\n        isLoading: false,\n        info: combineChatInfo(chatInfoFromInit, customChatInfo),\n      });\n    },\n    // 设置自定义参数\n    setCustomChatInfo: (info: ChatInfo) => {\n      customChatInfo = getCustomChatInfo(info);\n      if (!chatInfoFromInit) {\n        return;\n      }\n      logger.debug(\"setCustomChatInfo\", {\n        oldInfo: chatInfoFromInit,\n        customChatInfo,\n      });\n      set({\n        info: combineChatInfo(chatInfoFromInit, customChatInfo),\n      });\n    },\n    setError: (error: MiniChatError | null) => {\n      set({\n        isLoading: false,\n        error,\n      });\n    },\n  }));\n};\n\nexport type CreateChatInfoStore = ReturnType<typeof createChatInfoStore>;\n\nexport const useCreateChatInfoStore = () => {\n  const chatProps = useChatPropsContext();\n  const chatInfoStore = useMemo(\n    () => createChatInfoStore({ chat: chatProps.chat }),\n    []\n  );\n  useUpdateEffect(() => {\n    logger.debug(\"useCreateChatInfoStore update chat props: \", chatProps.chat);\n    chatInfoStore.getState().setCustomChatInfo(chatProps.chat);\n  }, [chatProps.chat]);\n  return chatInfoStore;\n};\n","import { create } from \"zustand\";\n\nimport type { ChatInputStore } from \"@/libs/types\";\nimport { useMemo } from \"react\";\nconst createChatInputStore = () => {\n  return create<ChatInputStore>()((set) => ({\n    taskList: [],\n    setTaskList: (props) => {\n      set({\n        taskList: props?.taskList || [],\n      });\n    },\n  }));\n};\n\nexport type CreateChatInputStore = ReturnType<typeof createChatInputStore>;\n\nexport const useCreateChatInputStore = () => {\n  const chatInputStore = useMemo(() => createChatInputStore(), []);\n  return chatInputStore;\n};\n","import { create } from \"zustand\";\n\nimport { logger } from \"@/libs/utils\";\nimport type { ChatFrameworkProps, ChatPropsStore } from \"@/libs/types\";\nimport { useChatPropsContext } from \"../context\";\nimport { useMemo } from \"react\";\nimport { useUpdateEffect } from \"@/libs/hooks\";\nconst createChatPropsStore = (props: ChatFrameworkProps) => {\n  logger.debug(\"createChatPropsStore\", props);\n  return create<ChatPropsStore>()((set) => ({\n    ...props,\n    setChatProps: (props) => {\n      set({\n        ...props,\n      });\n    },\n  }));\n};\n\nexport type CreateChatPropsStore = ReturnType<typeof createChatPropsStore>;\n\nexport const useCreateChatPropsStore = () => {\n  const chatProps = useChatPropsContext();\n  const chatPropsStore = useMemo(() => createChatPropsStore(chatProps), []);\n  useUpdateEffect(() => {\n    chatPropsStore.getState().setChatProps(chatProps);\n    logger.debug(\"useCreateChatPropsStore props Change\", chatProps);\n  }, [chatProps]);\n  return chatPropsStore;\n};\n","import { create } from \"zustand\";\n\nimport type { ChatStatusStore } from \"@/libs/types\";\nimport { useChatPropsContext } from \"../context\";\nimport { useMemo } from \"react\";\nimport { useUpdateEffect } from \"@/libs/hooks\";\n\nconst createChatStatusStore = ({ isReadonly }: { isReadonly?: boolean }) =>\n  create<ChatStatusStore>()((set, get) => {\n    const wrapStateFunc =\n      <T extends (...args) => unknown>(func: T) =>\n      (...args: Parameters<T>) => {\n        const result = func(...args);\n        get().setOpDisabledState();\n        return result;\n      };\n    return {\n      isReadonly: isReadonly || false,\n      isDeleting: false,\n      isSendingMsg: false,\n      isClearingContext: false,\n      isAudioRecording: false,\n      disableState: {\n        clearMessage: isReadonly || false,\n        clearContext: isReadonly || false,\n        input: isReadonly || false,\n      },\n      setIsReadonly: wrapStateFunc((isReadonly: boolean) => {\n        set({\n          isReadonly,\n        });\n      }),\n      setIsAudioRecording: wrapStateFunc((isAudioRecording: boolean) => {\n        set({\n          isAudioRecording,\n        });\n      }),\n      setIsDeleting: wrapStateFunc((isDeleting: boolean) => {\n        set({\n          isDeleting,\n        });\n      }),\n      setIsSendingMsg: wrapStateFunc((isSendingMsg: boolean) => {\n        set({\n          isSendingMsg,\n        });\n      }),\n      setIsClearingContext: wrapStateFunc((isClearingContext: boolean) => {\n        set({\n          isClearingContext,\n        });\n      }),\n\n      setOpDisabledState: () => {\n        set({\n          disableState: get().getOpDisabledState(),\n        });\n      },\n      getOpDisabledState: () => {\n        const { isDeleting, isSendingMsg, isClearingContext, isReadonly } =\n          get();\n        const isInteracting = isDeleting || isSendingMsg || isClearingContext;\n        return {\n          clearMessage: isReadonly || isInteracting,\n          input: isReadonly || isInteracting,\n          clearContext: isReadonly || isInteracting,\n        };\n      },\n    };\n  });\n\nexport type CreateChatStatusStore = ReturnType<typeof createChatStatusStore>;\n\nexport const useCreateStatusStore = () => {\n  const chatProps = useChatPropsContext();\n  const chatStatusStore = useMemo(\n    () => createChatStatusStore({ isReadonly: chatProps.ui?.isReadonly }),\n    []\n  );\n  useUpdateEffect(() => {\n    chatStatusStore.getState().setIsReadonly(!!chatProps.ui?.isReadonly);\n  }, [chatProps.ui?.isReadonly]);\n  return chatStatusStore;\n};\n","import { create } from \"zustand\";\n\nimport { logger, nanoid } from \"@/libs/utils\";\nimport type {\n  ConversationStore,\n  ChatMessageGroup,\n  ChatMessage,\n  ChatFrameworkProps,\n} from \"@/libs/types\";\nimport { SendMessageEvent } from \"@/libs/types\";\nimport { useChatPropsContext } from \"../context\";\nimport { useMemo } from \"react\";\nimport { useUpdateEffect } from \"@/libs/hooks\";\n\nconst packMessageToGroup = (\n  newMessageList: ChatMessage[]\n): ChatMessageGroup[] => {\n  const groups: ChatMessageGroup[] = [];\n\n  newMessageList.map((item) => {\n    const groupLocalIdCur = nanoid();\n    //进入这里的必需有一个localId,用于定位;\n    const { chat_id: curChatId, type } = item;\n    if (groups.length > 0) {\n      const lastGroup = groups[groups.length - 1];\n      const { chatId: lastChatId } = lastGroup;\n\n      if (type !== \"question\" && lastChatId) {\n        if (lastChatId === curChatId) {\n          // 同一个对话中的消息放到一起。\n          lastGroup.respMessages.push(item);\n          return;\n        }\n      }\n    }\n    // 新的对话\n    if (type !== \"question\") {\n      groups.push({\n        id: groupLocalIdCur,\n        chatId: curChatId,\n        respMessages: [item],\n        sectionId: item.section_id,\n      });\n    } else {\n      groups.push({\n        id: groupLocalIdCur,\n        chatId: curChatId,\n        query: item,\n        respMessages: [],\n        sectionId: item.section_id,\n      });\n    }\n  });\n  return groups;\n};\n\n// 两个消息的结合出，需要进行合并，因为 问题、回答可能会处于两个请求中。\nconst combineMessageGroup = (\n  groupBefore: ChatMessageGroup[],\n  groupAfter: ChatMessageGroup[]\n) => {\n  let messageGroupsToSave: ChatMessageGroup[] = [];\n  const lastGroupInBefore = groupBefore[groupBefore.length - 1];\n  const firstGroupInAfter = groupAfter[0];\n  if (!firstGroupInAfter?.query && firstGroupInAfter) {\n    // 新消息是回答，回答是一定会有chatId的。\n    // 如果chatId一致，则将新消息合并到当前的消息中。\n    // 如果上一个query没有chatId，就认为这两个对话被两个请求被截断了，需要合并到一起\n    if (\n      lastGroupInBefore?.chatId === firstGroupInAfter?.chatId ||\n      !lastGroupInBefore?.chatId\n    ) {\n      lastGroupInBefore.chatId = firstGroupInAfter?.chatId;\n      groupAfter.shift(); // 合并后，清除上一个数据\n      lastGroupInBefore.respMessages = [\n        ...lastGroupInBefore.respMessages,\n        ...firstGroupInAfter.respMessages,\n      ];\n    }\n  }\n  messageGroupsToSave = [...groupBefore, ...groupAfter];\n  return messageGroupsToSave;\n};\n\nconst defaultData = {\n  id: \"\",\n  sectionId: \"\",\n  chatMessageGroups: [],\n\n  prevCursorId: \"\",\n  prevHasMore: false,\n  prevError: undefined,\n\n  nextCursorId: \"\",\n  nextHasMore: false,\n  nextError: undefined,\n  sendMessageService: undefined,\n  inProcessChatMessageGroup: undefined,\n  isUnshiftingMessageFlag: false,\n};\n\nconst createConversationStore = ({ eventCallbacks }: ChatFrameworkProps) => {\n  let eventCallbacksAboutMessage = eventCallbacks?.message;\n  return create<ConversationStore>()((set, get) => {\n    const clearConversation = () => {\n      set({\n        ...defaultData,\n      });\n      get().closeSendMessage();\n    };\n    return {\n      ...defaultData,\n      setEventCallbacksAboutMessage: (callbacks) => {\n        eventCallbacksAboutMessage = callbacks;\n      },\n      setConversationDetail: (detail, messageList) => {\n        clearConversation();\n        set({\n          ...detail,\n          chatMessageGroups: packMessageToGroup(messageList),\n        });\n      },\n      setNewConversationId: (id: string) => {\n        clearConversation();\n        // 新会话的时候，不需要向前翻页，且消息记录是空的。\n        set({\n          id,\n        });\n      },\n      setSectionId: (id: string) => {\n        set({\n          sectionId: id,\n        });\n      },\n      // 处于末尾，目前只会存在于新回复消息。\n      pushMessageList: (list: ChatMessage[]) => {\n        const curMessageGroups = get().chatMessageGroups;\n        const newMessageGroups = packMessageToGroup(list);\n\n        set({\n          chatMessageGroups: combineMessageGroup(\n            curMessageGroups,\n            newMessageGroups\n          ),\n        });\n      },\n      unshiftMessageList: (conversationId: string, list: ChatMessage[]) => {\n        const chatMessageGroups = get().chatMessageGroups;\n        const conversationIdCur = get().id;\n        if (conversationId !== conversationIdCur) {\n          // 异常处理， 比如已经清空了数据，但是上一屏幕数据才到。\n          return null;\n        }\n\n        let firstAnswerMessage: ChatMessageGroup | undefined;\n        if (chatMessageGroups[0] && !chatMessageGroups?.[0]?.query) {\n          firstAnswerMessage = chatMessageGroups.shift();\n        }\n        const topChatMessageGroups = combineMessageGroup(\n          packMessageToGroup(list),\n          firstAnswerMessage ? [firstAnswerMessage] : []\n        );\n\n        set({\n          isUnshiftingMessageFlag: true,\n          chatMessageGroups: [...topChatMessageGroups, ...chatMessageGroups],\n        });\n      },\n      setPrevInfo: (prevHasMore: boolean, prevCursorId: string) => {\n        set({\n          prevError: undefined,\n          prevHasMore,\n          prevCursorId,\n        });\n      },\n      setNextInfo: (nextHasMore: boolean, nextCursorId: string) => {\n        set({\n          nextError: undefined,\n          nextHasMore,\n          nextCursorId,\n        });\n      },\n\n      isShowOnBoarding: () => {\n        const { chatMessageGroups, inProcessChatMessageGroup } = get();\n        return chatMessageGroups.length === 0 && !inProcessChatMessageGroup;\n      },\n      clearUnshiftingMessageFlg: (scrollTop?: number) => {\n        set({\n          scrollTop,\n          isUnshiftingMessageFlag: false,\n        });\n      },\n      setPrevError: (error) => {\n        set({\n          prevError: error,\n        });\n      },\n      setNextError: (error) => {\n        set({\n          nextError: error,\n        });\n      },\n      setSendMessageService: (service) => {\n        set({\n          sendMessageService: service,\n        });\n        const groupLocalId = nanoid();\n        service.on(SendMessageEvent.ReceiveMessage, (event) => {\n          const group = packMessageToGroup(event.messages)[0];\n          logger.debug(\n            \"[dev] ReceiveMessage\",\n            event.messages[event.messages.length - 1].content\n          );\n          group.id = groupLocalId;\n          group.isAWaiting = true;\n\n          set({\n            inProcessChatMessageGroup: group,\n          });\n        });\n\n        service.on(SendMessageEvent.ReceiveComplete, (event) => {\n          const { messages, error } = event;\n          set({\n            inProcessChatMessageGroup: undefined,\n          });\n          const curMessageGroups = get().chatMessageGroups;\n\n          let messageList = event.messages;\n          if (messages.length === 1 && error) {\n            messageList = [{ ...messages[0], error }];\n          }\n          const newGroup = packMessageToGroup(messageList)[0];\n          newGroup.id = groupLocalId;\n          newGroup.sectionId;\n          if (newGroup.sectionId) {\n            get().setSectionId(newGroup.sectionId || \"\");\n          } else {\n            newGroup.sectionId = get().sectionId;\n          }\n\n          eventCallbacksAboutMessage?.afterMessageReceivedFinish?.({\n            extra: {\n              processChatMessageGroup: newGroup,\n            },\n          });\n          set({\n            chatMessageGroups: combineMessageGroup(curMessageGroups, [\n              newGroup,\n            ]),\n          });\n        });\n\n        service.on(SendMessageEvent.Close, () => {\n          set({\n            inProcessChatMessageGroup: undefined,\n            sendMessageService: undefined,\n          });\n        });\n      },\n      closeSendMessage: () => {\n        const service = get().sendMessageService;\n        service?.close();\n      },\n      popLastErrorChatGroup: () => {\n        const chatMessageGroups = get().chatMessageGroups;\n        if (\n          chatMessageGroups[chatMessageGroups.length - 1]?.query?.error &&\n          chatMessageGroups[chatMessageGroups.length - 1]?.query?.rawMessage\n        ) {\n          const chatGroup = chatMessageGroups.pop();\n          set({\n            chatMessageGroups,\n          });\n          return chatGroup || null;\n        }\n        return null;\n      },\n    };\n  });\n};\n\nexport type CreateConversationStore = ReturnType<\n  typeof createConversationStore\n>;\n\nexport const useCreateConversationStore = () => {\n  const chatProps = useChatPropsContext();\n  const conversationStore = useMemo(\n    () => createConversationStore(chatProps),\n    []\n  );\n  useUpdateEffect(() => {\n    conversationStore\n      .getState()\n      .setEventCallbacksAboutMessage(chatProps?.eventCallbacks?.message);\n  }, [chatProps?.eventCallbacks?.message]);\n  return conversationStore;\n};\n","export { createApiClientStore, type CreateApiClientStore } from \"./api-client\";\nexport { useCreateChatInfoStore, type CreateChatInfoStore } from \"./chat-info\";\nexport {\n  useCreateConversationStore,\n  type CreateConversationStore,\n} from \"./conversation\";\nexport {\n  useCreateStatusStore,\n  type CreateChatStatusStore,\n} from \"./chat-status\";\n\nexport { useCreateUserInfoStore, type CreateUserInfoStore } from \"./user-info\";\nexport {\n  useCreateChatPropsStore,\n  type CreateChatPropsStore,\n} from \"./chat-props\";\n\nexport { useCreateUiEventStore, type CreateUiEventStore } from \"./ui-event\";\n\nexport {\n  useCreateChatInputStore,\n  type CreateChatInputStore,\n} from \"./chat-input\";\n","import { create } from \"zustand\";\n\nimport type { UiEventStore } from \"@/libs/types\";\nimport { useEffect, useMemo } from \"react\";\nimport { Events } from \"@tarojs/taro\";\nconst createUiEventStore = () => {\n  return create<UiEventStore>()(() => ({\n    event: new Events(),\n  }));\n};\n\nexport type CreateUiEventStore = ReturnType<typeof createUiEventStore>;\n\nexport const useCreateUiEventStore = () => {\n  const uiEventStore = useMemo(() => createUiEventStore(), []);\n  useEffect(() => {\n    return () => {\n      uiEventStore.getState().event.off();\n    };\n  }, []);\n  return uiEventStore;\n};\n","import { create } from \"zustand\";\n\nimport { logger, nanoid } from \"@/libs/utils\";\nimport type { UserInfoStore, UserInfo } from \"@/libs/types\";\nimport { useChatPropsContext } from \"../context\";\nimport { useMemo } from \"react\";\nimport { useUpdateEffect } from \"@/libs/hooks\";\nconst createUserInfoStore = ({ user }: { user: UserInfo }) => {\n  const defaultInfo = {\n    id: user?.id || nanoid(),\n  };\n  return create<UserInfoStore>()((set) => ({\n    info: { ...defaultInfo, ...user },\n    setUserInfo: (info: UserInfo) => {\n      set({\n        info: { ...defaultInfo, ...(info || {}) },\n      });\n    },\n  }));\n};\n\nexport type CreateUserInfoStore = ReturnType<typeof createUserInfoStore>;\n\nexport const useCreateUserInfoStore = () => {\n  const chatProps = useChatPropsContext();\n  const userInfoStore = useMemo(\n    () => createUserInfoStore({ user: chatProps?.user }),\n    []\n  );\n  useUpdateEffect(() => {\n    userInfoStore.getState().setUserInfo(chatProps.user);\n    logger.debug(\"useCreateUserInfoStore in userUpdateEffect\", chatProps.user);\n  }, [chatProps]);\n  return userInfoStore;\n};\n","import type {\n  ListMessageData,\n  CreateFileReq,\n  RequestOptions,\n  FileObject,\n  StreamChatReq,\n  StreamChatData,\n  APIError,\n} from \"@coze/api\";\nimport { IChatService, ChatServiceProps } from \"@/libs/types\";\nimport { logger, MiniChatError } from \"@/libs/utils\";\nimport { type CozeAPI } from \"@coze/api\";\nimport type { ChatInfo, ChatType } from \"@/libs/types\";\nimport { SuggestPromoteInfo } from \"@/libs/types/base/chat\";\n\nconst MESSAGE_LIST_NUM = 20;\n\nexport class ChatService implements IChatService {\n  protected apiClient: CozeAPI;\n  protected connectorId: string;\n  protected appId: string;\n  protected chatType: ChatType;\n\n  constructor({ apiClient, connectorId, appId, chatType }: ChatServiceProps) {\n    this.apiClient = apiClient;\n    this.connectorId = connectorId || \"999\";\n    this.appId = appId;\n    this.chatType = chatType;\n  }\n  async createNewConversation() {\n    const { id: conversationId, last_section_id: sectionId = \"\" } =\n      await this.apiClient.conversations.create({\n        bot_id: this.appId,\n        // @ts-expect-error -- linter-disable-autofix\n        connector_id: this.connectorId,\n      });\n    return { conversationId, sectionId };\n  }\n  async createNewSection(conversationId) {\n    const { id: sectionId } = await this.apiClient.conversations.clear(\n      conversationId || \"\"\n    );\n    return { sectionId };\n  }\n  async getAppInfo(): Promise<ChatInfo> {\n    try {\n      const result = await this.apiClient.bots.retrieve({\n        bot_id: this.appId,\n        // @ts-expect-error -- linter-disable-autofix\n        connector_id: this.connectorId,\n      });\n      return {\n        appId: this.appId,\n        type: this.chatType,\n        ...result,\n      };\n    } catch (error) {\n      const err = error as APIError;\n      throw new MiniChatError(err.code || -1, err.message);\n    }\n  }\n  async getOrCreateConversationId() {\n    const { data: conversationRes } = (await this.apiClient.get(\n      \"/v1/conversations\",\n      {\n        bot_id: this.appId,\n        connector_id: this.connectorId,\n        page_num: 1,\n        page_size: 1,\n      }\n    )) as {\n      data: {\n        conversations: {\n          id: string;\n          last_section_id: string;\n        }[];\n      };\n    };\n    const { id: conversationId, last_section_id: sectionId } =\n      conversationRes?.conversations?.[0] || {};\n    if (!conversationId) {\n      return await this.createNewConversation();\n    }\n    return { conversationId, sectionId };\n  }\n  async getMessageList({\n    conversationId,\n    prevCursorId,\n    limit = MESSAGE_LIST_NUM,\n  }) {\n    try {\n      const resMessage = await this.apiClient.conversations.messages.list(\n        conversationId,\n        {\n          after_id: prevCursorId || undefined,\n          limit,\n        }\n      );\n      return getFormatMessageListInfo(resMessage);\n    } catch (error) {\n      logger.error(\"Get Message Error\", error);\n      return {\n        prevCursorId: undefined,\n        nextCursorId: undefined,\n        prevHasMore: false,\n        nextHasMore: false,\n        messages: [],\n        error: new MiniChatError(-1, \"Get Message Error\"),\n      };\n    }\n\n    function getFormatMessageListInfo(resMessage: ListMessageData) {\n      const {\n        first_id: nextCursorId,\n        last_id: prevCursorId,\n        has_more: prevHasMore,\n        data: messageList,\n      } = resMessage;\n      return {\n        prevCursorId,\n        nextCursorId,\n        prevHasMore,\n        nextHasMore: false,\n        messages: messageList.reverse(),\n      };\n    }\n  }\n  asyncChat(\n    params: StreamChatReq & {\n      connector_id?: string;\n      suggestPromoteInfo?: SuggestPromoteInfo;\n    },\n    options?: RequestOptions\n  ): AsyncIterable<StreamChatData> {\n    return this.apiClient.chat.stream(params, options);\n  }\n  upload(params: CreateFileReq, options?: RequestOptions): Promise<FileObject> {\n    return this.apiClient.files.upload(params, options);\n  }\n  async translation(params: CreateFileReq, options?: RequestOptions) {\n    // @ts-expect-error -- linter-disable-autofix\n    return await this.apiClient.audio.transcriptions(params, options);\n  }\n  async audioSpeech(params) {\n    return await this.apiClient.audio.speech.create(params);\n  }\n}\n","import { RawMessageType, type RawMessage } from \"@/libs/types\";\nimport {\n  MultiSendMessage,\n  type ObjectStringItemMix,\n} from \"./send-message/multi-send-message\";\nimport { AsyncSendMessage } from \"./send-message/async-send-message\";\nimport { type SendMessageOptions } from \"./send-message/raw-send-message\";\nimport { isTT, isWeapp, isWeb, logger } from \"@/libs/utils\";\n\nexport { RawMessageType, type RawMessage, type ObjectStringItemMix };\n\nconst isCanStream = isWeb || isTT || isWeapp;\nexport const getSendMessageHandler = (\n  props: SendMessageOptions,\n  isStream: boolean = isCanStream\n): MultiSendMessage => {\n  if (!isStream) {\n    logger.error(\"not support sync send message\");\n    throw new Error(\"not support sync send message\");\n  }\n  return new AsyncSendMessage(props);\n  /*\n   * 暂不支持异步，后续有需要再补充钙内容\n   */\n  /*\n  if (!isStream) {\n    return new SyncSendMessage(props);\n  } else {\n    return new AsyncSendMessage(props);\n  }*/\n};\n","import {\n  type EnterMessage,\n  ChatEventType,\n  type StreamChatData,\n  CreateChatData,\n} from \"@coze/api\";\n\nimport { logger, MiniChatError, safeJSONParse } from \"@/libs/utils\";\nimport { ChatMessage } from \"@/libs/types\";\nimport { MultiSendMessage } from \"./multi-send-message\";\nimport { SendMessageOptions } from \"./raw-send-message\";\n\nexport class AsyncSendMessage extends MultiSendMessage {\n  private chatStream?: AsyncIterable<StreamChatData>;\n\n  constructor(props: SendMessageOptions) {\n    super(props);\n  }\n\n  async sendMessage(message: EnterMessage, historyMessages?: EnterMessage[]) {\n    try {\n      logger.debug(\"asyncChat start sendMessage: \", message);\n      this._checkTimeout();\n      const chatStream = await this.chatService.asyncChat({\n        bot_id: this.botId,\n        user_id: this.userId,\n        additional_messages: [...(historyMessages || []), message],\n        conversation_id: this.conversationId,\n        connector_id: this.connectorId,\n        suggestPromoteInfo: this.chatInfo?.suggestPromoteInfo,\n      });\n      logger.debug(\"asyncChat sendMessage stream: \", chatStream);\n      this.chatStream = chatStream;\n      this.pollAnswer();\n    } catch (err) {\n      logger.error(\"asyncChat sendMessage error\", err);\n      this.sendErrorEvent(new MiniChatError(-1, this.i18n.t(\"sendFailed\")));\n      this.close();\n    }\n  }\n\n  protected async pollAnswer() {\n    if (!this.chatStream) {\n      logger.error(\"asyncChat pollAnswer\", \"chatStream is undefined\");\n      // 这里基本不会出现，下边方便通过语法结构\n      this.sendErrorEvent(new MiniChatError(-1, this.i18n.t(\"sendFailed\")));\n      return;\n    }\n\n    logger.debug(\"asyncChat pollAnswer awaiting start\");\n    const messageList: ChatMessage[] = [];\n    let messageInProcessing: ChatMessage | null = null;\n    this._checkTimeout();\n    try {\n      for await (let eventData of this.chatStream) {\n        this._checkTimeout();\n        if (!this.isAbort) {\n          const { event, data } = eventData;\n          /*\n           * 未做处理消息\n           * CONVERSATION_CHAT_REQUIRES_ACTION\n           * CONVERSATION_CHAT_IN_PROGRESS\n           * CONVERSATION_AUDIO_DELTA\n           * CONVERSATION_CHAT_COMPLETED\n           */\n          switch (event) {\n            case ChatEventType.CONVERSATION_CHAT_CREATED:\n              {\n                const messageNew = safeJSONParse(eventData.data);\n                // @ts-expect-error -- linter-disable-autofix\n                const { id: chatId, section_id: sectionId } = messageNew || {};\n                this.messageSended.chat_id = chatId || \"\";\n                this.messageSended.section_id = sectionId;\n                this.messageSended.extData = {\n                  // @ts-expect-error -- linter-disable-autofix\n                  executeId: data?.execute_id,\n                };\n                this.messageSended = { ...this.messageSended };\n                this.messageList = [this.messageSended, ...(messageList || [])];\n\n                this.sendProcessEvent();\n              }\n              break;\n            case ChatEventType.CONVERSATION_MESSAGE_DELTA:\n              {\n                const messageNew = safeJSONParse(data) as ChatMessage;\n                if (!messageNew) {\n                  break;\n                }\n                if (!messageInProcessing) {\n                  messageInProcessing = messageNew;\n                } else {\n                  messageInProcessing.content =\n                    messageInProcessing.content || \"\";\n                  messageInProcessing.content += messageNew.content || \"\";\n                  if (\n                    !messageInProcessing.content ||\n                    !messageInProcessing.reasoning_content\n                  ) {\n                    messageInProcessing.reasoning_content =\n                      messageInProcessing.reasoning_content || \"\";\n                    messageInProcessing.reasoning_content +=\n                      messageNew.reasoning_content || \"\";\n                  }\n                }\n                messageInProcessing.isComplete = false;\n                this.messageList = [\n                  this.messageSended,\n                  ...(messageList || []),\n                  messageInProcessing,\n                ];\n\n                this.sendProcessEvent();\n              }\n              break;\n            case ChatEventType.CONVERSATION_MESSAGE_COMPLETED:\n              {\n                // 消息结束\n                const messageNew = safeJSONParse(data) as ChatMessage;\n\n                if (messageInProcessing) {\n                  messageInProcessing.isComplete = true;\n                  messageList.push(messageInProcessing);\n                  messageInProcessing = null;\n                } else {\n                  if (!messageNew) {\n                    break;\n                  }\n                  messageNew.isComplete = true;\n                  messageList.push(messageNew);\n                }\n\n                this.messageList = [this.messageSended, ...(messageList || [])];\n                this.sendProcessEvent();\n              }\n              break;\n            case ChatEventType.ERROR: {\n              const messageError = safeJSONParse(data) as {\n                code: number;\n                msg: string;\n              };\n              this.sendErrorEvent(\n                new MiniChatError(\n                  messageError.code || -1,\n                  messageError.msg || this.i18n.t(\"sendFailed\")\n                )\n              );\n              return;\n            }\n            case ChatEventType.CONVERSATION_CHAT_FAILED: {\n              const messageError = safeJSONParse(data) as CreateChatData;\n\n              this.sendErrorEvent(\n                new MiniChatError(\n                  messageError.last_error?.code || -1,\n                  messageError.last_error?.msg || this.i18n.t(\"sendFailed\")\n                )\n              );\n              return;\n            }\n            case ChatEventType.DONE: {\n              this.messageList = [this.messageSended, ...(messageList || [])];\n              this.sendCompleteEvent();\n              return;\n            }\n            default:\n              break;\n          }\n        } else {\n          return;\n        }\n      }\n    } catch (error) {\n      logger.error(\"asyncChat pollAnswer error\", error);\n      this.sendErrorEvent(new MiniChatError(-1, this.i18n.t(\"sendFailed\")));\n      return;\n    }\n  }\n}\n","import { type EnterMessage, RoleType, type ObjectStringItem } from \"@coze/api\";\nimport {\n  RawMessageType,\n  type RawMessage,\n  ChooseFileInfo,\n  FileTypeEnum,\n  type AudioRaw,\n} from \"@/libs/types\";\nimport {\n  convertToMinChatError,\n  logger,\n  MiniChatError,\n  MiniChatErrorCode,\n} from \"@/libs/utils\";\nimport { RawSendMessage } from \"./raw-send-message\";\n\nexport { RawMessageType, type RawMessage };\nexport interface ObjectStringItemMix {\n  type: \"file\" | \"image\";\n  name?: string;\n  size?: string;\n  file_url: string;\n  file_id?: string;\n  file_info?: ChooseFileInfo;\n}\n\nexport class MultiSendMessage extends RawSendMessage {\n  async sendTextMessage(content: string, historyMessages?: EnterMessage[]) {\n    const message: EnterMessage = {\n      role: RoleType.User,\n      content,\n      content_type: \"text\",\n    };\n    this.sendStartMessage(message);\n    this.sendMessage(message, historyMessages);\n  }\n  async sendFileMessage(\n    files: ChooseFileInfo[],\n    historyMessages?: EnterMessage[]\n  ) {\n    const content: ObjectStringItemMix[] = files\n      .map((item) => this.packFileObject(item))\n      .filter((item) => !!item) as ObjectStringItemMix[];\n    const message: EnterMessage = {\n      role: RoleType.User,\n      content: content as ObjectStringItem[],\n      content_type: \"object_string\",\n    };\n    this.sendStartMessage(message);\n    const fileList = await this.uploadFile(files);\n    if (!fileList) {\n      //失败了。\n      this.sendErrorEvent(\n        new MiniChatError(-1, this.i18n.t(\"sendMessageUploadFailed\"))\n      );\n      return;\n    }\n    this.messageSended.content = JSON.stringify(fileList);\n    message.content = JSON.stringify(\n      fileList.map((item) => ({\n        type: item.type,\n        file_id: item.file_id,\n      }))\n    );\n\n    // @ts-expect-error -- linter-disable-autofix\n    message.content = content;\n    this.sendStartMessage({\n      ...message,\n    });\n\n    this.sendMessage(message, historyMessages);\n  }\n  async sendAudioMessage(audio: AudioRaw, historyMessages?: EnterMessage[]) {\n    logger.info(\"sendAudioMessage audio\", audio);\n    const message: EnterMessage = {\n      role: RoleType.User,\n      content: \"\",\n      content_type: \"text\",\n    };\n    this.sendStartMessage({\n      ...message,\n      content: \"\",\n      isAudioTranslatingToText: true,\n    });\n    try {\n      const content = await this.translateAudioToText(audio);\n      logger.debug(\"sendAudioMessage content\", content);\n\n      message.content = content;\n      this.sendStartMessage({\n        ...message,\n        isAudioTranslatingToText: false,\n      });\n\n      this.sendMessage(message, historyMessages);\n    } catch (error) {\n      logger.error(\"sendAudioMessage\", { error });\n      const miniChatError = convertToMinChatError(error);\n      const content = miniChatError?.getErrorMessageByI18n?.(\n        this.i18n,\n        {},\n        this.i18n.t(\"sendMessageTranslationAudioFailed\")\n      );\n      this.messageSended.isAudioTranslatingToText = false;\n      this.messageSended.content = content;\n      this.sendErrorEvent(miniChatError);\n      return;\n    }\n  }\n\n  private async translateAudioToText(audio: AudioRaw): Promise<string> {\n    const res = await this.chatService.translation({\n      file: {\n        filePath: audio.tempFilePath,\n        fileName: audio.fileName,\n      },\n    });\n    if (!res.text) {\n      throw new MiniChatError(\n        MiniChatErrorCode.Audio_Translation_NoContent,\n        this.i18n.t(\"sendMessageTranslationAudioNone\")\n      );\n    }\n    return res.text;\n  }\n\n  private async uploadFile(\n    file: ChooseFileInfo[]\n  ): Promise<ObjectStringItemMix[] | null> {\n    const fileList: ObjectStringItemMix[] = [];\n    let hasError = false;\n    try {\n      await Promise.all(\n        file.map(async (item) => {\n          const packResult = this.packFileObject(item);\n          if (packResult) {\n            const res = await this.chatService.upload({\n              file: item.file,\n            });\n            packResult.file_id = res.id;\n            fileList.push(packResult);\n          }\n        })\n      );\n    } catch (error) {\n      hasError = true;\n    }\n    return hasError ? null : fileList;\n  }\n  private getObjectStringType(fileType: FileTypeEnum) {\n    return fileType === FileTypeEnum.IMAGE ? \"image\" : \"file\";\n  }\n  private packFileObject(fileInfo: ChooseFileInfo): ObjectStringItemMix | null {\n    const type = this.getObjectStringType(fileInfo.type);\n    switch (type) {\n      case \"image\": {\n        return {\n          type: \"image\",\n          file_url: fileInfo.tempFilePath,\n          file_info: fileInfo,\n        };\n      }\n      case \"file\": {\n        return {\n          type: \"file\",\n          // @ts-expect-error -- linter-disable-autofix\n          name: fileInfo.file.name,\n          // @ts-expect-error -- linter-disable-autofix\n          size: fileInfo.file.size,\n          file_url: fileInfo.tempFilePath,\n          file_info: fileInfo,\n        };\n      }\n      default: {\n        return null;\n      }\n    }\n  }\n  async sendRawMessage(\n    rawMessage: RawMessage,\n    historyMessages?: EnterMessage[]\n  ) {\n    this.messageSended.rawMessage = rawMessage;\n    switch (rawMessage.type) {\n      case RawMessageType.TEXT: {\n        return await this.sendTextMessage(rawMessage.data, historyMessages);\n      }\n      case RawMessageType.FILE: {\n        return await this.sendFileMessage(rawMessage.data, historyMessages);\n      }\n      case RawMessageType.AUDIO: {\n        return await this.sendAudioMessage(rawMessage.data, historyMessages);\n      }\n      default: {\n        throw new MiniChatError(-1, \"unknown message type\");\n      }\n    }\n  }\n}\n","import { Events, type TaroStatic } from \"@tarojs/taro\";\nimport { type EnterMessage, RoleType, type ContentType } from \"@coze/api\";\nimport { MiniChatError, logger, nanoid } from \"@/libs/utils\";\nimport {\n  type ChatMessage,\n  ISendMessage,\n  SendMessageEvent,\n  type RawMessage,\n  type SendMessageEventData,\n  IChatService,\n  ChatInfo,\n} from \"@/libs/types\";\nimport { I18n } from \"@/libs/i18n\";\n\nexport interface SendMessageOptions {\n  conversationId: string;\n  botId: string;\n  chatService: IChatService;\n  chatInfo?: ChatInfo;\n  userId: string;\n  connectorId: string;\n  sectionId?: string;\n  i18n: I18n;\n}\n\nexport abstract class RawSendMessage implements ISendMessage {\n  protected botId: string;\n  protected userId: string;\n  protected conversationId: string;\n  protected sectionId?: string;\n\n  private timeoutId?: number;\n  protected chatId: string;\n  protected connectorId: string;\n  protected isAbort: boolean;\n  protected chatService: IChatService;\n  protected event: InstanceType<TaroStatic[\"Events\"]>;\n  protected messageSended: ChatMessage; // 发送出去的消息\n  protected messageList: ChatMessage[]; // 当前的消息列表\n  protected chatInfo?: ChatInfo;\n  protected i18n: I18n;\n  constructor({\n    conversationId,\n    botId,\n    chatService,\n    userId,\n    connectorId,\n    sectionId,\n    chatInfo,\n    i18n,\n  }: SendMessageOptions) {\n    this.botId = botId;\n    this.conversationId = conversationId;\n    this.chatInfo = chatInfo;\n    this.isAbort = false;\n    this.chatService = chatService;\n\n    this.event = new Events();\n    this.messageList = [];\n    this.userId = userId;\n    this.chatId = \"\";\n    this.connectorId = connectorId;\n    this.sectionId = sectionId;\n    this.i18n = i18n;\n\n    //默认值，初始化使用\n    this.messageSended = {\n      id: \"\",\n      role: RoleType.User,\n      conversation_id: this.conversationId,\n      section_id: this.sectionId,\n      bot_id: this.botId,\n      chat_id: \"\",\n      localId: nanoid(),\n      meta_data: {},\n      content: \"\",\n      content_type: \"text\",\n      created_at: Date.now(),\n      updated_at: Date.now(),\n      type: \"question\",\n    };\n  }\n  abstract sendRawMessage(\n    _rawMessage: RawMessage,\n    _historyMessages?: EnterMessage[]\n  );\n\n  sendMessage(_message: EnterMessage, _historyMessages?: EnterMessage[]) {\n    throw new Error(\"Un implement sendMessage\");\n  }\n\n  on(\n    eventName: SendMessageEvent,\n    callback: (args: SendMessageEventData) => void\n  ) {\n    this.event.on(eventName, callback);\n  }\n  off(\n    eventName: SendMessageEvent,\n    callback: (args: SendMessageEventData) => void\n  ) {\n    this.event.off(eventName, callback);\n  }\n  protected emit(eventName: SendMessageEvent, data: SendMessageEventData) {\n    if (eventName === SendMessageEvent.ReceiveComplete) {\n      // 调用结束，关闭对话\n      this.close(data);\n    } else {\n      this.event.trigger(eventName, data);\n    }\n  }\n\n  // 结束的时候，一定要调用该位置。\n  close(data?: SendMessageEventData) {\n    this._clearTimeout();\n    if (this.isAbort) {\n      return false;\n    }\n    // 关闭轮询\n    const eventData = data || {\n      messages: this.messageList,\n      status: \"complete\",\n    };\n    this.isAbort = true;\n    this.event.trigger(SendMessageEvent.ReceiveComplete, eventData);\n    this.event.trigger(SendMessageEvent.Close, eventData);\n    this.event.off();\n    return true;\n  }\n  break() {\n    this.close();\n    // 取消后续的模型回答，并关闭轮询\n    // todo: 暂时无此场景，不处理\n  }\n\n  // question消息发送成功事件\n  protected sendStartMessage(message: Partial<ChatMessage | EnterMessage>) {\n    this.packMessage(message);\n    this.sendProcessEvent();\n  }\n\n  private packMessage(message: Partial<ChatMessage | EnterMessage>) {\n    this.messageSended = {\n      ...this.messageSended,\n      ...{\n        content: message.content as string,\n        content_type: message.content_type as ContentType,\n        // @ts-expect-error -- linter-disable-autofix\n        isAudioTranslatingToText: message.isAudioTranslatingToText,\n      },\n    };\n    this.messageList = [this.messageSended];\n  }\n\n  // 消息打断事件，暂时未使用\n  protected sendBreakEvent() {\n    this.emit(SendMessageEvent.ReceiveComplete, {\n      status: \"break\",\n      messages: this.messageList,\n    });\n  }\n  // 消息进行中事件，\n  protected sendProcessEvent() {\n    logger.debug(\n      \"[dev] in_process\",\n      this.messageList[this.messageList.length - 1].content\n    );\n    this.emit(SendMessageEvent.ReceiveMessage, {\n      status: \"in_process\",\n      messages: this.messageList,\n    });\n  }\n\n  // 消息完成事件\n  protected sendCompleteEvent() {\n    this.emit(SendMessageEvent.ReceiveComplete, {\n      status: \"complete\",\n      messages: this.messageList,\n    });\n  }\n  // 消息失败事件\n  protected sendErrorEvent(\n    error: MiniChatError = new MiniChatError(-1, \"对话失败\")\n  ) {\n    this.emit(SendMessageEvent.ReceiveComplete, {\n      status: \"error\",\n      messages: this.messageList,\n      error,\n    });\n  }\n\n  protected _checkTimeout(timeout = 210000) {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n    this.timeoutId = setTimeout(() => {\n      logger.error(\"send message timeout\");\n      this.sendErrorEvent(new MiniChatError(-1, \"timeout\"));\n    }, timeout) as unknown as number;\n  }\n  protected _clearTimeout() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n  }\n}\n","export { useChatInit } from \"./use-chat-init\";\nexport { useScrollMore } from \"./use-scroll-more\";\nexport { useClearMessage } from \"./use-clear-message\";\nexport { useSendMessage } from \"./use-send-message\";\nexport { useCreatePrologueMessage } from \"./use-create-prologue-message\";\nexport { useClearContext } from \"./use-clear-context\";\nexport { ChatService } from \"./helper/chat-service\";\nexport { useAudioSpeech } from \"./use-audio-speech\";\n","import { useCallback } from \"react\";\nimport { useApiClientStore, useVoiceId } from \"../provider\";\n\nexport const useAudioSpeech = () => {\n  const { chatService } = useApiClientStore((store) => ({\n    chatService: store.chatService,\n  }));\n  const voiceId = useVoiceId();\n\n  const audioSpeech = useCallback(\n    (input: string) => {\n      return chatService.audioSpeech({\n        input: input,\n        voice_id: voiceId,\n        response_format: \"wav\",\n        sampling_rate: 8000,\n      });\n    },\n    [chatService, voiceId]\n  );\n  return {\n    audioSpeech,\n  };\n};\n","import { useEffect, useState } from \"react\";\nimport { convertToMinChatError, logger, MiniChatErrorCode } from \"@/libs/utils\";\nimport {\n  useApiClientStore,\n  useChatPropsContext,\n  useChatInfoStore,\n} from \"@/libs/provider\";\nimport { IChatService, type ChatFrameworkProps } from \"@/libs/types\";\nimport { MiniChatError } from \"@/libs/utils\";\nimport { useConversationStore } from \"../provider/context/chat-store-context\";\nexport const useChatInit = () => {\n  const chatProps = useChatPropsContext();\n  const {\n    setChatError,\n    setChatInfo,\n    setChatIsLoading,\n    error: chatError,\n  } = useChatInfoStore((store) => ({\n    setChatError: store.setError,\n    setChatInfo: store.setChatInfo,\n    setChatIsLoading: store.setIsLoading,\n    setCustomChatInfo: store.setCustomChatInfo,\n    isLoadingChatInfo: store.isLoading,\n    error: store.error,\n  }));\n  const setConversationDetail = useConversationStore(\n    (store) => store.setConversationDetail\n  );\n  const chatService = useApiClientStore((store) => store.chatService);\n  const [retryTime, setRetryTime] = useState(0);\n  useEffect(() => {\n    if (!checkParams(chatProps)) {\n      setChatError(new MiniChatError(-1, \"params error\"));\n      return;\n    }\n    let isAbort = false;\n    setChatError(null);\n    setChatIsLoading(true);\n    (async () => {\n      try {\n        const [chatInfo, conversationDetail] = await Promise.all([\n          chatService.getAppInfo(),\n          getInitConversationDetail(chatService),\n        ]);\n        if (!isAbort) {\n          setConversationDetail(\n            conversationDetail,\n            conversationDetail.messages\n          );\n          setChatInfo(chatInfo);\n        }\n      } catch (err) {\n        logger.error(\"get chat info error\", err);\n        const miniChatError = convertToMinChatError(err);\n        setChatError(miniChatError);\n      }\n    })();\n    return () => {\n      isAbort = true;\n    };\n  }, [retryTime, chatService]);\n  return {\n    retryChatInit: () => {\n      if (chatError) {\n        setRetryTime(retryTime + 1);\n      }\n    },\n  };\n};\n\n/*\n * @param chatProps - The chat props.\n * @returns A boolean value.\n */\nfunction checkParams(chatProps: ChatFrameworkProps) {\n  if (!chatProps?.setting?.apiBaseUrl) {\n    logger.error(\"Setting's apiBaseUrl must be provided\");\n    return false;\n  }\n  if (!chatProps?.setting?.cdnBaseUrlPath) {\n    logger.warn(\n      \"Setting's cdnBaseUrlPath is not provided; The chat will show a crash image\"\n    );\n  }\n  if (!chatProps?.chat?.appId) {\n    logger.error(\"Chat's appId must be provided\");\n    return false;\n  }\n  if (!chatProps?.auth?.token) {\n    logger.error(\"Token  must be provided\");\n    return false;\n  }\n\n  if (!chatProps?.auth?.onRefreshToken) {\n    logger.warn(\n      \"onRefreshToken is not provided; The chat will not be able to refresh the token\"\n    );\n  }\n  if (\n    !chatProps?.user?.id ||\n    !chatProps?.user?.name ||\n    !chatProps?.user?.avatar\n  ) {\n    logger.warn(\n      \"User's property (id, name, avatar) is empty; The chat will show a default user\"\n    );\n    return true;\n  }\n\n  return true;\n}\n\n/*\n * Get the initial conversation detail\n * @param chatService - The chat service to use.\n * @returns The conversation detail(conversationId, sectionId, messages)\n */\nasync function getInitConversationDetail(chatService: IChatService) {\n  let conversationId = \"\";\n  let sectionId = \"\";\n  try {\n    const res = await chatService.getOrCreateConversationId();\n    conversationId = res.conversationId;\n    sectionId = res.sectionId;\n  } catch (error) {\n    logger.error(\"Get Message Error\", error);\n    const apiError = convertToMinChatError(error);\n    throw new MiniChatError(\n      apiError.code || MiniChatErrorCode.Custom_Conversation_Create_Error,\n      apiError.msg || \"Conversation Create Error\"\n    );\n  }\n  try {\n    const messageListRes = await chatService.getMessageList({\n      conversationId,\n    });\n    return {\n      id: conversationId,\n      sectionId,\n      ...messageListRes,\n    };\n  } catch (err) {\n    throw new MiniChatError(\n      MiniChatErrorCode.Custom_GetMessageList_Error,\n      \"Get MessageList Error\"\n    );\n  }\n}\n","import { useCallback } from \"react\";\n\nimport { useApiClientStore } from \"@/libs/provider\";\nimport { logger, showToast } from \"@/libs/utils\";\nimport {\n  useConversationStore,\n  useChatStatusStore,\n  useI18n,\n  useUiEventStore,\n} from \"../provider/context/chat-store-context\";\nimport { UIEventType } from \"../types\";\nexport const useClearContext = () => {\n  const { conversationId, setSectionId } = useConversationStore((store) => ({\n    conversationId: store.id,\n    setSectionId: store.setSectionId,\n  }));\n  const { getOpDisabledState, setIsClearingContext } = useChatStatusStore(\n    (store) => ({\n      setIsClearingContext: store.setIsClearingContext,\n      getOpDisabledState: store.getOpDisabledState,\n    })\n  );\n  const targetEventCenter = useUiEventStore((store) => store.event);\n  const chatEvent = useUiEventStore((store) => store.event);\n  const chatService = useApiClientStore((store) => store.chatService);\n  const i18n = useI18n();\n  const clearContext = useCallback(async () => {\n    const { clearContext: disableState } = getOpDisabledState();\n    if (!conversationId) {\n      logger.error(\"clearContext, conversationId is empty\");\n      return;\n    }\n    if (disableState) {\n      return;\n    }\n    setIsClearingContext(true);\n    chatEvent.trigger(UIEventType.ChatSlotScrollToAnchorBottom);\n    try {\n      const { sectionId } = await chatService.createNewSection(conversationId);\n\n      setSectionId(sectionId);\n    } catch (err) {\n      showToast(\n        {\n          content: i18n.t(\"clearContextFailed\"),\n          icon: \"error\",\n        },\n        targetEventCenter\n      );\n    }\n    chatEvent.trigger(UIEventType.ChatSlotRemoveAnchorBottom);\n\n    setIsClearingContext(false);\n  }, [conversationId, targetEventCenter]);\n\n  return {\n    clearContext,\n  };\n};\n","import { useCallback } from \"react\";\n\nimport { useApiClientStore } from \"@/libs/provider\";\nimport { showToast } from \"@/libs/utils\";\nimport {\n  useConversationStore,\n  useChatStatusStore,\n  useChatInfoStore,\n  useI18n,\n  useUiEventStore,\n} from \"../provider/context/chat-store-context\";\nexport const useClearMessage = () => {\n  const { setNewConversationId, setSectionId } = useConversationStore(\n    (store) => ({\n      setNewConversationId: store.setNewConversationId,\n      setSectionId: store.setSectionId,\n    })\n  );\n  const i18n = useI18n();\n  const appId = useChatInfoStore((store) => store.id);\n  const { getOpDisabledState, setIsDeleting } = useChatStatusStore((store) => ({\n    setIsDeleting: store.setIsDeleting,\n    getOpDisabledState: store.getOpDisabledState,\n  }));\n  const targetEventCenter = useUiEventStore((store) => store.event);\n\n  const chatService = useApiClientStore((store) => store.chatService);\n\n  const clearMessage = useCallback(async () => {\n    const { clearMessage: disableState } = getOpDisabledState();\n    if (disableState) {\n      return;\n    }\n    setIsDeleting(true);\n    try {\n      const { conversationId, sectionId } =\n        await chatService.createNewConversation();\n      setNewConversationId(conversationId);\n      setSectionId(sectionId);\n    } catch (err) {\n      showToast(\n        {\n          content: i18n.t(\"clearMessageFailed\"),\n          icon: \"error\",\n        },\n        targetEventCenter\n      );\n    }\n    setIsDeleting(false);\n  }, [appId, targetEventCenter]);\n\n  return {\n    clearMessage,\n  };\n};\n","import {\n  useConversationStore,\n  useChatInfoStore,\n  useUserInfoStore,\n} from \"@/libs/provider\";\nimport { useCallback, useMemo } from \"react\";\nimport { ChatMessage, ChatMessageGroup } from \"@/libs/types\";\nimport { RoleType } from \"@coze/api\";\nimport { nanoid } from \"../utils\";\nexport const useCreatePrologueMessage = (\n  nextSectionId?: string\n): ChatMessageGroup | null => {\n  const { chatInfo } = useChatInfoStore((store) => ({\n    chatInfo: store.info,\n  }));\n  const { conversationId } = useConversationStore((store) => ({\n    conversationId: store.id,\n  }));\n\n  const { userInfo } = useUserInfoStore((store) => ({\n    userInfo: store.info,\n  }));\n  const createAnswerMessage = useCallback(\n    (type: \"answer\" | \"follow_up\", content: string): ChatMessage => {\n      return {\n        id: \"\",\n        conversation_id: conversationId || \"\",\n        section_id: nextSectionId || \"\",\n        bot_id: chatInfo?.appId || \"\",\n        chat_id: \"\",\n        role: RoleType.Assistant,\n\n        type: type,\n        localId: nanoid(),\n        meta_data: {},\n        content_type: \"text\",\n        created_at: 0,\n        updated_at: 0,\n        content: content,\n      };\n    },\n    [conversationId, nextSectionId, chatInfo]\n  );\n  const localId = useMemo(() => nanoid(), []);\n  const chatMessage: ChatMessage[] = useMemo(() => {\n    return [\n      createAnswerMessage(\n        \"answer\",\n        (chatInfo?.onboarding_info?.prologue || \"\").replaceAll(\n          \"{{user_name}}\",\n          userInfo?.name || \"\"\n        )\n      ),\n      ...(chatInfo?.onboarding_info?.suggested_questions || []).map((item) =>\n        createAnswerMessage(\"follow_up\", item)\n      ),\n    ];\n  }, [chatInfo, conversationId, createAnswerMessage, userInfo]);\n  const chatGroup = useMemo(() => {\n    return {\n      id: localId,\n      chatId: \"\",\n      respMessages: chatMessage,\n      sectionId: nextSectionId,\n      isPrologue: true,\n    };\n  }, [chatMessage, localId, nextSectionId]);\n  return chatInfo?.onboarding_info?.prologue &&\n    chatInfo?.onboarding_info?.prologue !== \"\\n\" // chatflow里边 默认会有一个\\n\n    ? chatGroup\n    : null;\n};\n","import { useCallback, useRef } from \"react\";\n\nimport { useApiClientStore } from \"@/libs/provider\";\n\nimport { useConversationStore } from \"../provider/context/chat-store-context\";\nimport { logger } from \"../utils\";\nconst UPPER_THRESHOLD = 100;\nexport const useScrollMore = () => {\n  const refLoading = useRef<boolean>(false);\n  const refDebounce = useRef<number>(Date.now());\n  const {\n    conversationId,\n    unshiftMessageList,\n\n    prevError,\n    prevHasMore,\n    prevCursorId,\n\n    setPrevInfo,\n    setPrevError,\n  } = useConversationStore((store) => ({\n    conversationId: store.id,\n    unshiftMessageList: store.unshiftMessageList,\n\n    prevError: store.prevError,\n    prevHasMore: store.prevHasMore,\n    prevCursorId: store.prevCursorId,\n\n    setPrevInfo: store.setPrevInfo,\n    setPrevError: store.setPrevError,\n  }));\n  const chatService = useApiClientStore((store) => store.chatService);\n\n  const onScrollToUpper = useCallback(async () => {\n    if (refLoading.current || !conversationId) {\n      return;\n    }\n    logger.debug(\"onScrollToUpper currentTime\", {\n      currentTime: refDebounce.current,\n      time: Date.now() - refDebounce.current,\n    });\n    if (Date.now() - refDebounce.current < 1500) {\n      return;\n    }\n    refLoading.current = true;\n\n    // chatService.getMessageList will never throw error, so don't need to catch error\n    const {\n      messages: messageList,\n      error,\n      ...rest\n    } = await chatService.getMessageList({\n      conversationId: conversationId || \"\",\n      prevCursorId,\n    });\n    unshiftMessageList(conversationId, messageList);\n    if (error) {\n      setPrevError(error);\n    } else {\n      setPrevInfo(rest.prevHasMore || false, rest.prevCursorId || \"\");\n    }\n    refDebounce.current = Date.now();\n    refLoading.current = false;\n  }, [prevCursorId, chatService, conversationId, unshiftMessageList]);\n\n  return {\n    prevError,\n    isNeedPrevLoadMore: prevHasMore,\n    upperThreshold: UPPER_THRESHOLD,\n    onScrollToUpper: prevHasMore ? onScrollToUpper : undefined,\n  };\n};\n","import { useCallback } from \"react\";\n\nimport { type EnterMessage } from \"@coze/api\";\nimport { showToast } from \"@/libs/utils\";\nimport { useApiClientStore, useUserInfoStore } from \"@/libs/provider\";\n\nimport { AudioRaw, ChooseFileInfo, SendMessageEvent } from \"../types\";\nimport {\n  useConversationStore,\n  useChatStatusStore,\n  useChatInfoStore,\n  useI18n,\n  useUiEventStore,\n  useChatInputStore,\n} from \"../provider/context/chat-store-context\";\nimport {\n  getSendMessageHandler,\n  type RawMessage,\n  RawMessageType,\n} from \"./helper/message\";\nimport { usePersistCallback } from \"../hooks\";\nexport const useSendMessage = () => {\n  const {\n    setSendMessageService,\n    conversationId,\n    sectionId,\n    popLastErrorChatGroup,\n  } = useConversationStore((store) => ({\n    setSendMessageService: store.setSendMessageService,\n    conversationId: store.id,\n    sectionId: store.sectionId,\n    popLastErrorChatGroup: store.popLastErrorChatGroup,\n  }));\n  const i18n = useI18n();\n  const userInfo = useUserInfoStore((store) => store.info);\n  const botId = useChatInfoStore((store) => store.id);\n  const { getOpDisabledState, setIsDeleting } = useChatStatusStore((store) => ({\n    setIsDeleting: store.setIsDeleting,\n    getOpDisabledState: store.getOpDisabledState,\n  }));\n  const chatInfo = useChatInfoStore((store) => store.info);\n  const setTaskList = useChatInputStore((store) => store.setTaskList);\n  const { connectorId, chatService } = useApiClientStore((store) => ({\n    connectorId: store.connectorId,\n    chatService: store.chatService,\n  }));\n  const targetEventCenter = useUiEventStore((store) => store.event);\n\n  const sendMessage = usePersistCallback(\n    (rawMessage: RawMessage, historyMessages?: EnterMessage[]) => {\n      const { clearMessage: disableState } = getOpDisabledState();\n      if (disableState) {\n        return;\n      }\n      if (!botId || !conversationId) {\n        return;\n      }\n      // Clear task message after message sended\n      setTaskList({ taskList: [] });\n      setIsDeleting(true);\n      const sendMessageHandler = getSendMessageHandler({\n        botId,\n        chatService,\n        conversationId,\n        userId: userInfo?.id || \"\",\n        connectorId,\n        sectionId,\n        chatInfo: chatInfo || undefined,\n        i18n,\n      });\n\n      sendMessageHandler.on(SendMessageEvent.Close, () => {\n        setIsDeleting(false);\n      });\n      sendMessageHandler.on(SendMessageEvent.ReceiveComplete, (event) => {\n        if (event.error) {\n          showToast(\n            {\n              content:\n                event.error?.getErrorMessageByI18n(i18n, {}) ||\n                i18n.t(\"sendFailed\"),\n              icon: \"error\",\n              duration: 2000,\n            },\n            targetEventCenter\n          );\n        }\n      });\n      setSendMessageService(sendMessageHandler);\n      sendMessageHandler.sendRawMessage(rawMessage, historyMessages);\n    }\n  );\n\n  const sendTextMessage = useCallback(\n    (content: string) => {\n      sendMessage({\n        type: RawMessageType.TEXT,\n        data: content,\n      });\n    },\n    [sendMessage]\n  );\n  const sendFileMessage = useCallback(\n    (files: ChooseFileInfo[]) => {\n      sendMessage({\n        type: RawMessageType.FILE,\n        data: files,\n      });\n    },\n    [sendMessage]\n  );\n\n  const sendAudioMessage = useCallback(\n    (audio: AudioRaw) => {\n      sendMessage({\n        type: RawMessageType.AUDIO,\n        data: audio,\n      });\n    },\n    [sendMessage]\n  );\n\n  const reSendLastErrorMessage = useCallback(() => {\n    const chatMessageGroup = popLastErrorChatGroup();\n    if (chatMessageGroup?.query?.rawMessage) {\n      sendMessage(chatMessageGroup?.query?.rawMessage);\n    }\n  }, [sendMessage]);\n\n  return {\n    sendMessage,\n    sendTextMessage,\n    sendFileMessage,\n    sendAudioMessage,\n    reSendLastErrorMessage,\n  };\n};\n","import { BotInfo } from \"@coze/api\";\nimport type { BgImageInfoMap } from \"./ui\";\nexport enum ChatType {\n  Bot = \"bot\",\n  App = \"App\",\n}\nexport interface VoiceInfo {\n  isTextToVoiceEnable?: boolean;\n  voiceConfigMap?: Record<\n    string,\n    {\n      voice_id: string;\n      name: string;\n    }\n  >;\n}\nexport interface SuggestPromoteInfo {\n  customizedSuggestPrompt?: string;\n  suggestReplyMode?: number;\n}\nexport interface ChatInfo\n  extends Partial<\n    Omit<\n      BotInfo,\n      | \"bot_id\"\n      | \"model_info\"\n      | \"plugin_info_list\"\n      | \"bot_mode\"\n      | \"prompt_info\"\n      | \"onboarding_info\"\n    >\n  > {\n  appId: string;\n  type: ChatType;\n  bgInfo?: BgImageInfoMap;\n  onboarding_info?: {\n    prologue?: string;\n    display_all_suggestions?: boolean;\n    suggested_questions?: string[];\n  };\n  suggestPromoteInfo?: SuggestPromoteInfo;\n  voiceInfo?: VoiceInfo;\n  inputMode?: {\n    default?: number;\n  };\n}\n","export enum FileTypeEnum {\n  IMAGE = \"image\",\n  PDF = \"pdf\",\n  DOCX = \"docx\",\n  EXCEL = \"excel\",\n  CSV = \"csv\",\n  AUDIO = \"audio\",\n  VIDEO = \"video\",\n  TXT = \"txt\",\n  PPT = \"ppt\",\n  ZIP = \"zip\",\n  CODE = \"code\",\n  DEFAULT_UNKNOWN = \"default_unknown\",\n}\n\nexport type ChooseFileInfo =\n  | {\n      from: \"Taro_Image_Chooser\"; // taro选择弃选择的文件\n      type: FileTypeEnum; // 类型\n      tempFilePath: string; // 临时文件地址，图片可用于预览，Taro\n      size: number; // 文件大小\n      file: {\n        filePath: string;\n      }; // Taro文件上传专用\n    }\n  | {\n      from: \"H5_Input_Chooser\"; // H5选择器选择的文件\n      type: FileTypeEnum; // 类型\n      tempFilePath: string; // 临时文件地址，图片可用于预览，Taro\n      size: number; // 文件大小\n      file: File;\n    };\n","export type { AuthConf } from \"./auth\";\nexport type { UserInfo } from \"./user\";\nexport type { ChatInfo } from \"./chat\";\n\nexport type { NonNullableType, NullableType } from \"./util-type\";\n\nexport type {\n  ChatMessage,\n  FileRaw,\n  AudioRaw,\n  ChatMessageGroup,\n} from \"./message\";\n\nexport type { UIChatToastEvent, UIModalEvent } from \"./ui-event\";\nexport type { DebugInfo } from \"./debug\";\nexport type {\n  HeaderConfig,\n  FooterConfig,\n  ChatSlotConfig,\n  ClearContextConfig,\n  ClearMessageConfig,\n  UploadBtnConfig,\n  InputConfig,\n  UiCommandPosition,\n  ErrorUiConfig,\n  LoadingUiConfig,\n  BgImageInfo,\n  BgImageInfoMap,\n  ThemeType,\n  MessageUiConfig,\n  IMessageContentProps,\n  MessageUiConfigMap,\n} from \"./ui\";\nexport type { ChooseFileInfo } from \"./file\";\nexport type { SettingInfo, LogLevel } from \"./setting\";\n\nexport { ChatType } from \"./chat\";\nexport { UIEventType } from \"./ui-event\";\nexport { FileTypeEnum } from \"./file\";\nexport type {\n  IOnImageClickEvent,\n  IOnTaskListChangeProps,\n  IOnTaskListChange,\n  IMessageCallback,\n} from \"./event-callback\";\n","export enum UIEventType {\n  FrameClick = \"frame-click\",\n  ChatToastShow = \"chat-toast-show\",\n  KeyDown = \"key-down-event\",\n  KeyUp = \"key-up-event\",\n  TriggerFocus = \"trigger-focus\",\n  FrameFocus = \"frame-focus\",\n  FrameBlur = \"frame-blur\",\n  ChatModalShow = \"chat-modal-show\",\n  ChatSlotToBottom = \"chat-slot-to-bottom\",\n  ChatSlotScrollToAnchorBottom = \"chat-slot-scroll-to-anchor-bottom\",\n  ChatSlotRemoveAnchorBottom = \"chat-slot-remove-anchor-bottom\",\n}\n\nexport interface UIChatToastEvent {\n  content: string | React.ReactNode;\n  icon: \"success\" | \"error\" | \"none\";\n  duration?: number;\n}\n\nexport interface UIModalEvent {\n  renderModal: (hideModal: () => void) => React.ReactNode;\n  isNeedMask?: boolean; //默认是true\n}\n","export * from \"./base\";\nexport * from \"./framework\";\n\nexport * from \"./provider/api-client\";\nexport * from \"./provider/chat-info\";\nexport * from \"./provider/conversation\";\nexport * from \"./provider/chat-status\";\nexport * from \"./provider/user-info\";\nexport * from \"./provider/chat-props\";\nexport * from \"./provider/ui-event\";\nexport * from \"./provider/chat-input\";\n\nexport * from \"./services/send-message\";\nexport * from \"./services/chat-service\";\n\nexport type { IMiniChatError } from \"./utils/error\";\nexport type { II18n } from \"./utils/i18n\";\nexport { Language } from \"./utils/i18n\";\n","import { type EnterMessage } from \"@coze/api\";\nimport {\n  type ChatMessage,\n  type ChooseFileInfo,\n  type AudioRaw,\n} from \"@/libs/types\";\nimport { MiniChatError } from \"@/libs/utils\";\n\nexport enum SendMessageEvent {\n  ReceiveMessage = \"receiveMessage\",\n  ReceiveComplete = \"receiveComplete\",\n  Close = \"close\", // sendMessage结束了\n}\nexport enum RawMessageType {\n  TEXT = \"text\",\n  FILE = \"file\",\n  AUDIO = \"audio\",\n}\nexport type RawMessage =\n  | {\n      type: RawMessageType.TEXT;\n      data: string;\n    }\n  | {\n      type: RawMessageType.FILE;\n      data: ChooseFileInfo[];\n    }\n  | {\n      type: RawMessageType.AUDIO;\n      data: AudioRaw;\n    };\n\nexport interface SendMessageEventData {\n  messages: ChatMessage[];\n  status: \"complete\" | \"in_process\" | \"break\" | \"error\";\n  error?: MiniChatError;\n}\n\nexport interface ISendMessage {\n  sendRawMessage(_rawMessage: RawMessage, _historyMessages?: EnterMessage[]);\n\n  sendMessage(_message: EnterMessage, _historyMessages?: EnterMessage[]);\n  on(\n    eventName: SendMessageEvent,\n    callback: (args: SendMessageEventData) => void\n  );\n  off(\n    eventName: SendMessageEvent,\n    callback: (args: SendMessageEventData) => void\n  );\n\n  // 结束的时候，一定要调用该位置。\n  close(data?: SendMessageEventData);\n  break();\n}\n","export enum Language {\n  EN = \"en\",\n  ZH_CN = \"zh-CN\",\n}\n\nexport interface II18n {\n  readonly language;\n  t(\n    key: string,\n    _options?: Record<string, unknown>,\n    _fallbackText?: string\n  ): string;\n}\n","import { Button } from \"@tarojs/components\";\n\nimport styles from \"./index.module.less\";\nimport { FC, PropsWithChildren } from \"react\";\nimport { useAudioRecord, type InputTriggerType } from \"./use-audio-record\";\nimport cls from \"classnames\";\nimport { TaroStatic } from \"@tarojs/taro\";\nexport { type InputTriggerType };\ninterface AudioInputProps {\n  className?: string;\n  onTouching?: (type?: InputTriggerType) => void;\n  onOutside?: (isOutSide: boolean) => void;\n  onEnd?: () => void;\n  frameEventTarget?: InstanceType<TaroStatic[\"Events\"]>; // 用于监听chat组件的keydown方法\n  isPcMode?: boolean;\n  disabled?: boolean;\n}\nexport const AudioInput: FC<PropsWithChildren<AudioInputProps>> = ({\n  className,\n  onTouching,\n  onEnd,\n  onOutside,\n  children,\n  frameEventTarget,\n  isPcMode,\n  disabled,\n}) => {\n  const {\n    onInitRefForAudioRecord,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    onTouchCancel,\n  } = useAudioRecord({\n    onTouching,\n    onOutside,\n    onEnd,\n    frameEventTarget,\n    isPcMode,\n    disabled,\n  });\n\n  return (\n    <Button\n      // coze-audio-input-button，用于监听chat组件的keydown方法\n      className={cls(styles.container, className, \"coze-audio-input-button\")}\n      ref={onInitRefForAudioRecord}\n      onTouchStart={onTouchStart}\n      onTouchMove={onTouchMove}\n      onTouchEnd={onTouchEnd}\n      onTouchCancel={onTouchCancel}\n    >\n      {children}\n    </Button>\n  );\n};\n","import { UIEventType } from \"@/libs/types\";\nimport { usePersistCallback, useUpdateEffect } from \"@/libs/hooks\";\nimport { getBoundingRect, isWeb, logger } from \"@/libs/utils\";\nimport { ITouchEvent } from \"@tarojs/components\";\nimport { TaroStatic } from \"@tarojs/taro\";\nimport { useEffect, useRef, useState } from \"react\";\n\ninterface BoundingRect {\n  width: number;\n  height: number;\n  top: number;\n  right: number;\n  bottom: number;\n  left: number;\n}\n\ninterface EventProps {\n  clientX: number;\n  clientY: number;\n}\ninterface Props {\n  onTouching?: (type?: InputTriggerType) => void;\n  onOutside?: (isOutside: boolean) => void;\n  onEnd?: () => void;\n  frameEventTarget?: InstanceType<TaroStatic[\"Events\"]>; // 用于监听chat组件的keydown方法\n  isPcMode?: boolean;\n  disabled?: boolean;\n}\nexport type InputTriggerType = \"touch\" | \"keyboard\" | \"mouse\";\nexport const useAudioRecord = ({\n  onTouching,\n  onOutside,\n  onEnd,\n  frameEventTarget,\n  isPcMode,\n  disabled,\n}: Props) => {\n  const refAudioInput = useRef<HTMLDivElement | null>(null);\n  const [isTouching, setIsTouching] = useState(false);\n  const [isOutside, setIsOutside] = useState(false);\n  const refAudioInputBounding = useRef<BoundingRect>();\n  const triggerFromRef = useRef<InputTriggerType>();\n\n  const onOutsideChange = usePersistCallback((isOutside: boolean) => {\n    setIsOutside(isOutside);\n    onOutside?.(isOutside);\n  });\n  const onStartAudioInput = usePersistCallback(async (event?: ITouchEvent) => {\n    setIsTouching(true);\n    setIsOutside(false);\n    if (isWeb) {\n      const boundingRect = refAudioInput.current?.getBoundingClientRect();\n      if (boundingRect) {\n        refAudioInputBounding.current = boundingRect;\n      }\n    } else if (event) {\n      const [boundingRect] = await getBoundingRect(\n        `#${event.currentTarget.id}`\n      );\n      if (boundingRect) {\n        refAudioInputBounding.current = boundingRect;\n      }\n    }\n  });\n\n  const checkIsOutside = usePersistCallback((event: EventProps) => {\n    const { clientY } = event;\n    const { top } = refAudioInputBounding.current || {};\n\n    let isOutside = false;\n    if (top !== undefined && clientY < top) {\n      isOutside = true;\n    }\n    return isOutside;\n  });\n  const checkAndSetIsOutside = usePersistCallback((event: EventProps) => {\n    const isOutside = checkIsOutside(event);\n    onOutsideChange(isOutside);\n    return isOutside;\n  });\n\n  /** Start Mouse Event Handler On Mobile */\n  const onTouchStart = usePersistCallback((event: ITouchEvent) => {\n    logger.debug(\"[useAudioRecord]onTouchStart\", event);\n\n    if (triggerFromRef.current || disabled) {\n      return;\n    }\n    triggerFromRef.current = \"touch\";\n    onStartAudioInput(event);\n  });\n  const onTouchMove = usePersistCallback((event: ITouchEvent) => {\n    logger.debug(\"[useAudioRecord]onTouchMove\", event);\n    if (triggerFromRef.current !== \"touch\" || disabled) {\n      return;\n    }\n    if (isTouching) {\n      checkAndSetIsOutside({\n        clientX: event.changedTouches[0].clientX,\n        clientY: event.changedTouches[0].clientY,\n      });\n    }\n  });\n  const onTouchEnd = usePersistCallback(() => {\n    logger.debug(\n      \"[useAudioRecord]onTouchEnd\",\n      triggerFromRef.current,\n      isTouching\n    );\n    if (triggerFromRef.current !== \"touch\" || disabled) {\n      return;\n    }\n    if (isTouching) {\n      setIsTouching(false);\n    }\n  });\n  const onTouchCancel = usePersistCallback((event: ITouchEvent) => {\n    logger.debug(\"[useAudioRecord]onTouchCancel\", event);\n    setIsTouching(false);\n    setIsOutside(false);\n  });\n  /** End Mouse Event Handler On Mobile */\n\n  /** Start Mouse Event Handler On Pc */\n  const onMouseDown = usePersistCallback((event: MouseEvent) => {\n    logger.debug(\"onMouseDown\", event);\n    event?.stopPropagation();\n    if (triggerFromRef.current || disabled) {\n      return;\n    }\n    triggerFromRef.current = \"mouse\";\n    onStartAudioInput();\n  });\n  const onMouseMove = usePersistCallback((event: MouseEvent) => {\n    if (triggerFromRef.current !== \"mouse\" || disabled) {\n      return;\n    }\n    if (isTouching) {\n      checkAndSetIsOutside({\n        clientX: event.clientX,\n        clientY: event.clientY,\n      });\n    }\n  });\n  const onMouseUp = usePersistCallback((event: MouseEvent) => {\n    logger.info(\"onMouseDown 222\", event, isTouching);\n    if (triggerFromRef.current !== \"mouse\" || disabled) {\n      return;\n    }\n    if (isTouching) {\n      setIsTouching(false);\n    }\n  });\n\n  const onKeyDown = usePersistCallback((event: { code: string }) => {\n    logger.debug(\"[audio] onKeyDown\", event);\n    if (event.code === \"Space\") {\n      if (triggerFromRef.current || disabled) {\n        return;\n      }\n      triggerFromRef.current = \"keyboard\";\n      setIsTouching(true);\n      setIsOutside(false);\n    }\n  });\n  const onKeyUp = usePersistCallback((event: { code: string }) => {\n    logger.debug(\"[audio] onKeyUp\", event);\n    if (disabled) {\n      return;\n    }\n    if (event.code === \"Space\") {\n      if (triggerFromRef.current !== \"keyboard\") {\n        return;\n      }\n      if (isTouching) {\n        setIsTouching(false);\n      }\n    }\n  });\n\n  const onInitRefForAudioRecord = usePersistCallback((el) => {\n    if (isWeb) {\n      // If the element has been set, remove the event listener first\n      if (refAudioInput.current) {\n        refAudioInput.current.removeEventListener(\"mousedown\", onMouseDown);\n        document.removeEventListener(\"mousemove\", onMouseMove);\n        document.removeEventListener(\"mouseup\", onMouseUp);\n\n        if (isPcMode && frameEventTarget) {\n          frameEventTarget.on(UIEventType.KeyDown, onKeyDown);\n          frameEventTarget.on(UIEventType.KeyUp, onKeyUp);\n        }\n      }\n      // Set the new element, and add the event listener\n      if (el) {\n        refAudioInput.current = el as HTMLDivElement;\n        refAudioInput.current.addEventListener(\"mousedown\", onMouseDown);\n        document.addEventListener(\"mousemove\", onMouseMove);\n        document.addEventListener(\"mouseup\", onMouseUp);\n        if (isPcMode && frameEventTarget) {\n          frameEventTarget.on(UIEventType.KeyDown, onKeyDown);\n          frameEventTarget.on(UIEventType.KeyUp, onKeyUp);\n        }\n      }\n    } else {\n      refAudioInput.current = el;\n    }\n  });\n\n  useEffect(() => {\n    return () => {\n      if (isWeb) {\n        refAudioInput.current?.removeEventListener(\"mousedown\", onMouseDown);\n        document?.removeEventListener(\"mousemove\", onMouseMove);\n        document?.removeEventListener(\"mouseup\", onMouseUp);\n        if (frameEventTarget) {\n          frameEventTarget.off(UIEventType.KeyDown, onKeyDown);\n          frameEventTarget.off(UIEventType.KeyDown, onKeyUp);\n        }\n      }\n    };\n  }, []);\n  /** End Mouse Event Handler On Pc */\n\n  useUpdateEffect(() => {\n    logger.debug(\"[useAudioRecord]isTouching\", isTouching);\n\n    if (isTouching) {\n      onTouching?.(triggerFromRef.current);\n    }\n  }, [isTouching]);\n\n  useUpdateEffect(() => {\n    onOutside?.(isOutside);\n  }, [isOutside]);\n\n  useUpdateEffect(() => {\n    logger.info(\"[useAudioRecord]onEnd\", isTouching);\n    if (!isTouching) {\n      triggerFromRef.current = undefined;\n      onEnd?.();\n    }\n  }, [isTouching]);\n  useUpdateEffect(() => {\n    if (isTouching) {\n      setIsTouching(false);\n    }\n    /*if (isOutside) {\n      setIsOutside(false);\n    }*/\n  }, [disabled]);\n\n  return {\n    onInitRefForAudioRecord,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    onTouchCancel,\n    isTouching,\n    isOutside,\n  };\n};\n","import cls from \"classnames\";\nimport { View } from \"@tarojs/components\";\n\nimport styles from \"./index.module.less\";\nimport { FC } from \"react\";\n\nexport const AudioPlay: FC<{\n  isPlaying: boolean;\n  onClick?: () => void;\n  theme?: \"light\" | \"dark\" | \"gray-bold\";\n}> = ({ isPlaying, onClick, theme = \"dark\" }) => {\n  return (\n    <View\n      className={cls(styles.audioPlay, {\n        [styles.playing]: isPlaying,\n        [styles[theme]]: true,\n      })}\n      onClick={onClick}\n    />\n  );\n};\n","import cls from \"classnames\";\nimport { View } from \"@tarojs/components\";\n\nimport styles from \"./index.module.less\";\nimport { Spacing } from \"../spacing\";\n\ninterface AudioWaveProps {\n  size: \"small\" | \"medium\" | \"large\";\n  type: \"default\" | \"primary\" | \"warning\";\n  volumeNumber: number; // 0 ~ 100\n  className?: string;\n}\n\nconst waveBarNumberMap = {\n  large: 41,\n  medium: 29,\n  small: 4,\n};\nexport const AudioWave = ({\n  size = \"medium\",\n  volumeNumber = 0,\n  type = \"default\",\n  className,\n}: AudioWaveProps) => {\n  const volumeRealNumber = Math.max(Math.min(volumeNumber, 100), 0);\n  const waveBarNumber = waveBarNumberMap[size] || 29;\n  const waveBarHeights = getBarHeights(waveBarNumber, volumeRealNumber);\n  return (\n    <Spacing\n      gap={3}\n      verticalCenter\n      horizontalCenter\n      width100\n      className={cls(styles.container, className)}\n    >\n      {waveBarHeights.map((height, index) => (\n        <View\n          className={cls(\n            styles[`audio-wave-${index}`],\n            styles[type],\n            styles[\"bar\"],\n            styles[size]\n          )}\n          style={{\n            backgroundColor: getBarBgColor(index, waveBarNumber, type),\n            height: height,\n          }}\n          key={`${type}_${index}`}\n        />\n      ))}\n    </Spacing>\n  );\n};\n\nfunction getBarHeights(waveBarNumber, volumeRealNumber) {\n  if (volumeRealNumber <= 0) {\n    return new Array(waveBarNumber).fill(12);\n  }\n  const waveBarHeights = new Array(waveBarNumber)\n    .fill(0)\n    .map((_item, index) => {\n      return getBarHeight(index, waveBarNumber, volumeRealNumber);\n    });\n  const minHeight = Math.min(...waveBarHeights);\n  const maxHeight = Math.max(...waveBarHeights);\n  const heightSpan = maxHeight - minHeight;\n  return waveBarHeights.map((item) => {\n    return (\n      12 +\n      ((item - minHeight) / (maxHeight - minHeight)) * Math.min(12, heightSpan)\n    );\n  });\n}\n\nfunction getBarHeight(index, maxNumber, volumeNumber) {\n  const percent = index / maxNumber;\n  const maxHeight = 20;\n  let baseHeight = 2;\n  let randomMin = -2;\n  let randomMax = 2;\n  if (percent < 1 / 6) {\n    baseHeight = 1 + (4 - 1) * percent * 6;\n    randomMin = 0.1 + (-0.8 - 0.1) * percent * 6;\n    randomMax = 0.3 + (0.6 - 0.3) * percent * 6;\n  } else if (percent < 2 / 6) {\n    baseHeight = 4 + (2 - 4) * (percent - 1 / 6) * 6;\n    randomMin = -0.8 + (-0.0 + 0.8) * (percent - 1 / 6) * 6;\n    randomMax = 0.6 + (0.6 - 0.6) * (percent - 1 / 6) * 6;\n  } else if (percent < 3 / 6) {\n    baseHeight = 2 + (8 - 2) * (percent - 2 / 6) * 6;\n    randomMin = 0.0 + (-1.6 - 0.0) * (percent - 2 / 6) * 6;\n    randomMax = 0.6 + (1.2 - 0.6) * (percent - 2 / 6) * 6;\n  } else if (percent < 4 / 6) {\n    baseHeight = 8 + (2 - 8) * (percent - 3 / 6) * 6;\n    randomMin = -1.6 + (0.0 + 1.6) * (percent - 3 / 6) * 6;\n    randomMax = 1.2 + (0.6 - 1.2) * (percent - 3 / 6) * 6;\n  } else if (percent < 5 / 6) {\n    baseHeight = 2 + (4 - 2) * (percent - 4 / 6) * 6;\n    randomMin = 0.0 + (-0.8 - 0.0) * (percent - 4 / 6) * 6;\n    randomMax = 0.6 + (0.6 - 0.6) * (percent - 4 / 6) * 6;\n  } else if (percent < 1) {\n    baseHeight = 4 + (1 - 4) * (percent - 5 / 6) * 6;\n    randomMin = -0.8 + (0.1 + 0.8) * (percent - 5 / 6) * 6;\n    randomMax = 0.1 + (0.3 - 0.6) * (percent - 5 / 6) * 6;\n  }\n  const height =\n    baseHeight +\n    volumeNumber *\n      (Math.random() * (randomMax - randomMin) + randomMin) *\n      (maxHeight - baseHeight);\n  return height;\n}\nfunction getBarBgColor(index, maxNumber, type) {\n  let bgColor = \"#FFF\";\n  switch (type) {\n    case \"primary\":\n      {\n        /*\n         * implement : fill: linear-gradient(90deg, rgba(83, 71, 255, 0.20) 0%, #5347FF 20%, #B125F1 80%, rgba(177, 37, 241, 0.20) 100%);\n         */\n        let opacity = 0;\n        let rColor = 0;\n        let gColor = 0;\n        let bColor = 0;\n        const percent = index / maxNumber;\n        if (percent < 0.2) {\n          opacity = 0.2 + ((1 - 0.2) * percent) / 0.2;\n          rColor = 83;\n          gColor = 71;\n          bColor = 255;\n        } else if (percent < 0.8) {\n          opacity = 1;\n          rColor = Math.round(83 + ((177 - 83) * (percent - 0.2)) / 0.6);\n          gColor = Math.round(71 + ((37 - 71) * (percent - 0.2)) / 0.6);\n          bColor = Math.round(255 + ((241 - 255) * (percent - 0.2)) / 0.6);\n        } else {\n          opacity = 1 - ((1 - 0.2) * (percent - 0.8)) / 0.2;\n          rColor = 177;\n          gColor = 37;\n          bColor = 241;\n        }\n        bgColor = `rgba(${rColor}, ${gColor}, ${bColor}, ${opacity.toFixed(\n          2\n        )})`;\n      }\n      break;\n    case \"warning\":\n      {\n        bgColor = \"#FF0030\";\n      }\n      break;\n    default:\n      {\n        /*\n         * implement : fill: linear-gradient(90deg, rgba(255, 255, 255, 0.20) 0%, #FFF 20%, rgba(255, 255, 255, 0.90) 80%, rgba(255, 255, 255, 0.20) 100%);\n         */\n        let opacity = 0;\n        const percent = index / maxNumber;\n        if (percent < 0.2) {\n          opacity = 0.2 + ((1 - 0.2) * percent) / 0.2;\n        } else if (percent < 0.8) {\n          opacity = 1 - ((1 - 0.9) * (percent - 0.2)) / 0.6;\n        } else {\n          opacity = 0.9 - ((0.9 - 0.2) * (percent - 0.8)) / 0.2;\n        }\n        bgColor = `rgba(255, 255, 255, ${opacity.toFixed(2)})`;\n      }\n      break;\n  }\n  return bgColor;\n}\n","import cls from \"classnames\";\n\nimport styles from \"./index.module.less\";\nimport { useEffect, useState } from \"react\";\nimport AvatarImg from \"../../assets/imgs/avatar.png\";\nimport { CImage } from \"../c-image\";\ninterface AvatarProps {\n  className?: string;\n  src: string;\n  size?: \"large\" | \"medium\" | \"small\";\n}\nexport const Avatar = ({ className, src, size = \"medium\" }: AvatarProps) => {\n  const [isError, setIsError] = useState(false);\n  useEffect(() => {\n    setIsError(false);\n  }, [src]);\n  return (\n    <CImage\n      src={isError ? AvatarImg : src}\n      className={cls(styles.avatar, className, {\n        [styles[size || \"\"]]: true,\n      })}\n      onError={() => !isError && setIsError(true)}\n      mode=\"aspectFill\"\n    />\n  );\n};\n","import { useMemo } from \"react\";\n\nimport cls from \"classnames\";\nimport { Text } from \"@tarojs/components\";\n\nimport { Bubble, type BubbleProps } from \"../bubble\";\n\nimport styles from \"./index.module.less\";\ninterface BubbleTextProps extends BubbleProps {\n  text: string;\n  selectable?: boolean;\n  space?: boolean; //  Whether the continuous spaces are displayed\n  enter?: boolean; //Whether the enter is displayed\n  size?: \"large\" | \"medium\" | \"small\";\n}\nexport const BubbleText = ({\n  className,\n  text,\n  size = \"medium\",\n  space,\n  enter,\n  selectable = true,\n  ...props\n}: BubbleTextProps) => {\n  const textList = useMemo(() => {\n    return enter ? text.split(\"\\n\") : [text];\n  }, [text]);\n  return (\n    <Bubble {...props} className={cls(className, styles[\"bubble\"])}>\n      {textList?.map((item, index) => (\n        <Text\n          className={cls(styles[\"bubble-text\"], {\n            [styles[size || \"\"]]: true,\n          })}\n          //space={space ? \"nbsp\" : undefined}\n          key={index}\n          selectable={selectable}\n        >\n          {item}\n        </Text>\n      ))}\n    </Bubble>\n  );\n};\n","import React from 'react';\n\nimport cls from 'classnames';\nimport { View } from '@tarojs/components';\n\nimport styles from './index.module.less';\nexport interface BubbleProps {\n  className?: string;\n  children?: React.ReactNode;\n  isActive?: boolean;\n  isNeedBorder?: boolean;\n  canClick?: boolean;\n  onClick?: () => void;\n}\nexport const Bubble = ({\n  className,\n  children,\n  isNeedBorder = true,\n  isActive = false,\n  canClick = false,\n  onClick,\n}: BubbleProps) => (\n  <View\n    className={cls(styles.bubble, className, {\n      [styles.active]: isActive,\n      [styles['can-click']]: canClick,\n      [styles['is-need-border']]: isNeedBorder,\n    })}\n    onClick={onClick}\n  >\n    {children}\n  </View>\n);\n","import React from \"react\";\n\nimport cls from \"classnames\";\nimport { View } from \"@tarojs/components\";\n\nimport styles from \"./index.module.less\";\nexport interface BubbleProps {\n  className?: string;\n  children?: React.ReactNode;\n  onClick?: () => void;\n}\nexport const Button = ({ className, children, onClick }: BubbleProps) => (\n  <View className={cls(styles.button, className)} onClick={onClick}>\n    {children}\n  </View>\n);\n","import { Image, ImageProps } from \"@tarojs/components\";\nimport { FC, useState } from \"react\";\nimport cls from \"classnames\";\nimport styles from \"./index.module.less\";\nimport { useUpdateEffect } from \"@/libs/hooks\";\nimport { logger } from \"@/libs/utils\";\n\nexport const CImage: FC<Omit<ImageProps, \"ref\">> = (props) => {\n  const [url, setUrl] = useState(props.src);\n  useUpdateEffect(() => {\n    setUrl(props.src);\n  }, [props.src]);\n  return (\n    <Image\n      onError={() => {\n        logger.error(\"CImage onError\", props.src);\n        setUrl(\"\");\n      }}\n      {...props}\n      src={url}\n      className={cls(props.className, {\n        [styles[\"image-error\"]]: !url,\n      })}\n    />\n  );\n};\n","import { FC, PropsWithChildren } from 'react';\n\nimport cls from 'classnames';\nimport { View, type ViewProps } from '@tarojs/components';\n\nimport styles from './index.module.less';\n\nexport const CenterAlignedBox: FC<\n  PropsWithChildren<\n    {\n      width?: number;\n      height?: number;\n      className?: string;\n    } & Omit<ViewProps, 'ref'>\n  >\n> = ({ className, width, height, children, ...rest }) => (\n  <View\n    className={cls(styles.wrapper, className)}\n    style={{\n      width,\n      height,\n    }}\n    {...rest}\n  >\n    {children}\n  </View>\n);\n","import React, { type FC } from \"react\";\n\nimport classNames from \"classnames\";\nimport { View } from \"@tarojs/components\";\n\nimport { SvgCheckMark } from \"../svg\";\nimport cls from \"classnames\";\nimport styles from \"./index.module.less\";\nimport { Spacing } from \"../spacing\";\nimport { DisableContainer } from \"../disable-container\";\n\ninterface CheckboxProps {\n  checked?: boolean;\n  disabled?: boolean;\n  className?: string;\n  children?: React.ReactNode;\n  onChange?: (checked: boolean) => void;\n}\nexport const Checkbox: FC<CheckboxProps> = (props) => {\n  const { checked, onChange, disabled, className, children } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked!);\n  };\n  return (\n    <DisableContainer disabled={disabled}>\n      <Spacing\n        className={cls(styles.box, className)}\n        gap={8}\n        onClick={handleChange}\n      >\n        <View\n          className={classNames(styles.checkbox, { [styles.checked]: checked })}\n        >\n          {checked ? <SvgCheckMark /> : null}\n        </View>\n        <View\n          style={{\n            flex: 1,\n          }}\n        >\n          {children}\n        </View>\n      </Spacing>\n    </DisableContainer>\n  );\n};\n","import { PropsWithChildren } from \"react\";\n\nimport cls from \"classnames\";\nimport { View } from \"@tarojs/components\";\n\nimport styles from \"./index.module.less\";\n\nexport const DisableContainer = ({\n  disabled,\n  className,\n  children,\n}: PropsWithChildren<{ disabled?: boolean; className?: string }>) => (\n  <View\n    className={cls(styles.container, className, {\n      [styles.disabled]: disabled,\n    })}\n  >\n    {children}\n  </View>\n);\n","import { FC } from \"react\";\nimport { CenterAlignedBox } from \"../center-aligned-box\";\nimport { View } from \"@tarojs/components\";\n\nexport const Dot: FC<{\n  boxWidth?: number; // box width\n  boxHeight?: number; // box height\n  circleDiameter?: number; // circle diameter\n  circleColor?: string;\n  className?: string;\n}> = ({\n  circleDiameter = 4,\n  circleColor = \"currentColor\",\n  boxHeight = 16,\n  boxWidth = 26,\n  className,\n}) => {\n  return (\n    <CenterAlignedBox width={boxWidth} height={boxHeight} className={className}>\n      <View\n        style={{\n          width: circleDiameter,\n          height: circleDiameter,\n          backgroundColor: circleColor,\n          borderRadius: circleDiameter,\n        }}\n      />\n    </CenterAlignedBox>\n  );\n};\n","import { logger } from \"@/libs/utils\";\nimport { Component, PropsWithChildren, ReactNode } from \"react\";\n\n/*\n  使用注意：\n    1、使用的时候，如果直接下边的元素报错，无法捕获，如果， TypeView内部的元素报错，才能够捕获到。\n    <ErrorBoundary>\n      <TypeView s={throw new Error}></TypeView>\n    </ErrorBoundary>\n*/\nexport class ErrorBoundary extends Component<\n  PropsWithChildren<{\n    fallbackNode: ReactNode;\n  }>\n> {\n  state = {\n    hasError: false,\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false,\n    };\n  }\n  static getDerivedStateFromError(error) {\n    logger.error(\"ErrorBoundary\", error);\n    return {\n      hasError: true,\n    };\n  }\n  render() {\n    if (this.state.hasError) {\n      return <>{this.props.fallbackNode}</>;\n    }\n    return this.props.children;\n  }\n}\nexport default ErrorBoundary;\n","import { Text } from \"@tarojs/components\";\n\nimport { SvgWarn } from \"../svg\";\nimport { Spacing } from \"../spacing\";\n\nimport styles from \"./index.module.less\";\n\ninterface ErrorRetryProps {\n  errorText: string | React.ReactNode;\n}\nexport const ErrorRetry = ({ errorText }: ErrorRetryProps) => (\n  <Spacing gap={4} horizontalCenter>\n    <SvgWarn />\n    <Text className={styles.text}>{errorText}</Text>\n  </Spacing>\n);\n\nexport const ErrorRetryBtn = ({\n  onClick,\n  retryText,\n}: {\n  retryText: string;\n  onClick: () => void;\n}) => (\n  <Text onClick={onClick} className={styles.retry}>\n    {retryText}\n  </Text>\n);\n","import { FC } from \"react\";\n\nimport cls from \"classnames\";\nimport { chooseImage } from \"@tarojs/taro\";\nimport { Text } from \"@tarojs/components\";\n\nimport type { FileRaw } from \"@/libs/types\";\nimport { useI18n } from \"@/libs/provider\";\n\nimport { SvgImage, SvgCamera } from \"../svg\";\nimport { Spacing } from \"../spacing\";\n\nimport styles from \"./index.module.less\";\n\ninterface TaroError {\n  errNo: Number;\n  errMsg: string;\n}\n\nconst Chooser: FC<{\n  svg: React.ReactNode;\n  text: string;\n  onClick?: () => void;\n}> = ({ svg, text, onClick }) => (\n  <Spacing vertical className={styles.chooser} gap={8} onClick={onClick}>\n    {svg}\n    <Text className={styles.text}>{text}</Text>\n  </Spacing>\n);\n\nexport const FileChooser: FC<{\n  className?: string;\n  onChooseFile?: (file: FileRaw) => void;\n}> = ({ className, onChooseFile }) => {\n  const i18n = useI18n();\n  const onClick = async (sourceType) => {\n    try {\n      const res = await chooseImage({\n        count: 1,\n        sizeType: [\"original\", \"compressed\"],\n        sourceType,\n      });\n      if (res?.errMsg) {\n        throw {\n          errMsg: res.errMsg,\n        };\n      }\n      onChooseFile?.({\n        ...(res as FileRaw),\n      });\n    } catch (error) {\n      const err = error as TaroError;\n      if (err.errNo !== 10502 && !err.errMsg?.includes(\"cancel\")) {\n        /* showToast({\n          content: i18n.t(\"chooseImageError\"),\n          icon: \"error\",\n          duration: 3000,\n        });*/\n      }\n    }\n  };\n  return (\n    <Spacing className={cls(styles.container, className)} gap={8}>\n      <Chooser\n        svg={<SvgImage width={24} height={24} />}\n        text={i18n.t(\"chooseImage\")}\n        onClick={() => {\n          onClick([\"album\"]);\n        }}\n      />\n      <Chooser\n        svg={<SvgCamera width={24} height={24} />}\n        text={i18n.t(\"chooseCamera\")}\n        onClick={() => {\n          onClick([\"camera\"]);\n        }}\n      />\n    </Spacing>\n  );\n};\n","import cls from \"classnames\";\n\nimport { CenterAlignedBox } from \"@/libs/ui-kit\";\n\nimport styles from \"./index.module.less\";\nimport { FC, PropsWithChildren } from \"react\";\n\nexport const IconButton: FC<\n  PropsWithChildren<{\n    type?: \"circle-btn\" | \"square-hover-btn\";\n    className?: string;\n    border?: \"none\" | \"normal\";\n    size?: \"large\" | \"medium\" | \"small\";\n    hoverTheme?: \"hover\" | \"none\";\n    bgColor?: \"medium\" | \"bold\";\n    onClick?: () => void;\n  }>\n> = ({\n  type = \"circle-btn\",\n  children,\n  onClick,\n  className,\n  border,\n  hoverTheme = \"hover\",\n  size = \"medium\",\n  bgColor,\n}) => {\n  return (\n    <CenterAlignedBox\n      onClick={() => {\n        onClick?.();\n      }}\n      className={cls(\n        styles[\"container\"],\n        className,\n        styles[type],\n        styles[size],\n        styles[hoverTheme],\n        {\n          [styles[\"border\"]]: border !== \"none\",\n          [styles[\"bold\"]]: bgColor === \"bold\",\n        }\n      )}\n    >\n      {children}\n    </CenterAlignedBox>\n  );\n};\n","import cls from \"classnames\";\nimport { Text } from \"@tarojs/components\";\n\nimport { FC, PropsWithChildren } from \"react\";\nimport { navigateTo } from \"@tarojs/taro\";\nimport styles from \"./index.module.less\";\nimport { isWeb } from \"@/libs/utils\";\n\ninterface LinkProps {\n  className?: string;\n  src: string;\n  size?: \"large\" | \"medium\" | \"small\";\n}\n\nexport const Link: FC<PropsWithChildren<LinkProps>> = ({\n  className,\n  src,\n  children,\n}) => (\n  <Text\n    className={cls(styles.link, className)}\n    onClick={() => {\n      if (isWeb) {\n        window.open(src);\n      } else {\n        navigateTo({\n          url: src,\n        });\n      }\n    }}\n  >\n    {children}\n  </Text>\n);\n","import {\n  createContext,\n  FC,\n  PropsWithChildren,\n  useContext,\n  useMemo,\n} from \"react\";\n\nimport type { IOnImageClickEvent } from \"@/libs/types\";\nimport { I18n } from \"@/libs/i18n\";\nimport { Logger } from \"@/libs/utils\";\nimport { TaskValue } from \"../ast\";\nimport { usePersistCallback } from \"@/libs/hooks\";\ninterface MdStreamContext {\n  onImageClick?: IOnImageClickEvent;\n  i18n?: I18n;\n  logger?: Logger;\n  selectable?: boolean;\n  taskDisabled?: boolean;\n  enableCodeBy4Space?: boolean;\n  enableHtmlTags?: boolean;\n  getMarkdown?: () => string;\n  onTaskChangeHandle?: (taskValue: TaskValue) => void;\n}\n\nconst MdStreamPropsContext = createContext<MdStreamContext>({});\n\nexport const ChatFamePropsProvider: FC<\n  PropsWithChildren<MdStreamContext> & { markdown?: string }\n> = ({\n  markdown,\n  children,\n  onImageClick,\n  i18n,\n  logger,\n  selectable,\n  taskDisabled,\n  enableHtmlTags,\n  enableCodeBy4Space,\n  onTaskChangeHandle,\n}) => {\n  const getMarkdown = usePersistCallback(() => {\n    return markdown || \"\";\n  });\n  const value = useMemo(() => {\n    return {\n      onImageClick,\n      i18n,\n      logger,\n      selectable,\n      taskDisabled,\n      enableHtmlTags,\n      enableCodeBy4Space,\n      onTaskChangeHandle,\n      getMarkdown,\n    };\n  }, [\n    onImageClick,\n    i18n,\n    logger,\n    selectable,\n    taskDisabled,\n    enableHtmlTags,\n    enableCodeBy4Space,\n    onTaskChangeHandle,\n    getMarkdown,\n  ]);\n  return (\n    <MdStreamPropsContext.Provider value={value}>\n      {children}\n    </MdStreamPropsContext.Provider>\n  );\n};\nexport const useMdStreamContext = () => {\n  return useContext(MdStreamPropsContext);\n};\nexport const useMdStreamI18n = () => {\n  const context = useMdStreamContext();\n  const { i18n } = context || {};\n  return i18n;\n};\n\nexport const useMdStreamLogger = () => {\n  const context = useMdStreamContext();\n  const { logger } = context || {};\n  return logger;\n};\n\nexport const useMdStreamSelectable = () => {\n  const context = useMdStreamContext();\n  const { selectable } = context || {};\n  return selectable;\n};\n\nexport const useMdStreamTaskDisabled = () => {\n  const context = useMdStreamContext();\n  const { taskDisabled } = context || {};\n  return taskDisabled;\n};\n\nexport const useMdStreamTaskChangeHandle = () => {\n  const context = useMdStreamContext();\n  const { onTaskChangeHandle } = context || {};\n  return onTaskChangeHandle;\n};\n\nexport const useMdStreamEnableHtmlTags = () => {\n  const context = useMdStreamContext();\n  const { enableHtmlTags } = context || {};\n  return enableHtmlTags;\n};\n\nexport const useMdStreamEnableCodeBy4Space = () => {\n  const context = useMdStreamContext();\n  const { enableCodeBy4Space } = context || {};\n  return enableCodeBy4Space;\n};\n\nexport const useMdStreamGetMarkdown = () => {\n  const context = useMdStreamContext();\n  const { getMarkdown } = context || {};\n  return getMarkdown?.() || \"\";\n};\n","import type { Root } from 'mdast';\n\nimport type { RootContentLocal, CodeLocal, IndicatorLocal } from '../ast';\nimport { traversalLastNode } from './traversal-last-node';\n\nconst indicator: IndicatorLocal = {\n  type: 'indicator',\n};\n\nexport function addIndicator(root: Root) {\n  traversalLastNode(\n    root as unknown as RootContentLocal,\n    undefined,\n    (node?: RootContentLocal) => {\n      if (!node) {\n        return [indicator];\n      }\n      if (node?.type === 'code') {\n        (node as CodeLocal).children = [\n          {\n            type: 'text',\n            value: node.value,\n          },\n          indicator,\n        ];\n        return [node];\n      }\n      return [node, indicator];\n    },\n  );\n}\n","import type { Root, RootContent } from 'mdast';\n\nimport { getRegResult } from '../util/ast';\nimport type { RootContentLocal } from '../ast';\nimport { traversalLastNode } from './traversal-last-node';\n\nconst removePatterns = [/!$/];\nconst fixPatterns = [\n  /!\\[(?<text>[^\\]\\n]*)$/,\n  /!\\[(?<text>[^\\]\\n]+)\\]$/,\n  /!\\[(?<text>[^\\]\\n]+)\\]\\([^\\)\\n]*$/,\n  /!\\[(?<text>[^\\]\\n]+)\\]\\([^\\)\\n]*$/,\n];\n\nexport function autoFixImg(root: Root) {\n  traversalLastNode(\n    root as unknown as RootContent,\n    undefined,\n    (node?: RootContentLocal) => {\n      if (!node) {\n        return [];\n      }\n      if (node.type === 'text') {\n        const nodesReturn: RootContent[] = [];\n        const removeMatch: RegExpExecArray | null = getRegResult(\n          node.value as string,\n          removePatterns,\n        );\n        const fixMatch: RegExpExecArray | null = getRegResult(\n          node.value as string,\n          fixPatterns,\n        );\n        const matchResult = fixMatch || removeMatch;\n        if (matchResult) {\n          nodesReturn.push({\n            type: 'text',\n            value: node.value.slice(0, matchResult.index),\n          });\n\n          if (fixMatch) {\n            nodesReturn.push({\n              type: 'image',\n              url: '',\n              alt: fixMatch.groups?.text || 'image',\n            });\n          }\n          return nodesReturn;\n        }\n      }\n      return [node];\n    },\n  );\n}\n","import type { Root, RootContent } from 'mdast';\n\nimport { getRegResult } from '../util/ast';\nimport type { RootContentLocal } from '../ast';\nimport { traversalLastNode } from './traversal-last-node';\n\nconst fixPatterns = [\n  /\\[(?<text>[^\\]\\n]+)$/,\n  /\\[(?<text>[^\\]\\n]+)\\]$/,\n  /\\[(?<text>[^\\]\\n]+)\\]\\([^\\)\\n]*$/,\n];\nconst removePatterns = [/\\[$/];\n\nexport function autoFixLink(root: Root) {\n  traversalLastNode(\n    root as unknown as RootContent,\n    undefined,\n    (node?: RootContentLocal) => {\n      if (!node) {\n        return [];\n      }\n      if (node.type === 'text') {\n        const nodesReturn: RootContent[] = [];\n        const removeMatch: RegExpExecArray | null = getRegResult(\n          node.value as string,\n          removePatterns,\n        );\n        const fixMatch: RegExpExecArray | null = getRegResult(\n          node.value as string,\n          fixPatterns,\n        );\n        const matchResult = fixMatch || removeMatch;\n        if (matchResult) {\n          nodesReturn.push({\n            type: 'text',\n            value: node.value.slice(0, matchResult.index),\n          });\n\n          if (fixMatch) {\n            nodesReturn.push({\n              type: 'link',\n              title: null,\n              url: '#',\n              children: [\n                {\n                  type: 'text',\n                  value: fixMatch.groups?.text || '',\n                },\n              ],\n            });\n          }\n          return nodesReturn;\n        }\n      }\n      return [node];\n    },\n  );\n}\n","import type { Root } from 'mdast';\n\nimport { autoFixLink } from './autofix-link';\nimport { autoFixImg } from './autofix-img';\nexport const autoFix = (root: Root) => {\n  autoFixImg(root);\n  autoFixLink(root);\n  //  autoFixIndicator(root);\n};\n","import { gfmStrikethrough } from \"micromark-extension-gfm-strikethrough\";\nimport { gfmStrikethroughFromMarkdown } from \"mdast-util-gfm-strikethrough\";\nimport { gfmTable } from \"micromark-extension-gfm-table\";\nimport { gfmTaskListItem } from \"micromark-extension-gfm-task-list-item\";\nimport { gfmTaskListItemFromMarkdown } from \"mdast-util-gfm-task-list-item\";\nimport { gfmTableFromMarkdown } from \"mdast-util-gfm-table\";\nimport { radioListItem } from \"micromark-extension-misc-radio-list-item\";\nimport { radioListItemFromMarkdown } from \"mdast-util-radio-list-item\";\nimport { fromMarkdown } from \"mdast-util-from-markdown\";\nimport type { Root } from \"mdast\";\nimport { cloneDeep } from \"lodash-es\";\n\nimport { autoFix } from \"./autofix\";\nimport { addIndicator } from \"./add-indicator\";\nconst extensions = [\n  gfmStrikethrough({ singleTilde: false }),\n  gfmTable(),\n  gfmTaskListItem(),\n  radioListItem(),\n];\nconst mdastExtensions = [\n  gfmStrikethroughFromMarkdown(),\n  gfmTableFromMarkdown(),\n  gfmTaskListItemFromMarkdown(),\n  radioListItemFromMarkdown(),\n];\nexport const genAst = ({\n  oldMarkdown,\n  newMarkdown,\n  lastAstRoot,\n  isShowIndicator,\n}: {\n  oldMarkdown: string;\n  newMarkdown: string;\n  lastAstRoot?: Root;\n  isShowIndicator?: boolean;\n}): [Root, Root, Root] => {\n  let rawAstRoot: Root;\n  const offset =\n    lastAstRoot?.children?.[lastAstRoot?.children?.length - 2]?.position?.start\n      .offset || 0;\n\n  if (\n    oldMarkdown === \"\" ||\n    !lastAstRoot?.position ||\n    lastAstRoot?.children.length < 2 ||\n    offset < 20 ||\n    !newMarkdown.startsWith(oldMarkdown)\n  ) {\n    // markdown 有变化，重新构建\n    // markdown 未构建过Ast，重新构建\n    // markdown 上次构建的有问题\n    rawAstRoot = fromMarkdown(newMarkdown, {\n      extensions,\n      mdastExtensions,\n    });\n  } else {\n    const leftMarkdown = newMarkdown.slice(offset);\n    const leftAstChildren = fromMarkdown(leftMarkdown, {\n      extensions,\n      mdastExtensions,\n    }).children;\n    leftAstChildren.map((item) => {\n      if (item.position?.start) {\n        item.position.start.offset = item.position.start.offset || 0;\n        item.position.start.offset += offset;\n        item.position.end.offset = item.position.end.offset || 0;\n        item.position.end.offset += offset;\n      }\n    });\n    lastAstRoot.children.splice(-2, 2, ...leftAstChildren);\n    rawAstRoot = lastAstRoot;\n  }\n\n  // 不需要重新定义了\n\n  const fixedAstRoot = cloneDeep(rawAstRoot);\n  autoFix(fixedAstRoot);\n  const showAstRoot = cloneDeep(fixedAstRoot);\n  if (isShowIndicator) {\n    addIndicator(showAstRoot);\n  }\n  return [rawAstRoot, fixedAstRoot, showAstRoot];\n};\n","import type { Paragraph, PhrasingContent } from \"mdast\";\n\nexport const getTextFromParagraph = (paragraphData: Paragraph) => {\n  if (paragraphData.type === \"paragraph\") {\n    return getTextFromPhrase(paragraphData.children);\n  }\n  return \"\";\n};\n\nconst getTextFromPhrase = (children: PhrasingContent[]) => {\n  return children\n    .map((item) => {\n      if (\n        item.type === \"delete\" ||\n        item.type === \"emphasis\" ||\n        item.type === \"link\" ||\n        item.type === \"strong\"\n      ) {\n        return getTextFromPhrase(item.children);\n      } else if (\n        item.type === \"text\" ||\n        item.type === \"inlineCode\" ||\n        item.type === \"html\"\n      ) {\n        return item.value;\n      }\n      return \"\";\n    })\n    .filter((item) => !!item)\n    .join(\",\");\n};\n","import type { Parent, RootContent } from 'mdast';\n\nimport { isParent } from '../util/ast';\nimport type { RootContentLocal } from '../ast';\n\nexport const traversalLastNode = (\n  node: RootContentLocal,\n  parent: RootContentLocal | undefined,\n  handle: (\n    content: RootContentLocal | undefined,\n    parent?: RootContentLocal,\n  ) => RootContentLocal[],\n): RootContentLocal[] => {\n  if (isParent(node)) {\n    const contents = traversalLastNode(\n      node?.children[node?.children?.length - 1],\n      node,\n      handle,\n    );\n    // @ts-expect-error -- linter-disable-autofix\n    node.children.splice(-1, 1, ...contents);\n    if (node.children.length === 0) {\n      return [];\n    }\n\n    return [node];\n  } else {\n    return handle(node, parent);\n  }\n};\n\nexport const getLastNode = (node: Parent): RootContent | undefined => {\n  let lastNode: RootContentLocal | undefined = undefined;\n  traversalLastNode(\n    node as unknown as RootContentLocal,\n    undefined,\n    (content?: RootContentLocal, parent?: RootContentLocal) => {\n      if (!content) {\n        // children 会存在未空的情况\n        return [];\n      }\n      if (parent?.type === 'link') {\n        lastNode = parent;\n      } else {\n        lastNode = content;\n      }\n\n      return [content];\n    },\n  );\n  return lastNode;\n};\nexport const isConsumeTextToShow = (node: Parent): boolean => {\n  const lastNode: RootContent | undefined = getLastNode(node);\n  if (lastNode?.type === 'image' || lastNode?.type === 'link') {\n    return false;\n  }\n  return true;\n};\n","import { useEffect } from 'react';\ninterface RenderChangeProps {\n  showMarkdown: string;\n  markdown: string;\n  isFinish?: boolean;\n  onMarkdownEnd?: () => void;\n  onRenderMarkdownChange?: (markdown: string) => void;\n}\nexport const useRenderChange = ({\n  showMarkdown,\n  markdown,\n  isFinish,\n  onMarkdownEnd,\n  onRenderMarkdownChange,\n}: RenderChangeProps) => {\n  useEffect(() => {\n    if (showMarkdown === markdown && isFinish) {\n      onMarkdownEnd?.();\n    }\n  }, [showMarkdown, markdown, isFinish]);\n  useEffect(() => {\n    onRenderMarkdownChange?.(showMarkdown);\n  }, [showMarkdown]);\n};\n","import { useRef } from \"react\";\n\nimport type { Root as RootMdType } from \"mdast\";\n\nimport { getLastNode } from \"../helper/traversal-last-node\";\nimport { usePersistCallback } from \"@/libs/hooks\";\ninterface SmoothShowMarkdownProps {\n  markdown: string;\n  isSmooth?: boolean;\n  showMarkdownIndex: number;\n  enableHtmlTags?: boolean;\n  showMoreByte: (byte: number) => void;\n}\nexport const useSmoothAstChange = ({\n  isSmooth,\n  markdown,\n  showMoreByte,\n  showMarkdownIndex,\n  enableHtmlTags,\n}: SmoothShowMarkdownProps) => {\n  const refMarkdown = useRef(markdown);\n  const refIndex = useRef(showMarkdownIndex);\n  const refIsSmooth = useRef(isSmooth);\n  const refShowMoreByte = useRef(showMoreByte);\n  const onAstChange = usePersistCallback((ast: RootMdType) => {\n    if (!refIsSmooth.current) {\n      return;\n    }\n    // 最后元素遇到 很多未显示内容的时候，直接跳过打印\n    const lastNode = getLastNode(ast);\n    if (lastNode?.type === \"image\" || lastNode?.type === \"link\") {\n      const imgEnd = refMarkdown.current.indexOf(\")\", refIndex.current);\n      const newLine = refMarkdown.current.indexOf(\"\\n\", refIndex.current);\n      if (newLine === -1 || imgEnd < newLine) {\n        if (imgEnd > -1) {\n          refShowMoreByte.current(imgEnd - refIndex.current + 1);\n        }\n      } else {\n        refShowMoreByte.current(newLine - refIndex.current + 1);\n      }\n    } else if (lastNode?.type === \"html\" && enableHtmlTags) {\n      // Html的话，防止抖动，一行一行加载\n      const newLine = refMarkdown.current.indexOf(\"\\n\", refIndex.current);\n      if (newLine > -1) {\n        refShowMoreByte.current(newLine - refIndex.current + 1);\n      } else {\n        refShowMoreByte.current(refMarkdown.current.length - refIndex.current);\n      }\n    }\n  });\n  return { onAstChange };\n};\n","import { useEffect, useRef, useState, useMemo, useCallback } from \"react\";\ninterface SmoothShowMarkdownProps {\n  markdown: string;\n  isSmooth?: boolean;\n  isFinish?: boolean;\n  interval?: number;\n  onMarkdownEnd?: () => void;\n  onRenderMarkdownChange?: (md: string) => void;\n}\nexport const useSmoothShowMarkdown = ({\n  isSmooth,\n  interval,\n  markdown,\n  isFinish,\n}: SmoothShowMarkdownProps) => {\n  const refMarkdown = useRef(\"\");\n  const refIsSmooth = useRef(isSmooth);\n  const refInterval = useRef(interval);\n  const refIndex = useRef(0);\n  const [showMarkdown, setShowMarkdown] = useState(!isSmooth ? markdown : \"\");\n  const isShowIndicator =\n    isSmooth && (showMarkdown.length < refMarkdown.current.length || !isFinish);\n\n  const isMarkdownChange = useMemo(() => {\n    if (!markdown.startsWith(refMarkdown.current) || !isSmooth) {\n      return true;\n    }\n    return false;\n  }, [markdown, isSmooth]);\n\n  refMarkdown.current = markdown;\n  refInterval.current = interval;\n  refIsSmooth.current = isSmooth;\n\n  const showMoreByte = useCallback((count = 1) => {\n    if (refIndex.current < refMarkdown.current.length) {\n      refIndex.current += count || 1;\n      const ms = refMarkdown.current?.slice(0, refIndex.current);\n      setShowMarkdown(ms);\n    }\n  }, []);\n  useEffect(() => {\n    let timeout;\n    refIndex.current = 0;\n    refIndex.current = 0;\n    if (isSmooth) {\n      function run() {\n        timeout = setTimeout(() => {\n          showMoreByte(2);\n          run();\n        }, refInterval.current);\n      }\n      run();\n    } else {\n      setShowMarkdown(refMarkdown.current);\n    }\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [isSmooth, isMarkdownChange && markdown]);\n  return { isShowIndicator, showMarkdown, showMoreByte };\n};\n","import { type IOnTaskListChange } from \"@/libs/types\";\nimport { usePersistCallback } from \"@/libs/hooks\";\nimport { useRef } from \"react\";\nimport { Logger } from \"@/libs/utils\";\nimport { TaskValue } from \"../ast\";\nexport const useTaskChangeHandle = ({\n  onTaskChange,\n  logger,\n}: {\n  onTaskChange?: IOnTaskListChange;\n  logger?: Logger;\n}) => {\n  const refList = useRef<Record<string, TaskValue>>({});\n\n  const onTaskChangeHandle = usePersistCallback((taskValue: TaskValue) => {\n    refList.current[taskValue.id] = taskValue;\n    const taskList = Object.values(refList.current)\n      .sort((prev, next) => prev.index - next.index)\n      .map((item) => ({\n        taskName: item.id,\n        taskValue: item.values,\n      }));\n    onTaskChange?.({\n      taskList,\n    });\n    logger?.debug(\"useTaskChangeHandle onTaskChange values:\", taskList);\n  });\n  return { onTaskChangeHandle };\n};\n","import { FC, memo, PropsWithChildren, useMemo, useRef } from \"react\";\nimport type { Root as RootMdType } from \"mdast\";\nimport {\n  Language,\n  type IOnImageClickEvent,\n  type IOnTaskListChange,\n} from \"@/libs/types\";\n\nimport { Root } from \"./render/root\";\nimport { useSmoothShowMarkdown } from \"./hooks/use-smooth-show-markdown\";\nimport { useSmoothAstChange } from \"./hooks/use-smooth-ast-change\";\nimport { useRenderChange } from \"./hooks/use-render-change\";\nimport { genAst } from \"./helper/gen-ast\";\nimport { ChatFamePropsProvider } from \"./context\";\nimport { Logger } from \"@/libs/utils\";\nimport { I18n } from \"@/libs/i18n\";\nimport { useTaskChangeHandle } from \"./hooks/use-task-change\";\nexport interface MarkdownProps {\n  theme?: \"light\" | \"dark\";\n  selectable?: boolean;\n  taskDisabled?: boolean;\n  markdown: string;\n  enableCodeBy4Space?: boolean; // 启用4个空格缩进的代码块\n  enableHtmlTags?: boolean;\n  isSmooth?: boolean;\n  isFinish?: boolean;\n  interval?: number;\n  language?: Language;\n  onMarkdownEnd?: () => void;\n  onRenderMarkdownChange?: (md: string) => void;\n  onImageClick?: IOnImageClickEvent;\n  onTaskChange?: IOnTaskListChange;\n  debug?: boolean;\n  className?: string;\n  style?: React.CSSProperties;\n}\nconst MarkdownRender: FC<\n  PropsWithChildren<\n    MarkdownProps & {\n      onAstChange?: (ast: RootMdType) => void;\n      isShowIndicator?: boolean;\n    }\n  >\n> = ({\n  markdown,\n  onAstChange,\n  isShowIndicator = false,\n  theme,\n  className,\n  style,\n}) => {\n  const refRaw = useRef<string>(\"\");\n  const refAst = useRef<RootMdType>();\n  const renderAst = useMemo(() => {\n    const [rawAstRoot, fixedAstRoot, showAstRoot] = genAst({\n      oldMarkdown: refRaw.current,\n      newMarkdown: markdown,\n      lastAstRoot: refAst.current,\n      isShowIndicator,\n    });\n    refAst.current = rawAstRoot;\n    refRaw.current = markdown;\n    onAstChange?.(fixedAstRoot);\n\n    return showAstRoot;\n  }, [markdown, isShowIndicator, onAstChange]);\n  return (\n    <Root className={className} style={style} root={renderAst} theme={theme} />\n  );\n};\n\nconst MdStreamOp: FC<PropsWithChildren<MarkdownProps>> = ({\n  theme = \"light\",\n  markdown,\n  isSmooth,\n  isFinish,\n  interval = 50,\n  onMarkdownEnd,\n  onRenderMarkdownChange,\n  onImageClick,\n  onTaskChange,\n  language,\n  debug,\n  selectable = true,\n  className,\n  style,\n  taskDisabled,\n  enableHtmlTags = false,\n  enableCodeBy4Space = false,\n}) => {\n  const { showMarkdown, isShowIndicator, showMoreByte } = useSmoothShowMarkdown(\n    {\n      isSmooth,\n      interval,\n      markdown,\n      isFinish,\n    }\n  );\n  const i18n = useMemo(() => new I18n(language || Language.ZH_CN), []);\n  const logger = useMemo(() => {\n    const loggerNew = new Logger();\n    debug && loggerNew.seDebug();\n    return loggerNew;\n  }, []);\n  useRenderChange({\n    showMarkdown,\n    markdown,\n    isFinish,\n    onMarkdownEnd,\n    onRenderMarkdownChange,\n  });\n  const { onAstChange } = useSmoothAstChange({\n    isSmooth,\n    markdown,\n    showMoreByte,\n    showMarkdownIndex: showMarkdown.length,\n    enableHtmlTags,\n  });\n  const { onTaskChangeHandle } = useTaskChangeHandle({ onTaskChange, logger });\n  return (\n    <ChatFamePropsProvider\n      markdown={markdown}\n      onTaskChangeHandle={onTaskChangeHandle}\n      onImageClick={onImageClick}\n      i18n={i18n}\n      logger={logger}\n      selectable={selectable}\n      taskDisabled={!isFinish || taskDisabled}\n      enableHtmlTags={enableHtmlTags}\n      enableCodeBy4Space={enableCodeBy4Space}\n    >\n      <MarkdownRender\n        theme={theme}\n        markdown={showMarkdown}\n        isShowIndicator={isShowIndicator}\n        onAstChange={onAstChange}\n        className={className}\n        style={style}\n      />\n    </ChatFamePropsProvider>\n  );\n};\nexport const MdStream: FC<PropsWithChildren<MarkdownProps>> = memo(\n  MdStreamOp,\n  (prev, next) => {\n    if (Object.keys(prev).length !== Object.keys(next).length) {\n      return false;\n    } else {\n      return !Object.keys(prev).find((key) => {\n        if (prev[key] !== next[key]) {\n          return true;\n        }\n        return false;\n      });\n    }\n  }\n);\n","import { View } from \"@tarojs/components\";\nimport type { Blockquote as BlockquoteMdType } from \"mdast\";\nimport { Block } from \"../\";\nimport { FC } from \"react\";\nimport styles from \"./index.module.less\";\nexport const Blockquote: FC<{\n  node: BlockquoteMdType;\n}> = ({ node }) => {\n  return (\n    <View className={styles.blockquote}>\n      {node.children.map((item) => (\n        <Block node={item} />\n      ))}\n    </View>\n  );\n};\n","import { FC, Fragment, useMemo } from \"react\";\n\nimport { View } from \"@tarojs/components\";\n\nimport { Text } from \"../../phrase/text\";\nimport { Indicator } from \"../../phrase/indicator\";\nimport type { CodeLocal } from \"../../../ast\";\nimport cls from \"classnames\";\nimport styles from \"./index.module.less\";\nimport { setClipboardData, showToast } from \"@tarojs/taro\";\nimport {\n  useMdStreamEnableCodeBy4Space,\n  useMdStreamGetMarkdown,\n  useMdStreamI18n,\n} from \"../../../context\";\nexport const Code: FC<{\n  node: CodeLocal;\n}> = ({ node }) => {\n  const i18n = useMdStreamI18n();\n  const children = node?.children?.length\n    ? node?.children\n    : [\n        {\n          type: \"text\",\n          value: node.value,\n        },\n      ];\n  const enableCodeBy4Space = useMdStreamEnableCodeBy4Space();\n  const markdown = useMdStreamGetMarkdown();\n  const isShowCode = useMemo(() => {\n    if (enableCodeBy4Space) {\n      return true;\n    }\n    let offset = node.position?.start.offset || 0;\n    if (!node.position?.start.offset && node.position?.start.offset !== 0) {\n      return true;\n    } else if (markdown.substring(offset, offset + 4) === \"    \") {\n      return false;\n    }\n    return true;\n  }, [enableCodeBy4Space, markdown, node.position?.start.offset]);\n  return (\n    <View\n      className={cls(styles[\"code-container\"], {\n        [styles[\"code\"]]: isShowCode,\n      })}\n    >\n      <View className={styles.header}>\n        <View className={styles.lang}>{node.lang}</View>\n        <View\n          className={styles.copy}\n          onClick={() => {\n            setClipboardData({\n              data: node.value,\n              fail() {\n                showToast({\n                  title: i18n?.t(\"copyFailed\") || \"\",\n                  icon: \"error\",\n                });\n              },\n            });\n          }}\n        >\n          {i18n?.t(\"copyCode\")}\n        </View>\n      </View>\n      <View className={styles.content}>\n        {children?.map((item, index) => (\n          <Fragment key={index}>\n            {item.type === \"text\" && (\n              <Text node={item} className={styles.text} />\n            )}\n            {item.type === \"indicator\" && <Indicator node={item} />}\n          </Fragment>\n        ))}\n      </View>\n    </View>\n  );\n};\n","import { View } from '@tarojs/components';\nimport type { Heading as HeadingMdType } from 'mdast';\nimport { Phrase } from '../../phrase';\nimport { FC } from 'react';\nimport styles from './index.module.less';\nexport const Heading: FC<{\n  node: HeadingMdType;\n}> = ({ node }) => {\n  const depth = node.depth > 3 ? 3 : node.depth;\n  return (\n    <View className={styles[`heading-${depth}`]}>\n      {node.children.map((item, index) => (\n        <Phrase key={index} node={item} />\n      ))}\n    </View>\n  );\n};\n","import { View } from \"@tarojs/components\";\n\nimport type {\n  BlockContent,\n  DefinitionContent,\n  ListItem as ListItemMdType,\n} from \"mdast\";\nimport { FC } from \"react\";\nimport { Html } from \"../phrase/html\";\nimport { Code } from \"./code\";\nimport { Heading } from \"./heading\";\nimport { Paragraph } from \"./paragpha\";\nimport { Blockquote } from \"./blockquote\";\nimport { List } from \"./list\";\nimport { ListItem } from \"./list-item\";\nimport { Table } from \"./table\";\nimport { ThematicBreak } from \"./thematic-break\";\nexport const BlockTypes = [\n  \"code\",\n  \"heading\",\n  \"paragraph\",\n  \"blockquote\",\n  \"list\",\n  \"listItem\",\n  \"table\",\n  \"thematicBreak\",\n];\nexport const Block: FC<{\n  node: BlockContent | DefinitionContent | ListItemMdType;\n  isParagraphNeedMargin?: boolean;\n}> = ({ node, isParagraphNeedMargin = true }) => {\n  return (\n    <View>\n      {node.type === \"html\" && <Html node={node} />}\n      {node.type === \"code\" && <Code node={node} />}\n      {node.type === \"heading\" && <Heading node={node} />}\n      {node.type === \"paragraph\" && (\n        <Paragraph node={node} isNeedMargin={isParagraphNeedMargin} />\n      )}\n      {node.type === \"blockquote\" && <Blockquote node={node} />}\n      {node.type === \"list\" && <List node={node} />}\n      {node.type === \"listItem\" && <ListItem node={node} />}\n      {node.type === \"table\" && <Table node={node} />}\n      {\n        node.type === \"thematicBreak\" && (\n          <ThematicBreak />\n        ) /* 不做处理，做一个标记*/\n      }\n    </View>\n  );\n};\n","import { View } from \"@tarojs/components\";\nimport type { ListItem as ListItemMdType } from \"mdast\";\nimport { Block } from \"../\";\nimport { FC } from \"react\";\n\nexport const ListItem: FC<{\n  node: ListItemMdType;\n}> = ({ node }) => {\n  return (\n    <View>\n      {node.children.map((item, index) => (\n        <Block node={item} key={index} isParagraphNeedMargin={false} />\n      ))}\n    </View>\n  );\n};\n","import { Text, View } from \"@tarojs/components\";\nimport type { List as ListMdType, ListItem as ListMdItem } from \"mdast\";\nimport { ListItem } from \"../list-item\";\nimport { FC, ReactNode, useEffect, useMemo, useState } from \"react\";\nimport styles from \"./index.module.less\";\nimport { Checkbox } from \"@/libs/ui-kit/atomic/check-box\";\nimport { Radio } from \"@/libs/ui-kit/atomic/radio\";\nimport { getTextFromParagraph } from \"../../../helper/get-text-from-paragraph\";\nimport { usePersistCallback } from \"@/libs/hooks\";\nimport { isBoolean } from \"@tarojs/shared\";\nimport { Spacing } from \"@/libs/ui-kit/atomic/spacing\";\nimport { CenterAlignedBox } from \"@/libs/ui-kit/atomic/center-aligned-box\";\nimport {\n  useMdStreamLogger,\n  useMdStreamTaskChangeHandle,\n  useMdStreamTaskDisabled,\n} from \"../../../context\";\n\nlet listNo = 1000;\n\ninterface TaskBoxInfo {\n  checkbox?: boolean; // Whether the item is a checkbox item (when `boolean`).\n  radio?: boolean; // Whether the item is a radio item (when `boolean`).\n  checked?: boolean; // Whether the item is a checked item (when `boolean`).\n  value?: string; // The task's value\n  id: string; // Tha task's Id\n}\n\ninterface FormatNodeChildren {\n  isTask: boolean; // Whether the item is a tasklist item (when `boolean`).\n  node: ListMdItem; // List Item's Node\n  isOrder: boolean; // Whether the list is ordered\n  orderNo: number; // The order's No\n  taskInfo: TaskBoxInfo; // The taskInfo (when isTask is true)\n}\n\nexport const List: FC<{\n  node: ListMdType;\n}> = ({ node }) => {\n  const listNoId = useMemo(() => listNo++, []);\n  const formatItems = useFormatNodeChildren(node, listNoId);\n  const logger = useMdStreamLogger();\n  const taskDisabled = useMdStreamTaskDisabled();\n  const onTaskChangeHandle = useMdStreamTaskChangeHandle();\n  const [listItems, setListItems] = useState<Array<FormatNodeChildren>>([]);\n  useEffect(() => {\n    setListItems(formatItems);\n  }, [formatItems]);\n  const onTaskChange = usePersistCallback(\n    (isChecked: boolean, taskInfo: TaskBoxInfo) => {\n      listItems.map((item) => {\n        if (isChecked) {\n          if (taskInfo.radio) {\n            // If the changed task is radio,then set property 'checked'  false;\n            if (item.taskInfo.radio) {\n              item.taskInfo.checked = false;\n            }\n          }\n        }\n        if (taskInfo.id === item.taskInfo.id) {\n          item.taskInfo.checked = isChecked;\n        }\n      });\n      setListItems([...listItems]);\n    }\n  );\n  useEffect(() => {\n    const isTaskList = listItems.some((item) => item.isTask);\n    if (isTaskList && !taskDisabled) {\n      const values = listItems\n        .map((item) => {\n          if (item.taskInfo.checked && item.taskInfo.value) {\n            return item.taskInfo.value;\n          }\n          return \"\";\n        })\n        .filter((item) => !!item);\n      onTaskChangeHandle?.({\n        id: `task_list_${listNoId}`,\n        index: listNoId,\n        values,\n      });\n      logger?.debug(\"taskChange:\", values, listNoId);\n    }\n  }, [listItems, taskDisabled]);\n\n  return (\n    <View className={styles[\"list\"]}>\n      {listItems.map((item, index) => (\n        <ListItemWrapper\n          listItemInfo={item}\n          key={index}\n          onChange={onTaskChange}\n        >\n          <View className={styles.content}>\n            <ListItem node={item.node} />\n          </View>\n        </ListItemWrapper>\n      ))}\n    </View>\n  );\n};\n\nconst ListItemWrapper: FC<{\n  listItemInfo: FormatNodeChildren;\n  children: ReactNode;\n  onChange?: (isChecked: boolean, taskInfo: TaskBoxInfo) => void;\n}> = ({ listItemInfo, children, onChange }) => {\n  return (\n    <>\n      {listItemInfo.isTask ? (\n        <ListTaskWrapper nodeInfo={listItemInfo} onChange={onChange}>\n          {children}\n        </ListTaskWrapper>\n      ) : (\n        <Spacing className={styles[\"list-item\"]} gap={6} width100>\n          <CenterAlignedBox width={16} height={22}>\n            {listItemInfo.isOrder ? (\n              <Text>{listItemInfo.orderNo}.</Text>\n            ) : (\n              <View className={styles.dot} />\n            )}\n          </CenterAlignedBox>\n          <View\n            style={{\n              flex: 1,\n            }}\n          >\n            {children}\n          </View>\n        </Spacing>\n      )}\n    </>\n  );\n};\n\nconst ListTaskWrapper: FC<{\n  nodeInfo: FormatNodeChildren;\n  children: ReactNode;\n  onChange?: (isChecked: boolean, taskInfo: TaskBoxInfo) => void;\n}> = ({ nodeInfo, children, onChange }) => {\n  const onChangeHandle = usePersistCallback((isChecked: boolean) => {\n    onChange?.(isChecked, nodeInfo.taskInfo);\n  });\n  const taskDisabled = useMdStreamTaskDisabled();\n  return (\n    <>\n      {nodeInfo.taskInfo.radio ? (\n        <Radio\n          checked={nodeInfo.taskInfo.checked}\n          className={styles[\"task-item\"]}\n          onChange={onChangeHandle}\n          disabled={taskDisabled}\n        >\n          {children}\n        </Radio>\n      ) : (\n        <Checkbox\n          checked={nodeInfo.taskInfo.checked}\n          className={styles[\"task-item\"]}\n          onChange={onChangeHandle}\n          disabled={taskDisabled}\n        >\n          {children}\n        </Checkbox>\n      )}\n    </>\n  );\n};\n\nconst useFormatNodeChildren = (node: ListMdType, listNoId: number) => {\n  let isForbidChecked = false;\n  const nodeChildren: Array<FormatNodeChildren> = useMemo(() => {\n    return node.children.map((item, index) => {\n      const listItemData = (item.data || {}) as unknown as {\n        radio?: boolean;\n        checked?: boolean;\n        value?: string;\n      };\n      const selectData: TaskBoxInfo = {\n        id: `list_prefix_${listNoId}_${index}`,\n        checkbox: isBoolean(item.checked),\n        radio: !!listItemData.radio,\n        checked: item.checked ?? listItemData.checked,\n        value: \"\",\n      };\n      const isTask = !!(selectData.checkbox || selectData.radio);\n      selectData.value = isTask\n        ? (() => {\n            // We just extract text from first paragraph.This is already agreed upon in advance\n            if (item.children?.[0].type === \"paragraph\") {\n              return getTextFromParagraph(item.children?.[0]);\n            } else {\n              return \"\";\n            }\n          })()\n        : \"\";\n\n      // Radio component only the first can be set to \"checked\"\n      if (selectData.radio && selectData.checked) {\n        if (isForbidChecked) {\n          selectData.checked = false;\n        }\n        isForbidChecked = true;\n      }\n\n      return {\n        isTask: isTask,\n        node: item,\n        isOrder: !!node.ordered,\n        orderNo: index + 1,\n        taskInfo: selectData,\n      };\n    });\n  }, [node]);\n  return nodeChildren;\n};\n","import { View } from \"@tarojs/components\";\nimport type { Paragraph as ParagraphMdType } from \"mdast\";\nimport { Phrase } from \"../../phrase\";\nimport { FC } from \"react\";\n\nexport const Paragraph: FC<{\n  node: ParagraphMdType;\n  isNeedMargin?: boolean;\n}> = ({ node }) => {\n  return (\n    <View>\n      {node.children.map((item, index) => (\n        <Phrase key={index} node={item} />\n      ))}\n    </View>\n  );\n};\n","import { type FC } from 'react';\n\nimport { type Table as TableNode } from 'mdast';\nimport classNames from 'classnames';\nimport { View } from '@tarojs/components';\n\nimport { Phrase } from '../../phrase';\n\nimport styles from './index.module.less';\n\nexport const Table: FC<{ node: TableNode }> = ({ node }) => (\n  <View className={styles['table-wrapper']}>\n    <View className={styles.table}>\n      {node.children.map((row, rowIndex) => (\n        <View\n          key={`row-${rowIndex}`}\n          className={classNames(styles['table-row'], {\n            [styles['table-header']]: rowIndex === 0,\n          })}\n        >\n          {row.children.map((cell, cellIndex) => (\n            <View\n              key={`row-${rowIndex}-cell-${cellIndex}`}\n              className={styles['table-cell']}\n            >\n              {cell.children.map((item, index) => (\n                <Phrase\n                  key={`row-${rowIndex}-cell-${cellIndex}-content-${index}`}\n                  node={item}\n                />\n              ))}\n            </View>\n          ))}\n        </View>\n      ))}\n    </View>\n  </View>\n);\n","import { View } from \"@tarojs/components\";\nimport styles from \"./index.module.less\";\nexport const ThematicBreak = () => {\n  return <View className={styles.break} />;\n};\n","import { View } from \"@tarojs/components\";\nimport styles from \"./index.module.less\";\nexport const Break = () => {\n  return <View className={styles.break} />;\n};\n","import { View } from '@tarojs/components';\nimport type { Delete as DeleteMdType } from 'mdast';\nimport { FC } from 'react';\nimport { Phrase } from '../';\nimport styles from './index.module.less';\nexport const Delete: FC<{\n  node: DeleteMdType;\n}> = ({ node }) => {\n  return (\n    <View className={styles.delete}>\n      {node.children.map((item, index) => (\n        <Phrase key={index} node={item} />\n      ))}\n    </View>\n  );\n};\n","import { View } from '@tarojs/components';\nimport type { Emphasis as EmphasisMdType } from 'mdast';\nimport { FC } from 'react';\nimport { Phrase } from '../';\nimport styles from './index.module.less';\nexport const Emphasis: FC<{\n  node: EmphasisMdType;\n}> = ({ node }) => {\n  return (\n    <View className={styles.emphasis}>\n      {node.children.map((item, index) => (\n        <Phrase key={index} node={item} />\n      ))}\n    </View>\n  );\n};\n","import type { Html as HtmlMdType } from \"mdast\";\nimport { FC, memo } from \"react\";\nimport { Text } from \"../text\";\nimport type { Text as TextMdType } from \"mdast\";\nimport { useMdStreamEnableHtmlTags } from \"../../../context\";\nimport { RichText } from \"@tarojs/components\";\n\nexport const Html: FC<{\n  node: HtmlMdType;\n}> = memo(({ node }) => {\n  const enableHtmlTags = useMdStreamEnableHtmlTags();\n  return (\n    <>\n      {enableHtmlTags ? (\n        <RichText nodes={`${node.value}`} />\n      ) : (\n        <Text node={node as unknown as TextMdType} />\n      )}\n    </>\n  );\n});\n","import { Image as TaroImage } from \"@tarojs/components\";\nimport type { Image as ImageMdType } from \"mdast\";\nimport { FC, useEffect, useState } from \"react\";\nimport styles from \"./index.module.less\";\nimport { previewImage } from \"@tarojs/taro\";\nimport { useMdStreamContext } from \"../../../context\";\nimport cls from \"classnames\";\n\nexport const Image: FC<{\n  node: ImageMdType;\n}> = ({ node }) => {\n  const { onImageClick } = useMdStreamContext();\n  const [url, setUrl] = useState(node.url);\n  useEffect(() => {\n    setUrl(node.url);\n  }, [node]);\n  return (\n    <TaroImage\n      src={url}\n      mode=\"aspectFill\"\n      className={cls(styles.image, {\n        [styles[\"image-error\"]]: !url,\n      })}\n      onError={() => {\n        setUrl(\"\");\n      }}\n      onClick={() => {\n        if (node.url) {\n          if (onImageClick) {\n            onImageClick?.({ url: node.url });\n          } else {\n            previewImage({\n              urls: [node.url],\n              current: node.url,\n              enableShowPhotoDownload: true,\n            });\n          }\n        }\n      }}\n    />\n  );\n};\n","import type { PhrasingContent } from \"mdast\";\nimport { FC } from \"react\";\nimport { Break } from \"./break\";\nimport { Text } from \"./text\";\nimport { Delete } from \"./delete\";\nimport { Emphasis } from \"./emphasis\";\nimport { Html } from \"./html\";\nimport { Image } from \"./image\";\nimport { InlineCode } from \"./inline-code\";\nimport { Link } from \"./link\";\nimport { Strong } from \"./strong\";\nimport { Indicator } from \"./indicator\";\nimport { type IndicatorLocal } from \"../../ast\";\nexport const PhraseTypes = [\n  \"break\",\n  \"delete\",\n  \"emphasis\",\n  \"footnoteReference\",\n  \"html\",\n  \"image\",\n  \"imageReference\",\n  \"inlineCode\",\n  \"link\",\n  \"linkReference\",\n  \"strong\",\n  \"text\",\n  \"indicator\",\n];\nexport const Phrase: FC<{\n  node: PhrasingContent | IndicatorLocal;\n}> = ({ node }) => {\n  return (\n    <>\n      {node.type === \"break\" && <Break />}\n      {node.type === \"delete\" && <Delete node={node} />}\n      {node.type === \"emphasis\" && <Emphasis node={node} />}\n      {node.type === \"footnoteReference\" && null /* 不做处理，做一个标记*/}\n      {node.type === \"html\" && <Html node={node} />}\n      {node.type === \"image\" && <Image node={node} />}\n      {node.type === \"imageReference\" && null /* 不做处理，做一个标记*/}\n      {node.type === \"inlineCode\" && <InlineCode node={node} />}\n      {node.type === \"link\" && <Link node={node} />}\n      {node.type === \"linkReference\" && null /* 不做处理，做一个标记*/}\n      {node.type === \"strong\" && <Strong node={node} />}\n      {node.type === \"text\" && <Text node={node} />}\n      {node.type === \"indicator\" && <Indicator node={node} />}\n    </>\n  );\n};\n","import { FC } from \"react\";\n\nimport { Text } from \"@tarojs/components\";\n\nimport { IndicatorLocal } from \"../../../ast\";\n\nimport styles from \"./index.module.less\";\n\nexport const Indicator: FC<{\n  node: IndicatorLocal;\n}> = () => <Text className={styles.indicator}>{\"\\b\"}</Text>;\n","import { Text } from \"@tarojs/components\";\nimport type { InlineCode as InlineCodeMdType } from \"mdast\";\nimport { FC } from \"react\";\nimport { useMdStreamSelectable } from \"../../../context\";\nimport styles from \"./index.module.less\";\nexport const InlineCode: FC<{\n  node: InlineCodeMdType;\n}> = ({ node }) => {\n  const selectable = useMdStreamSelectable();\n  return (\n    <Text\n      selectable={selectable}\n      space=\"nbsp\"\n      className={styles[\"inline-code\"]}\n    >\n      {node.value}\n    </Text>\n  );\n};\n","import { View } from \"@tarojs/components\";\nimport type { Link as LinkMdType } from \"mdast\";\nimport { FC } from \"react\";\nimport { Phrase } from \"../\";\nimport { setClipboardData, showToast } from \"@tarojs/taro\";\nimport cls from \"classnames\";\n\nimport styles from \"./index.module.less\";\nimport { useMdStreamI18n } from \"../../../context\";\nimport { isWeb } from \"@/libs/utils\";\n\nexport const Link: FC<{\n  node: LinkMdType;\n}> = ({ node }) => {\n  const i18n = useMdStreamI18n();\n  const isValidUrl = node.url && node.url !== \"#\";\n  return (\n    <View\n      onClick={() => {\n        if (isValidUrl) {\n          if (isWeb) {\n            window.open(node.url);\n          } else {\n            setClipboardData({\n              data: node.url,\n              fail() {\n                showToast({\n                  title: i18n?.t(\"copyFailed\") || \"\",\n                  icon: \"error\",\n                });\n              },\n            });\n          }\n        }\n      }}\n      className={cls(styles.link, {\n        [styles.invalid]: !isValidUrl,\n      })}\n    >\n      {node.children.map((item, index) => (\n        <Phrase key={index} node={item} />\n      ))}\n    </View>\n  );\n};\n","import { View } from '@tarojs/components';\nimport type { Strong as StrongMdType } from 'mdast';\nimport { FC } from 'react';\nimport { Phrase } from '../';\nimport styles from './index.module.less';\nexport const Strong: FC<{\n  node: StrongMdType;\n}> = ({ node }) => {\n  return (\n    <View className={styles.strong}>\n      {node.children.map((item, index) => (\n        <Phrase key={index} node={item} />\n      ))}\n    </View>\n  );\n};\n","import { Text as TaroText } from \"@tarojs/components\";\nimport { Break } from \"../break\";\nimport type { Text as TextMdType } from \"mdast\";\nimport { FC, Fragment, useMemo } from \"react\";\nimport cls from \"classnames\";\nimport styles from \"./index.module.less\";\nimport { useMdStreamSelectable } from \"../../../context\";\nexport const Text: FC<{\n  node: TextMdType;\n  className?: string;\n}> = ({ node, className }) => {\n  const textList = useMemo(() => node.value.split(\"\\n\"), [node.value]);\n  const selectable = useMdStreamSelectable();\n  return (\n    <>\n      {textList.map((item, index) => {\n        return (\n          <Fragment key={index}>\n            {item ? (\n              <TaroText\n                selectable={selectable}\n                className={cls(styles.text, styles.important, className)}\n              >\n                {item}\n              </TaroText>\n            ) : null}\n            {index !== textList.length - 1 ? <Break /> : null}\n          </Fragment>\n        );\n      })}\n    </>\n  );\n};\n","import { FC, Fragment } from \"react\";\n\nimport type { Root as RootType, BlockContent, PhrasingContent } from \"mdast\";\nimport { View } from \"@tarojs/components\";\nimport cls from \"classnames\";\nimport { Phrase, PhraseTypes } from \"../phrase\";\nimport { Block, BlockTypes } from \"../block\";\nimport \"./md.css\";\nimport styles from \"./index.module.less\";\nexport const Root: FC<{\n  root?: RootType;\n  theme?: \"dark\" | \"light\";\n  className?: string;\n  style?: React.CSSProperties;\n}> = ({ root, theme = \"light\", className, style }) => (\n  <View\n    style={style}\n    className={cls(styles.root, \"md-stream\", {\n      dark: theme !== \"dark\",\n    }, className)}\n  >\n    {root?.children.map((item, index) => (\n      <Fragment key={index}>\n        {BlockTypes.includes(item.type) && (\n          <Block node={item as BlockContent} />\n        )}\n        {PhraseTypes.includes(item.type) && (\n          <Phrase node={item as PhrasingContent} />\n        )}\n        {item.type === \"tableCell\" && null /* 不做处理，做一个标记*/}\n        {item.type === \"tableRow\" && null /* 不做处理，做一个标记*/}\n        {item.type === \"yaml\" && null /* 不做处理，做一个标记*/}\n      </Fragment>\n    ))}\n  </View>\n);\n","import type { Parent } from 'mdast';\n\nexport const isParent = (value: any): value is Parent => {\n  return !!value?.children;\n};\nexport const getRegResult = (\n  value: string,\n  regExps: RegExp[],\n): RegExpExecArray | null => {\n  let fixMatch: RegExpExecArray | null = null;\n  regExps.find(pattern => {\n    fixMatch = pattern.exec(value);\n    return fixMatch;\n  });\n  return fixMatch;\n};\n","import { View } from \"@tarojs/components\";\nimport { FC, PropsWithChildren, useState } from \"react\";\nimport styles from \"./index.module.less\";\nexport const Modal: FC<\n  PropsWithChildren<{\n    onHide: () => void;\n    isNeedMask?: boolean;\n  }>\n> = ({ children, onHide, isNeedMask = true }) => {\n  const [isShow, setIsShow] = useState(true);\n  if (!isShow) {\n    return null;\n  }\n  return (\n    <View className={styles[\"modal-container\"]}>\n      {isNeedMask ? (\n        <View\n          className={styles[\"mask\"]}\n          onClick={() => {\n            setIsShow(true);\n            onHide();\n          }}\n        />\n      ) : null}\n      <View className={styles.modal}>{children}</View>\n    </View>\n  );\n};\n","import { type FC } from \"react\";\nimport classNames from \"classnames\";\nimport { View } from \"@tarojs/components\";\nimport cls from \"classnames\";\n\nimport styles from \"./index.module.less\";\nimport { Spacing } from \"../spacing\";\nimport { DisableContainer } from \"../disable-container\";\n\ninterface RadioProps {\n  checked?: boolean;\n  className?: string;\n  disabled?: boolean;\n\n  children?: React.ReactNode;\n  onChange?: (checked: boolean) => void;\n}\nexport const Radio: FC<RadioProps> = (props) => {\n  const { checked, onChange, disabled, children, className } = props;\n\n  const handleChange = () => {\n    if (disabled) {\n      return;\n    }\n    onChange?.(!checked!);\n  };\n  return (\n    <DisableContainer disabled={disabled}>\n      <Spacing\n        className={cls(styles.box, className)}\n        gap={8}\n        onClick={handleChange}\n      >\n        <View\n          onClick={handleChange}\n          className={classNames(styles[\"radio\"], { [styles.checked]: checked })}\n        >\n          <View className={styles[\"checked-circle\"]} />\n        </View>\n        <View\n          style={{\n            flex: 1,\n          }}\n        >\n          {children}\n        </View>\n      </Spacing>\n    </DisableContainer>\n  );\n};\n","import {\n  ForwardedRef,\n  forwardRef,\n  memo,\n  useImperativeHandle,\n  useLayoutEffect,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\n\nimport cls from \"classnames\";\nimport {\n  ScrollView as TaroScrollView,\n  View,\n  type ScrollViewProps,\n} from \"@tarojs/components\";\n\nimport styles from \"./index.module.less\";\nimport { useWheelHandle } from \"./use-wheel-handle\";\nimport { IconButton } from \"../icon-button\";\nimport { SvgArrowUp } from \"../svg\";\nimport { useHelperButton } from \"./use-helper-button\";\nimport { logger } from \"@/libs/utils\";\nimport { usePersistCallback } from \"@/libs/hooks\";\ntype ScrollViewType = Omit<ScrollViewProps, \"ref\"> & {\n  isLoadMore?: boolean;\n};\nexport interface ScrollViewRef {\n  scrollToBottom: () => void;\n  scrollToAnchorBottom: () => void;\n  removeAnchorBottom: () => void;\n}\n\nconst TaroScrollViewMemo = memo(TaroScrollView);\n\nconst ScrollViewSlot = memo(\n  forwardRef(\n    (\n      {\n        id,\n        children,\n        isLoadMore,\n        checkArrowDownVisible,\n        ...restProps\n      }: ScrollViewType & {\n        checkArrowDownVisible?: (scrollTop: number) => void;\n      },\n      ref: ForwardedRef<ScrollViewRef>\n    ) => {\n      const [scrollTop, setScrollTop] = useState<number | undefined>(0);\n      const refScrollNow = useRef<number>(1);\n      const { onInitScrollRefForWheel } = useWheelHandle();\n      const onScrollHandle = usePersistCallback((e) => {\n        refScrollNow.current = e.detail.scrollTop;\n        checkArrowDownVisible?.(e.detail.scrollTop);\n      });\n      const refSetScrollTimeout = useRef<number | undefined>(undefined);\n\n      const delayToSetScroll = usePersistCallback(\n        (scrollTop: number, timeoutNumber: number | undefined = 0) => {\n          if (refSetScrollTimeout.current) {\n            clearTimeout(refSetScrollTimeout.current);\n          }\n          if (timeoutNumber <= 0) {\n            setScrollTop(scrollTop);\n            return;\n          } else {\n            refSetScrollTimeout.current = setTimeout(() => {\n              setScrollTop(scrollTop);\n            }, timeoutNumber) as unknown as number;\n          }\n        }\n      );\n\n      useLayoutEffect(() => {\n        if (isLoadMore) {\n          delayToSetScroll(refScrollNow.current + 2);\n        }\n      }, [isLoadMore]);\n\n      useImperativeHandle(\n        ref,\n        () => ({\n          scrollToBottom: () => {\n            logger.debug(\"ScrollView, scrollToBottom\", { scrollTop });\n            if (scrollTop !== 1) {\n              delayToSetScroll(1);\n            } else {\n              delayToSetScroll(2);\n            }\n          },\n          scrollToAnchorBottom: () => {\n            // 如果重复设置0的话，不会生效，因此如果是0的时候，需要先设置1，然后再设置锚定位置0\n            logger.debug(\"ScrollView, scrollToAnchorBottom\", { scrollTop });\n            if (scrollTop !== 0) {\n              delayToSetScroll(0);\n            } else {\n              delayToSetScroll(1);\n              // 先设置1居于底部，然后设置为0， 锚定在底部\n              // 由于scrollTop为0，如果直接设置为0，不能出发锚定。\n              delayToSetScroll(0, 200);\n            }\n          },\n          removeAnchorBottom: () => {\n            logger.debug(\"ScrollView, removeAnchorBottom\", {\n              currentTop: refScrollNow.current,\n              scrollTop,\n            });\n            if (refScrollNow.current === 0 && scrollTop === 0) {\n              // 防止内容未渲染完成，改处已经制定了修改，导致新内容未能锚定底部，预防措施\n              delayToSetScroll(1, 50);\n            }\n          },\n        }),\n        [scrollTop]\n      );\n      const chatScrollContent = useMemo(() => {\n        // 防止  scrollView 重新渲染，导致重新设置scrollTop。\n        return <View className={cls(styles.children)}>{children}</View>;\n      }, [children]);\n      logger.debug(\"ScrollView, render\", {\n        currentTop: refScrollNow.current,\n        scrollTop,\n      });\n      return (\n        <TaroScrollViewMemo\n          {...restProps}\n          id={id}\n          scrollTop={scrollTop}\n          ref={onInitScrollRefForWheel}\n          reverse={false}\n          showScrollbar={false}\n          enhanced={true}\n          className={styles.scroll}\n          onScroll={onScrollHandle}\n        >\n          {chatScrollContent}\n        </TaroScrollViewMemo>\n      );\n    }\n  )\n);\n\nexport const ScrollView = forwardRef(\n  (\n    {\n      className,\n      isNeedHelper,\n      children,\n      ...restProps\n    }: ScrollViewType & {\n      isNeedHelper?: boolean;\n    },\n    ref: ForwardedRef<ScrollViewRef>\n  ) => {\n    const { arrowDownVisible, checkArrowDownVisible, setArrowDownVisible } =\n      useHelperButton(isNeedHelper);\n    const refScroll = useRef<ScrollViewRef>(null);\n\n    useImperativeHandle(\n      ref,\n      () => ({\n        scrollToBottom: () => {\n          refScroll.current?.scrollToBottom();\n        },\n        scrollToAnchorBottom: () => {\n          refScroll.current?.scrollToAnchorBottom();\n        },\n        removeAnchorBottom: () => {\n          refScroll.current?.removeAnchorBottom();\n        },\n      }),\n      []\n    );\n    logger.debug(\"ScrollView, arrowDownVisible\", arrowDownVisible);\n    return (\n      <View className={cls(styles.container, className)}>\n        <ScrollViewSlot\n          {...restProps}\n          checkArrowDownVisible={checkArrowDownVisible}\n          ref={refScroll}\n        >\n          {children}\n        </ScrollViewSlot>\n        <IconButton\n          type=\"circle-btn\"\n          size=\"large\"\n          className={cls(styles[\"arrow-down\"], {\n            [styles[\"arrow-down--show\"]]: arrowDownVisible,\n          })}\n          onClick={() => {\n            logger.debug(\n              \"ScrollView, arrowDownVisible, onClick\",\n              refScroll.current\n            );\n            if (refScroll.current) {\n              refScroll?.current?.scrollToBottom();\n              setArrowDownVisible(false);\n            }\n          }}\n        >\n          <SvgArrowUp />\n        </IconButton>\n      </View>\n    );\n  }\n);\n","import { useCallback, useState } from \"react\";\n\nexport const useHelperButton = (isShowHelper?: boolean) => {\n  const [arrowDownVisible, setArrowDownVisible] = useState(false);\n\n  const checkArrowDownVisible = useCallback(\n    (scrollTop: number) => {\n      if (!isShowHelper) {\n        return;\n      }\n      if (scrollTop > 500) {\n        setArrowDownVisible(true);\n      } else {\n        setArrowDownVisible(false);\n      }\n    },\n    [isShowHelper]\n  );\n  return {\n    arrowDownVisible,\n    setArrowDownVisible,\n    checkArrowDownVisible,\n  };\n};\n","import { useCallback, useEffect, useRef } from \"react\";\nimport { isWeb } from \"@/libs/utils\";\n\n// Scroll的处理，导致Web上滚轮的方向是反的，因此需要处理\nexport const useWheelHandle = () => {\n  const refScroll = useRef<HTMLDivElement | null>(null);\n  const onWheelHandle = useCallback((event: WheelEvent) => {\n    event.preventDefault();\n    const deltaY = event.deltaY;\n    refScroll.current?.scrollBy(0, -deltaY);\n  }, []);\n  const onInitScrollRefForWheel = useCallback((el) => {\n    if (isWeb) {\n      if (refScroll.current) {\n        refScroll.current.removeEventListener(\"wheel\", onWheelHandle);\n      }\n      if (el) {\n        refScroll.current = el as HTMLDivElement;\n        refScroll.current.addEventListener(\"wheel\", onWheelHandle);\n      }\n    }\n  }, []);\n  useEffect(() => {\n    return () => {\n      if (isWeb) {\n        refScroll.current?.removeEventListener(\"wheel\", onWheelHandle);\n      }\n    };\n  }, []);\n  return { onInitScrollRefForWheel };\n};\n","import { PropsWithChildren } from \"react\";\n\nimport cls from \"classnames\";\nimport { View, ViewProps } from \"@tarojs/components\";\n\nimport styles from \"./index.module.less\";\n\ninterface SpacingProps {\n  className?: string;\n  gap?: number;\n  flex1?: boolean;\n  horizontalCenter?: boolean;\n  verticalCenter?: boolean;\n  vertical?: boolean;\n  width100?: boolean;\n  height100?: boolean;\n  style?: React.CSSProperties;\n  onClick?: (event: Event) => void;\n}\nexport const Spacing = ({\n  className,\n  children,\n  gap,\n  vertical,\n  flex1,\n  horizontalCenter,\n  verticalCenter,\n  onClick,\n  width100,\n  height100,\n  style,\n  ...rest\n}: PropsWithChildren<SpacingProps & Omit<ViewProps, \"ref\" | \"style\">>) => (\n  <View\n    {...rest}\n    className={cls(\n      styles.spacing,\n      {\n        [styles[\"horizontal-center\"]]: horizontalCenter,\n      },\n      className\n    )}\n    style={{\n      gap,\n      flexDirection: vertical ? \"column\" : \"row\",\n      justifyContent: horizontalCenter ? \"center\" : undefined,\n      alignItems: verticalCenter ? \"center\" : undefined,\n      flex: flex1 ? 1 : undefined,\n      width: width100 ? \"100%\" : undefined,\n      height: height100 ? \"100%\" : undefined,\n      ...style,\n    }}\n    onClick={onClick}\n  >\n    {children}\n  </View>\n);\n","import { FC } from 'react';\n\nimport cls from 'classnames';\nimport { View, Text } from '@tarojs/components';\n\nimport { SvgLoading } from '../svg';\n\nimport styles from './index.module.less';\n\nexport const Spinning: FC<{\n  className?: string;\n  text?: string;\n  textClassName?: string;\n  svgClassName?: string;\n  size?: 'large' | 'medium' | 'small';\n}> = ({ className, text, textClassName, svgClassName, size }) => (\n  <View\n    className={cls(styles.container, className, {\n      [styles[size || 'medium']]: true,\n    })}\n  >\n    <SvgLoading className={cls(styles.svg, svgClassName)} />\n    {text ? (\n      <Text className={cls(styles.text, textClassName)}>{text}</Text>\n    ) : null}\n  </View>\n);\n","import { useMemo } from \"react\";\nimport { type SvgProps, type SvgStyles } from \"../type\";\nimport { getSvgBase64 } from \"@/libs/utils\";\n\nconst svgStyleMap: Record<string, SvgStyles> = {\n  dark: {\n    fill: \"#060709\",\n    fillOpacity: \"0.8\",\n  },\n  light: {\n    fill: \"#FFF\",\n    fillOpacity: \"1.0\",\n  },\n};\nconst getSvgRaw = (color: SvgStyles) => {\n  return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n<path d=\"M7.50033 1.66667V5L3.33366 5C2.41318 5 1.66699 5.74619 1.66699 6.66667V17.5C1.66699 18.4205 2.41318 19.1667 3.33366 19.1667H16.667C17.5875 19.1667 18.3337 18.4205 18.3337 17.5V6.66667C18.3337 5.74619 17.5875 5 16.667 5L12.5003 5V1.66667C12.5003 0.746192 11.7541 0 10.8337 0H9.16699C8.24652 0 7.50033 0.746192 7.50033 1.66667ZM10.8337 1.66667V6.66667H16.667V10H3.33366V6.66667H9.16699V1.66667H10.8337ZM3.33366 11.6667H16.667V17.5H7.50033V15C7.50033 14.5398 7.12723 14.1667 6.66699 14.1667C6.20676 14.1667 5.83366 14.5398 5.83366 15V17.5H3.33366L3.33366 11.6667Z\"  fill=\"${color.fill}\" fill-opacity=\"${color.fillOpacity}\"/>\n</svg>`;\n};\n\nexport const useBroomSvg = (props: SvgProps) => {\n  const color = props.theme === \"light\" ? svgStyleMap.light : svgStyleMap.dark;\n  const svgData = useMemo(() => {\n    return getSvgBase64(getSvgRaw(color));\n  }, [color]);\n  return svgData;\n};\n","import { useMemo } from \"react\";\nimport { type SvgProps, type SvgStyles } from \"../type\";\nimport { getSvgBase64 } from \"@/libs/utils\";\n\nconst svgStyleMap: Record<string, SvgStyles> = {\n  dark: {\n    fill: \"#202945\",\n    fillOpacity: \"0.62\",\n  },\n  light: {\n    fill: \"#FFF\",\n    fillOpacity: \"1.0\",\n  },\n  \"gray-bold\": {\n    fill: \"#1C1D23\",\n    fillOpacity: \"1\",\n  },\n};\nconst getSvgRaw = (color: SvgStyles) => {\n  return `<svg class=\"icon-icon icon-icon-coz_copy !coz-fg-images-white w-[14px] h-[14px]\" width=\"1em\" height=\"1em\" viewBox=\"0 0 24 24\" fill=\"${color.fill}\" fill-opacity=\"${color.fillOpacity}\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M9 3C9 2.44772 9.44772 2 10 2H20C20.5523 2 21 2.44772 21 3V15C21 15.5523 20.5523 16 20 16C19.4477 16 19 15.5523 19 15V4H10C9.44771 4 9 3.55228 9 3Z\"></path><path d=\"M5 6C3.89543 6 3 6.89543 3 8V20C3 21.1046 3.89543 22 5 22H15C16.1046 22 17 21.1046 17 20V8C17 6.89543 16.1046 6 15 6H5ZM5 8H15V20H5L5 8Z\"></path></svg>`;\n};\n\nexport const useCopySvg = (props: SvgProps) => {\n  const color = (props.theme && svgStyleMap[props.theme]) || svgStyleMap.dark;\n\n  const svgData = useMemo(() => {\n    return getSvgBase64(getSvgRaw(color));\n  }, [color]);\n  return svgData;\n};\n","import { useMemo } from \"react\";\nimport { type SvgProps, type SvgStyles } from \"../type\";\nimport { getSvgBase64 } from \"@/libs/utils\";\n\nconst svgStyleMap: Record<string, SvgStyles> = {\n  dark: { fill: \"rgba(78, 64, 229, 1)\", fillOpacity: \"1.0\" },\n  light: {\n    fill: \"#060709\",\n    fillOpacity: \"0.5\",\n  },\n};\nconst getSvgRaw = (color: SvgStyles) => {\n  return `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 20 20\" fill=\"none\">\n<path d=\"M17.8466 11.0966C18.2468 10.8785 18.4972 10.4593 18.4972 10.0003C18.4972 9.54132 18.2468 9.12405 17.8466 8.90593L3.33322 1.04799C2.9463 0.837464 2.4892 0.846947 2.10987 1.07265C1.73053 1.29836 1.50293 1.69856 1.50293 2.14238L3.10421 8.39673L9.91228 9.39337C10.3025 9.39337 10.6178 9.66459 10.6178 10.0003C10.6178 10.336 10.3025 10.6072 9.91228 10.6072C6.07554 11.1697 3.80709 11.4996 3.10692 11.5971L1.50293 17.8582C1.50293 18.3021 1.73053 18.7023 2.10987 18.9299C2.4892 19.1556 2.9463 19.1651 3.33322 18.9545L17.8466 11.0966Z\" fill=\"${color.fill}\" fill-opacity=\"${color.fillOpacity}\"/>\n</svg>\n`;\n};\n\nexport const useFeishuSvg = (props: SvgProps) => {\n  const color = props.theme === \"light\" ? svgStyleMap.light : svgStyleMap.dark;\n  const svgData = useMemo(() => {\n    return getSvgBase64(getSvgRaw(color));\n  }, [color]);\n  return svgData;\n};\n","import { FC } from \"react\";\n\nimport cls from \"classnames\";\nimport { Image } from \"@tarojs/components\";\nimport type { SvgProps } from \"./type\";\nimport { FileTypeEnum } from \"@/libs/types\";\n\nimport SvgWarnRaw from \"../../assets/svg/warn.svg\";\nimport SvgPlusRaw from \"../../assets/svg/plus.svg\";\nimport SvgLoadingRaw from \"../../assets/svg/loading.svg\";\nimport SvgImageRaw from \"../../assets/svg/image.svg\";\nimport SvgFileZipRaw from \"../../assets/svg/file-type/zip.svg\";\nimport SvgFileXlsxRaw from \"../../assets/svg/file-type/xlsx.svg\";\nimport SvgFileVideoRaw from \"../../assets/svg/file-type/video.svg\";\nimport SvgFileTxtRaw from \"../../assets/svg/file-type/txt.svg\";\nimport SvgFilePptxRaw from \"../../assets/svg/file-type/pptx.svg\";\nimport SvgFilePdfRaw from \"../../assets/svg/file-type/pdf.svg\";\nimport SvgFileOtherRaw from \"../../assets/svg/file-type/other.svg\";\nimport SvgFileDocxRaw from \"../../assets/svg/file-type/docx.svg\";\nimport SvgFileCsxRaw from \"../../assets/svg/file-type/csv.svg\";\nimport SvgFileCodeRaw from \"../../assets/svg/file-type/code.svg\";\nimport SvgFileAudioRaw from \"../../assets/svg/file-type/audio.svg\";\nimport SvgCameraRaw from \"../../assets/svg/camera.svg\";\nimport SvgErrorRaw from \"../../assets/svg/error.svg\";\nimport SvgCloseRaw from \"../../assets/svg/close.svg\";\nimport SvgErrorFillRaw from \"../../assets/svg/error-fill.svg\";\nimport SvgSuccessFillRaw from \"../../assets/svg/success-fill.svg\";\nimport SvgCheckMarkRaw from \"../../assets/svg/check-mark.svg\";\nimport SvgArrowUpRaw from \"../../assets/svg/arrow-up.svg\";\nimport SvgKeyboardRaw from \"../../assets/imgs/keyboard.png\";\nimport SvgMicrophoneRaw from \"../../assets/svg/microphone.svg\";\nimport SvgInfoRaw from \"../../assets/svg/info.svg\";\nimport SvgCancelRaw from \"../../assets/imgs/cancel.png\";\nimport SvgAudioArrowUpRaw from \"../../assets/imgs/arrow-up.png\";\n\nimport SvgConversationRaw from \"../../assets/svg/conversation.svg\";\n\nimport { useBroomSvg } from \"./hooks/use-broom-svg\";\nimport { useCopySvg } from \"./hooks/use-copy.svg\";\nimport { useFeishuSvg } from \"./hooks/use-feishu-svg\";\nimport styles from \"./index.module.less\";\n\nexport const Svg: FC<SvgProps> = ({ src, className, ...rest }) => (\n  <Image {...rest} src={src} svg className={cls(styles.svg, className)} />\n);\n\nexport const SvgLoading = (props) => <Svg {...props} src={SvgLoadingRaw} />;\nexport const SvgBroom = (props) => {\n  const svgRaw = useBroomSvg(props);\n  return <Svg {...props} src={svgRaw} />;\n};\nexport const SvgConversation = (props) => (\n  <Svg {...props} src={SvgConversationRaw} />\n);\n\nexport const SvgFeishu = (props) => {\n  const svgRaw = useFeishuSvg(props);\n  return <Svg {...props} src={svgRaw} />;\n};\n\nexport const SvgPlusCircle = ({ className, ...props }) => (\n  <Svg {...props} src={SvgPlusRaw} className={cls(styles.circle, className)} />\n);\n\nexport const SvgImage = (props) => <Svg {...props} src={SvgImageRaw} />;\nexport const SvgCamera = (props) => <Svg {...props} src={SvgCameraRaw} />;\nexport const SvgWarn = (props) => <Svg {...props} src={SvgWarnRaw} />;\n\nexport const SvgError = (props) => <Svg {...props} src={SvgErrorRaw} />;\nexport const SvgClose = (props) => <Svg {...props} src={SvgCloseRaw} />;\n\nexport const SvgErrorFill = (props) => <Svg {...props} src={SvgErrorFillRaw} />;\nexport const SvgSuccessFill = (props) => (\n  <Svg {...props} src={SvgSuccessFillRaw} />\n);\nexport const SvgCheckMark = (props) => <Svg {...props} src={SvgCheckMarkRaw} />;\nexport const SvgArrowUp = (props) => <Svg {...props} src={SvgArrowUpRaw} />;\nexport const SvgInfo = (props) => <Svg {...props} src={SvgInfoRaw} />;\n\nexport const SvgKeyboard = (props) => <Svg {...props} src={SvgKeyboardRaw} />;\nexport const SvgMicrophone = (props) => (\n  <Svg {...props} src={SvgMicrophoneRaw} />\n);\nexport const SvgCopy = (props) => {\n  const svgRaw = useCopySvg(props);\n  return <Svg {...props} src={svgRaw} />;\n};\n\nexport const SvgAudioArrowUp = (props) => (\n  <Svg {...props} src={SvgAudioArrowUpRaw} />\n);\nexport const SvgCancel = (props) => <Svg {...props} src={SvgCancelRaw} />;\n\nconst FILE_SVG_MAP = {\n  [FileTypeEnum.AUDIO]: SvgFileAudioRaw,\n  [FileTypeEnum.VIDEO]: SvgFileVideoRaw,\n  [FileTypeEnum.ZIP]: SvgFileZipRaw,\n  [FileTypeEnum.PDF]: SvgFilePdfRaw,\n  [FileTypeEnum.DOCX]: SvgFileDocxRaw,\n  [FileTypeEnum.EXCEL]: SvgFileXlsxRaw,\n  [FileTypeEnum.CSV]: SvgFileCsxRaw,\n  [FileTypeEnum.PPT]: SvgFilePptxRaw,\n  [FileTypeEnum.TXT]: SvgFileTxtRaw,\n  [FileTypeEnum.CODE]: SvgFileCodeRaw,\n  [FileTypeEnum.DEFAULT_UNKNOWN]: SvgFileOtherRaw,\n};\nexport const SvgFileType: FC<\n  Omit<SvgProps, \"src\"> & { type: FileTypeEnum }\n> = ({ type, ...rest }) => <Svg {...rest} src={FILE_SVG_MAP[type]} />;\n","import { View } from \"@tarojs/components\";\nimport { Spacing } from \"../spacing\";\nimport { SvgErrorFill, SvgClose, SvgSuccessFill } from \"../svg\";\nimport styles from \"./index.module.less\";\nimport { FC, PropsWithChildren } from \"react\";\nimport cls from \"classnames\";\n\nconst SvgMap = {\n  success: SvgSuccessFill,\n  error: SvgErrorFill,\n  none: null,\n};\nexport const Toast: FC<\n  PropsWithChildren<{\n    className?: string;\n    isNeedClose?: boolean;\n    icon?: \"success\" | \"error\" | \"none\";\n    onClose?: () => void;\n  }>\n> = ({ children, onClose, className, icon = \"none\", isNeedClose = true }) => {\n  const Icon = SvgMap[icon];\n  return (\n    <Spacing\n      verticalCenter\n      horizontalCenter\n      className={cls(\n        styles.container,\n        {\n          [styles[icon]]: icon,\n        },\n        className\n      )}\n      gap={12}\n    >\n      {Icon ? <Icon className={styles.icon} /> : null}\n      <View className={styles.content}>{children}</View>\n      {isNeedClose ? <SvgClose onClick={onClose} /> : null}\n    </Spacing>\n  );\n};\n","import { View } from \"@tarojs/components\";\nimport {\n  FC,\n  PropsWithChildren,\n  ReactNode,\n  useEffect,\n  useMemo,\n  useState,\n} from \"react\";\nimport cls from \"classnames\";\nimport styles from \"./index.module.less\";\nimport { isWeb } from \"@/libs/utils\";\nimport Taro from \"@tarojs/taro\";\nimport { UIEventType } from \"@/libs/types\";\n\nlet toolTipId = 1000;\nlet toolTipEvent = new Taro.Events();\nlet clickToolTipEvent = \"click_tooltip\";\nexport const Tooltip: FC<\n  PropsWithChildren<{\n    content?: ReactNode;\n    type?: \"hover\" | \"longtap\";\n    direction?: \"top\" | \"bottom\";\n    isActive?: boolean;\n  }>\n> = ({ children, content, type = \"hover\", isActive, direction = \"bottom\" }) => {\n  const [isShow, setIsShow] = useState(false);\n  const containerId = useMemo(() => `tooltip_${toolTipId++}`, []);\n  useEffect(() => {\n    const onHideToolTip = () => {\n      setIsShow(false);\n    };\n    const onClickToolTipHandler = ({ id }) => {\n      if (id !== containerId) {\n        setIsShow(false);\n      }\n    };\n    if (isWeb) {\n      document.addEventListener(\"click\", onHideToolTip);\n    }\n\n    toolTipEvent.on(clickToolTipEvent, onClickToolTipHandler);\n    Taro.eventCenter.on(UIEventType.FrameClick, onHideToolTip);\n    return () => {\n      if (isWeb) {\n        document.removeEventListener(\"click\", onHideToolTip);\n      }\n      toolTipEvent.off(clickToolTipEvent, onClickToolTipHandler);\n      Taro.eventCenter.off(UIEventType.FrameClick, onHideToolTip);\n    };\n  }, []);\n  return (\n    <View\n      id={containerId}\n      className={cls(styles.tooltip, {\n        [styles.hover]: type === \"hover\" && isActive,\n        [styles.click]: type !== \"hover\" && isActive,\n        [styles[direction]]: !!styles[direction],\n      })}\n      onLongPress={() => {\n        if (isActive) {\n          setIsShow(true);\n          toolTipEvent.trigger(clickToolTipEvent, {\n            id: containerId,\n          });\n        }\n      }}\n      onClick={(event) => {\n        if (isActive) {\n          event.stopPropagation();\n          setIsShow(true);\n          toolTipEvent.trigger(clickToolTipEvent, {\n            id: containerId,\n          });\n        }\n      }}\n    >\n      {children}\n      {isActive ? (\n        <View\n          className={cls(styles.content, {\n            [styles.show]: isShow,\n          })}\n        >\n          {content}\n        </View>\n      ) : null}\n    </View>\n  );\n};\n","import { FC, PropsWithChildren, useRef, ChangeEvent } from \"react\";\nimport { ChooseFileInfo, FileTypeEnum } from \"@/libs/types\";\nimport { getFileTypeByFile, isWeb, logger, showToast } from \"@/libs/utils\";\nimport styles from \"./index.module.less\";\nimport Taro, { TaroStatic } from \"@tarojs/taro\";\nimport { View } from \"@tarojs/components\";\n\nexport const Upload: FC<\n  PropsWithChildren<{\n    onChooseFile?: (file: ChooseFileInfo[]) => void;\n    accept?: string;\n    frameEventTarget?: InstanceType<TaroStatic[\"Events\"]>;\n  }>\n> = ({ children, accept, onChooseFile, frameEventTarget }) => {\n  const ref = useRef<HTMLInputElement>(null);\n  const onWebInputFileChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const { files } = e.target;\n    if (onChooseFile) {\n      if (files && files.length > 0) {\n        const fileInfos: ChooseFileInfo[] = [];\n        for (let file of files) {\n          const fileType = getFileTypeByFile(file);\n          fileInfos.push({\n            from: \"H5_Input_Chooser\",\n            type: fileType,\n            size: file.size,\n            file,\n            tempFilePath: URL.createObjectURL(file),\n          });\n        }\n        onChooseFile?.(fileInfos);\n      } else {\n        // 没有选中文件\n      }\n    }\n    e.target.value = \"\";\n  };\n  return (\n    <View className={styles.container}>\n      {isWeb && (\n        <input\n          type=\"file\"\n          multiple={false}\n          accept={accept}\n          autoComplete=\"off\"\n          tabIndex={-1}\n          className={styles.input}\n          onChange={onWebInputFileChange}\n          ref={ref}\n        />\n      )}\n      <View\n        onClick={async () => {\n          if (isWeb) {\n            if (ref.current) {\n              ref.current?.click?.();\n            }\n          } else {\n            try {\n              Taro.chooseMedia({\n                count: 1,\n                mediaType: [\"image\"],\n                sizeType: [\"original\", \"compressed\"],\n                sourceType: [\"album\", \"camera\"],\n                success(res) {\n                  logger.debug(\"chooseMedia success:\", res);\n                  const fileInfos: ChooseFileInfo[] = res.tempFiles.map(\n                    (item) => ({\n                      from: \"Taro_Image_Chooser\",\n                      type:\n                        // @ts-expect-error -- linter-disable-autofix\n                        item.fileType === \"image\" || item.mediaType === \"image\"\n                          ? FileTypeEnum.IMAGE\n                          : FileTypeEnum.VIDEO,\n                      size: item.size,\n                      tempFilePath: item.tempFilePath,\n                      file: {\n                        filePath: item.tempFilePath,\n                      },\n                    })\n                  );\n                  onChooseFile?.(fileInfos);\n                },\n                fail(res) {\n                  logger.error(\"chooseMedia fail:\", res);\n                  if (res.errMsg.includes(\"cancel\")) {\n                    return;\n                  } else {\n                    showToast(\n                      {\n                        content: `选择文件失败: ${res.errMsg}`,\n                        icon: \"error\",\n                      },\n                      frameEventTarget\n                    );\n                  }\n                },\n              });\n            } catch (error) {\n              logger.error(\"chooseMedia error:\", error);\n            }\n          }\n        }}\n      >\n        {children}\n      </View>\n    </View>\n  );\n};\n","import { View } from '@tarojs/components';\n\nimport styles from './index.module.less';\n\nexport const Waiting = () => <View className={styles.container} />;\n","import { FC, useCallback, useEffect, useRef, useState } from \"react\";\n\nimport {\n  AudioInput as AtomicAudioInput,\n  InputTriggerType,\n} from \"../../atomic/audio-input\";\nimport styles from \"./index.module.less\";\nimport { View, Text } from \"@tarojs/components\";\nimport cls from \"classnames\";\nimport { AudioWave } from \"../../atomic/audio-wave\";\nimport { type AudioRaw } from \"@/libs/types\";\nimport {\n  getRecorderManager,\n  BaseRecorderManager,\n  RecorderEvent,\n  logger,\n  showToast,\n  PlayAudio,\n  MiniChatError,\n  MiniChatErrorCode,\n  showModal,\n} from \"@/libs/utils\";\nimport Taro, { TaroStatic } from \"@tarojs/taro\";\nimport { useUpdateEffect } from \"@/libs/hooks\";\nimport { PermissionDeny } from \"./permission-deny\";\nimport { useI18n } from \"@/libs/provider\";\nimport { Spacing } from \"../../atomic/spacing\";\nimport { SvgCancel } from \"../../atomic/svg\";\n\nconst maxTime = 50;\n\nconst AudioTips: FC<{\n  isTouching?: boolean;\n  isOutside?: boolean;\n  leftDuration?: number;\n  triggerType?: InputTriggerType;\n}> = ({ isTouching, isOutside, leftDuration, triggerType }) => {\n  const i18n = useI18n();\n  let text = \"\";\n  let tipType: \"touching-tips\" | \"outside-tips\" | \"time-limit-tips\" =\n    \"touching-tips\";\n  if (isTouching) {\n    tipType = \"touching-tips\";\n    if (triggerType === \"keyboard\") {\n      text = i18n.t(\"audioInputTooltipSend\");\n    } else {\n      text = i18n.t(\"audioInputTooltipTouching\");\n    }\n  }\n  if (leftDuration && leftDuration <= 10) {\n    tipType = \"time-limit-tips\";\n    text = i18n.t(\"audioInputTooltipTick\", {\n      duration: (\n        <Text className={styles[\"left-duration\"]}>{leftDuration} ˝</Text>\n      ),\n    }); //`${leftDuration}˝ 后自动结束录制并发送`;\n  }\n  if (isTouching && isOutside) {\n    tipType = \"outside-tips\";\n    text = i18n.t(\"audioInputTooltipCancel\");\n  }\n  if (!text) {\n    return null;\n  }\n  return (\n    <Spacing\n      verticalCenter\n      horizontalCenter\n      gap={4}\n      className={cls(styles[\"tips-container\"], { [styles[tipType]]: true })}\n    >\n      {tipType === \"outside-tips\" ? <SvgCancel /> : null}\n      <Text\n        className={styles[\"tips-text\"]}\n        overflow=\"ellipsis\"\n        numberOfLines={1}\n        maxLines={1}\n      >\n        {text}\n      </Text>\n    </Spacing>\n  );\n};\n\nexport const AudioInput: FC<{\n  onSendAudioMessage?: (AudioRaw) => void;\n  type?: \"default\" | \"primary\";\n  frameEventTarget?: InstanceType<TaroStatic[\"Events\"]>;\n  isPcMode?: boolean;\n  disabled?: boolean;\n  focused?: boolean;\n  onAudioRecording?: (isRecording: boolean) => void;\n}> = ({\n  onSendAudioMessage,\n  type = \"primary\",\n  frameEventTarget,\n  isPcMode,\n  disabled,\n  focused,\n  onAudioRecording,\n}) => {\n  const [isTouching, setIsTouching] = useState(false);\n  const [isOutside, setIsOutSide] = useState(false);\n  const refIsOutSide = useRef(false);\n  const refRecorderManager = useRef<BaseRecorderManager>();\n  const [triggerType, setTriggerType] = useState<InputTriggerType>();\n  const [volume, setVolume] = useState(0);\n  const [leftDuration, setLeftDuration] = useState(50);\n  const refStop = useRef<() => void>();\n  const i18n = useI18n();\n  refIsOutSide.current = isOutside;\n  logger.debug(\"AudioInput start\", refIsOutSide.current);\n  useUpdateEffect(() => {\n    onAudioRecording?.(isTouching);\n  }, [isTouching]);\n  const onTouching = useCallback((triggerType?: InputTriggerType) => {\n    setTriggerType(triggerType);\n    setIsTouching(true);\n    if (refRecorderManager.current) {\n      refRecorderManager.current.destroy();\n    }\n    //暂停当前播放的内容\n    PlayAudio.stopNow();\n\n    let isInterrupted = false;\n    refRecorderManager.current = getRecorderManager();\n\n    logger.debug(\"onMouseDown onTouching\");\n    refStop.current = () => {\n      clearTimeout(timeout);\n      if (refIsOutSide.current) {\n        isInterrupted = true;\n      }\n      setIsTouching(false);\n      setIsOutSide(false);\n    };\n    refRecorderManager.current.on(RecorderEvent.STOP, (res) => {\n      logger.debug(\"AudioInput stop triggered\", res, refIsOutSide.current);\n      if (!isInterrupted && !refIsOutSide.current && res.duration) {\n        if (res.duration < 1000) {\n          showToast(\n            {\n              content: i18n.t(\"audioInputErrorUnDetectContent\"),\n              icon: \"error\",\n            },\n            frameEventTarget\n          );\n        } else {\n          onSendAudioMessage?.(res);\n        }\n      }\n      refStop.current?.();\n      refRecorderManager.current?.destroy();\n    });\n    /**\n     * 暂停、打断都是异常操作，直接停止。\n     */\n    refRecorderManager.current.on(RecorderEvent.PAUSE, () => {\n      isInterrupted = true;\n      refRecorderManager.current?.stop();\n      setVolume(0);\n    });\n    refRecorderManager.current.on(RecorderEvent.INTERRUPT, () => {\n      isInterrupted = true;\n      refRecorderManager.current?.stop();\n    });\n    refRecorderManager.current.on(RecorderEvent.ERROR, (res: MiniChatError) => {\n      isInterrupted = true;\n      logger.error(\"AudioInput onError\", res, res.code);\n\n      if (res.code === MiniChatErrorCode.Audio_Permission_Denied) {\n        showModal(\n          {\n            isNeedMask: true,\n            renderModal: (hideModal) => {\n              return <PermissionDeny hideModal={hideModal} />;\n            },\n          },\n          frameEventTarget\n        );\n      } else {\n        showToast(\n          {\n            content: i18n.t(\"audioInputErrorRecord\"),\n            icon: \"error\",\n          },\n          frameEventTarget\n        );\n      }\n      refStop.current?.();\n      refRecorderManager.current?.destroy();\n    });\n    refRecorderManager.current.on(RecorderEvent.VOLUME, (res) => {\n      logger.debug(\"AudioInput_volume\", res);\n      setVolume(res.volume);\n    });\n\n    logger.debug(\"AudioInput register Event End\");\n\n    refRecorderManager.current.start({\n      numberOfChannels: 1,\n    });\n    const startTime = Date.now();\n    let hasVibrate = false;\n    let timeout: number = 0;\n    function tickDuration() {\n      timeout = setTimeout(() => {\n        const duration = Math.ceil((Date.now() - startTime) / 1000);\n        logger.debug(\"AudioInput duration\", duration);\n        if (duration > maxTime - 10) {\n          setLeftDuration(maxTime - duration);\n          if (duration >= maxTime) {\n            refRecorderManager.current?.stop();\n            refStop.current?.();\n            return;\n          }\n          if (!hasVibrate) {\n            try {\n              Taro.vibrateLong();\n            } catch (e) {\n              logger.error(\"AudioInput vibrateLong error\", e);\n            }\n            hasVibrate = true;\n          }\n        }\n        tickDuration();\n      }, 500) as unknown as number;\n    }\n    tickDuration();\n\n    setLeftDuration(maxTime);\n    setIsTouching(true);\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      refRecorderManager.current?.destroy();\n    };\n  }, []);\n\n  const audioWaveType =\n    type === \"default\" ? \"default\" : isOutside ? \"warning\" : \"primary\";\n  const realFocused = focused || !isPcMode;\n  const buttonText = disabled\n    ? i18n.t(\"audioInputDisabledText\")\n    : realFocused\n    ? isPcMode\n      ? i18n.t(\"audioInputPcText\")\n      : i18n.t(\"audioInputMobileText\")\n    : isPcMode\n    ? i18n.t(\"unFocusInputText\")\n    : i18n.t(\"audioInputMobileText\");\n  return (\n    <View\n      className={cls(styles.container, {\n        [styles.touching]: isTouching && !disabled,\n        [styles.outside]: isOutside && !disabled,\n        [styles[type]]: true,\n        [styles.focused]: realFocused && !disabled,\n      })}\n    >\n      <AudioTips\n        isTouching={isTouching}\n        isOutside={isOutside}\n        leftDuration={leftDuration}\n        triggerType={triggerType}\n      />\n      <AtomicAudioInput\n        onTouching={onTouching}\n        onOutside={(isOutside) => {\n          logger.debug(\"AudioInput OutSide touch\", isOutside);\n          setIsOutSide(isOutside);\n        }}\n        onEnd={() => {\n          logger.debug(\"AudioInput recording onEnd\");\n          refRecorderManager.current?.stop();\n          refStop.current?.();\n        }}\n        frameEventTarget={frameEventTarget}\n        isPcMode={isPcMode}\n        className={styles.audio}\n        disabled={disabled}\n      >\n        <Text\n          overflow=\"ellipsis\"\n          numberOfLines={1}\n          maxLines={1}\n          userSelect={false}\n          className={styles.text}\n        >\n          {buttonText}\n        </Text>\n        {isTouching ? (\n          <AudioWave\n            type={audioWaveType}\n            size=\"medium\"\n            volumeNumber={volume * 5}\n            className={styles.wave}\n          />\n        ) : null}\n      </AtomicAudioInput>\n    </View>\n  );\n};\n","import { Image, Text, View } from \"@tarojs/components\";\nimport { Button } from \"../../../atomic/button\";\nimport styles from \"./index.module.less\";\nimport { FC } from \"react\";\nimport { Spacing } from \"@/libs/ui-kit/atomic/spacing\";\nimport { SvgInfo } from \"@/libs/ui-kit/atomic/svg\";\nimport { useChatPropsStore, useI18n } from \"@/libs/provider\";\nimport { getCdnUrl } from \"@/libs/utils\";\nexport const PermissionDeny: FC<{\n  hideModal: () => void;\n}> = ({ hideModal }) => {\n  const i18n = useI18n();\n  const cdnBaseUrlPath = useChatPropsStore(\n    (store) => store.setting?.cdnBaseUrlPath\n  );\n  return (\n    <View className={styles.container}>\n      <Spacing gap={4} verticalCenter>\n        <Text className={styles.title}>{i18n.t(\"permissionMkfTitle\")}</Text>\n        <SvgInfo />\n      </Spacing>\n      <Text className={styles.desc}>{i18n.t(\"permissionMkfDesc\")}</Text>\n      <Image\n        preview=\"false\"\n        mode=\"widthFix\"\n        className={styles.img}\n        src={getCdnUrl(cdnBaseUrlPath, \"assets/imgs/mkf-deny.png\")}\n      />\n      <View className={styles[\"btn-container\"]}>\n        <Button onClick={hideModal} className={styles.btn}>\n          {i18n.t(\"permissionMkfBtnIKnown\")}\n        </Button>\n      </View>\n    </View>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { type IChatInputProps, InputType } from \"../type\";\nimport { usePersistCallback } from \"@/libs/hooks\";\nimport { logger, isWeb } from \"@/libs/utils\";\nimport { UIEventType } from \"@/libs/types\";\n\ninterface IMultiModalMessageOptions {\n  inputType: InputType;\n}\n\nexport const useAudioMessageHandle = (\n  chatInputProps: IChatInputProps,\n  options: IMultiModalMessageOptions\n) => {\n  const { onAudioRecording, frameEventTarget } = chatInputProps;\n  const { inputType } = options;\n  const [isAudioInputFocusing, setIsAudioInputFocusing] = useState(false);\n  const isRealAudioInputFocusing =\n    inputType === InputType.Voice && isAudioInputFocusing;\n\n  const [isRecording, setIsRecording] = useState(false);\n  const onRecording = usePersistCallback((isRecording: boolean) => {\n    setIsRecording(isRecording);\n    onAudioRecording?.(isRecording);\n  });\n\n  useEffect(() => {\n    logger.debug(\"useAudioMessageHandle listen focus and blur\", {\n      isWeb,\n      frameEventTarget,\n    });\n    if (isWeb && frameEventTarget) {\n      const onFocus = () => {\n        logger.debug(\"useAudioMessageHandle focus in\");\n        setIsAudioInputFocusing(true);\n      };\n      const onBlur = () => {\n        logger.debug(\"useAudioMessageHandle blur in\");\n        setIsAudioInputFocusing(false);\n      };\n\n      frameEventTarget.on(UIEventType.FrameFocus, onFocus);\n      frameEventTarget.on(UIEventType.FrameBlur, onBlur);\n      frameEventTarget.trigger(UIEventType.TriggerFocus);\n\n      return () => {\n        frameEventTarget.off(UIEventType.FrameFocus, onFocus);\n        frameEventTarget.off(UIEventType.FrameBlur, onBlur);\n      };\n    }\n  }, []);\n  return {\n    isRecording,\n    isRealAudioInputFocusing,\n    onRecording,\n  };\n};\n","import Taro, { useDidHide } from \"@tarojs/taro\";\nimport { IChatInputProps } from \"../type\";\nimport { useEffect } from \"react\";\nimport { isWeapp } from \"@/libs/utils\";\nimport { usePersistCallback } from \"@/libs/hooks\";\n\nconst isSupportKeyBoardHeight = isWeapp;\n\nexport const useKeyboardHeightHandle = (chatInputProps: IChatInputProps) => {\n  const { onKeyBoardHeightChange } = chatInputProps;\n  const onKeyBoardHeightChangeHandle = usePersistCallback((height: number) => {\n    if (isSupportKeyBoardHeight) {\n      onKeyBoardHeightChange?.(height);\n    }\n  });\n  useDidHide(() => {\n    // 隐藏到后台的时候，默认键盘会收起，设置为0\n    onKeyBoardHeightChangeHandle?.(0);\n  });\n\n  useEffect(() => {\n    if (isSupportKeyBoardHeight) {\n      Taro?.onKeyboardHeightChange?.((res) => {\n        if (res.height === 0) {\n          onKeyBoardHeightChangeHandle?.(0);\n          return;\n        }\n        onKeyBoardHeightChangeHandle?.(res.height);\n      });\n    }\n  }, []);\n\n  return {\n    onKeyBoardHeightChange: onKeyBoardHeightChangeHandle,\n  };\n};\n","import { useMemo } from \"react\";\nimport { IChatInputProps, InputType } from \"../type\";\nimport { useUpdateEffect } from \"@/libs/hooks\";\n\ninterface IMultiModalMessageOptions {\n  isRecording: boolean;\n  inputType: InputType;\n  setInputType?: (inputType: InputType) => void;\n}\n\nconst useTaskMessage = (\n  chatInputProps: IChatInputProps,\n  options: IMultiModalMessageOptions\n) => {\n  let isShowTaskMessage = false;\n  const { inputType, setInputType, isRecording } = options;\n  const { taskList, isNeedTaskMessage = false } = chatInputProps;\n\n  const taskOptions = useMemo(() => {\n    const taskOptionTemp: string[] = [];\n    taskList?.map((item) => {\n      taskOptionTemp.push(...(item.taskValue || []));\n    });\n    return taskOptionTemp.filter((item) => !!item);\n  }, [taskList]);\n\n  // Task messages are only visible in text mode.\n  if (\n    taskOptions.length > 0 &&\n    inputType === InputType.Text &&\n    isNeedTaskMessage\n  ) {\n    isShowTaskMessage = true;\n  }\n\n  //Updates the type of the input box to text when the task list changes.(Except audio is recording)\n  useUpdateEffect(() => {\n    // 当taskList有变化的时候，判断是否需要修改inputType\n    if (!isRecording && inputType !== InputType.Text && isNeedTaskMessage) {\n      setInputType?.(InputType.Text);\n    }\n  }, [taskList]);\n\n  return {\n    isShowTaskMessage,\n    taskOptions,\n  };\n};\n\nexport const useMultiModeMessageHandle = (\n  chatInputProps: IChatInputProps,\n  options: IMultiModalMessageOptions\n) => {\n  const { isShowTaskMessage, taskOptions } = useTaskMessage(\n    chatInputProps,\n    options\n  );\n  const isShowMultiModeMessage = isShowTaskMessage; // We will continue to add more multi messages。\n\n  return {\n    taskMessage: {\n      isShow: isShowTaskMessage,\n      options: taskOptions,\n    },\n    isShowMultiModeMessage,\n  };\n};\n","import { useMemo, useState } from \"react\";\nimport { IChatInputProps, ITaskMessage } from \"../type\";\nimport { usePersistCallback, useUpdateEffect } from \"@/libs/hooks\";\nimport { isWeb, logger } from \"@/libs/utils\";\nimport { useI18n } from \"@/libs/provider\";\n\nexport const useTextInputHandle = (\n  chatInputProps: IChatInputProps,\n  options: {\n    inputId: string;\n    taskMessage?: ITaskMessage;\n  }\n) => {\n  const i18n = useI18n();\n  const {\n    defaultValue,\n    onSendTextMessage: onSendTextMessageOnly,\n    disabled,\n  } = chatInputProps;\n  const { inputId, taskMessage } = options;\n  const [focused, setFocused] = useState(false);\n  const [inputValue, setInputValue] = useState(defaultValue);\n  const toSendInputValue = useMemo(() => {\n    if (taskMessage?.isShow && taskMessage?.options?.length > 0) {\n      const taskMessageText = taskMessage?.options\n        .map((item) => {\n          return item.trim();\n        })\n        .join(\"; \");\n      return `${i18n.t(\"taskMessageMyChoice\")}${taskMessageText}\\n${\n        inputValue || \"\"\n      }`;\n    }\n    return inputValue;\n  }, [taskMessage, inputValue]);\n\n  const blurInput = usePersistCallback(() => {\n    setFocused(false);\n    if (isWeb) {\n      // Mobile browser cannot blur the input element, need to manually blur the input element\n      document.getElementById(inputId)?.querySelector(\"input\")?.blur();\n    }\n  });\n  const clearInput = usePersistCallback((isBlur: boolean) => {\n    setInputValue(\"\");\n    isBlur && blurInput();\n    // Fix taro onInput event.When the text is copied by clipboard， it must be clear twice.\n    setTimeout(() => {\n      setInputValue(\"\");\n\n      // When input value is set, the input will be focused on miniProgram\n      isBlur && blurInput();\n    }, 50);\n  });\n  useUpdateEffect(() => {\n    setInputValue(defaultValue);\n  }, [defaultValue]);\n\n  const onSendTextMessage = usePersistCallback(() => {\n    logger.debug(\"useTextInputHandle onSendTextMessage:\", {\n      inputValue,\n      toSendInputValue,\n      disabled,\n    });\n\n    if (toSendInputValue && !disabled) {\n      onSendTextMessageOnly?.(toSendInputValue);\n\n      clearInput(!isWeb);\n    }\n  });\n  return {\n    focused,\n    clearInput,\n    setFocused,\n\n    inputValue,\n    setInputValue,\n    toSendInputValue,\n    onSendTextMessage,\n  };\n};\n","import { FC, useState, useMemo } from \"react\";\n\nimport cls from \"classnames\";\nimport { Input, View } from \"@tarojs/components\";\n\nimport { Spacing } from \"../atomic/spacing\";\nimport { DisableContainer } from \"../atomic/disable-container\";\nimport { UploadBtn } from \"./upload-btn\";\n\nimport styles from \"./index.module.less\";\nimport { isWeb, logger } from \"@/libs/utils\";\nimport { AudioInput } from \"./audio-input\";\nimport { InputType, type IChatInputProps } from \"./type\";\nimport { SendSwitchBtn } from \"./send-switch-btn\";\nimport { TaskMessage } from \"./task-message/indext\";\nimport { useMultiModeMessageHandle } from \"./hooks/use-multi-mode-message-handle\";\nimport { useAudioMessageHandle } from \"./hooks/use-audio-message-handle\";\nimport { useKeyboardHeightHandle } from \"./hooks/use-keyborader-height-handle\";\nimport { useTextInputHandle } from \"./hooks/use-text-input-handle\";\nimport { CenterAlignedBox } from \"../atomic/center-aligned-box\";\n\nlet inputNo = 1000;\nexport const ChatInput: FC<IChatInputProps> = (props) => {\n  const {\n    isNeedUpload,\n    disabled = false,\n    inputAdjustDefault = true,\n    onSendFileMessage,\n    onSendAudioMessage,\n    isNeedAudio = false,\n    placeholder = \"Send Message\",\n    frameEventTarget,\n    isPcMode,\n    defaultInputType = InputType.Text,\n  } = props;\n  const inputId = useMemo(() => {\n    return `chat-input-${inputNo++}`;\n  }, []);\n  const [inputType, setInputType] = useState<InputType>(defaultInputType);\n\n  const { onRecording, isRecording, isRealAudioInputFocusing } =\n    useAudioMessageHandle(props, {\n      inputType,\n    });\n  const { taskMessage, isShowMultiModeMessage } = useMultiModeMessageHandle(\n    props,\n    {\n      inputType,\n      setInputType,\n      isRecording,\n    }\n  );\n  const {\n    inputValue,\n    setInputValue,\n    focused,\n    setFocused,\n    toSendInputValue,\n    onSendTextMessage,\n  } = useTextInputHandle(props, { inputId, taskMessage });\n  const { onKeyBoardHeightChange } = useKeyboardHeightHandle(props);\n\n  logger.debug(\"ChatInput focused\", {\n    focused,\n    inputType,\n  });\n  return (\n    <DisableContainer className={styles.container}>\n      <View\n        className={cls(styles[\"chat-input-container\"], {\n          [styles.focused]: focused || isRealAudioInputFocusing,\n          [styles[\"audio-recording\"]]: isRecording,\n          [styles[\"multi-mode-message\"]]: isShowMultiModeMessage,\n        })}\n      >\n        {isShowMultiModeMessage ? (\n          <>\n            <TaskMessage taskMessage={taskMessage} />\n          </>\n        ) : null}\n\n        <Spacing verticalCenter className={styles[\"chat-input-content\"]}>\n          {inputType === InputType.Voice ? (\n            <AudioInput\n              onSendAudioMessage={onSendAudioMessage}\n              type={isPcMode ? \"primary\" : \"default\"}\n              frameEventTarget={frameEventTarget}\n              isPcMode={isPcMode}\n              disabled={disabled}\n              focused={focused || isRealAudioInputFocusing}\n              onAudioRecording={onRecording}\n            />\n          ) : (\n            <CenterAlignedBox className={styles[\"input-container\"]}>\n              <Input\n                id={inputId}\n                focus={focused}\n                placeholder={placeholder}\n                className={styles.input}\n                maxlength={-1}\n                placeholderClass={styles.placeholder}\n                onConfirm={() => {\n                  onSendTextMessage();\n                }}\n                value={inputValue}\n                onInput={(event) => {\n                  logger.debug(\"ChatInput onInput:\", event);\n                  setInputValue(event.detail.value);\n                }}\n                onFocus={(event) => {\n                  onKeyBoardHeightChange?.(event.detail.height);\n                  setFocused(true);\n                }}\n                onBlur={() => {\n                  onKeyBoardHeightChange?.(0);\n                  logger.debug(\"ChatInput onBlur\");\n                  setFocused(false);\n                }}\n                adjustPosition={inputAdjustDefault}\n              />\n            </CenterAlignedBox>\n          )}\n          {isNeedUpload ? (\n            <>\n              <UploadBtn\n                onSendFileMessage={onSendFileMessage}\n                frameEventTarget={frameEventTarget}\n                disabled={disabled}\n              />\n              <View className={styles.divider} />\n            </>\n          ) : null}\n          <SendSwitchBtn\n            inputDisabled={disabled}\n            hasTextToSend={!!toSendInputValue}\n            inputType={inputType}\n            isNeedAudio={isNeedAudio}\n            focused={focused}\n            onSendBtnClick={() => {\n              onSendTextMessage();\n            }}\n            onKeyboardClick={() => {\n              setFocused(false);\n              setInputType(InputType.Text);\n              // 需要延迟才能 触发 focus效果\n              setTimeout(() => {\n                setFocused(true);\n                if (isWeb) {\n                  // web下无法获取焦点，需要手动添加焦点\n                  document\n                    .getElementById(inputId)\n                    ?.querySelector(\"input\")\n                    ?.focus();\n                }\n              }, 100);\n            }}\n            onMicrophoneClick={() => {\n              setInputType(InputType.Voice);\n              setFocused(false);\n            }}\n          />\n        </Spacing>\n      </View>\n    </DisableContainer>\n  );\n};\n","import { FC } from \"react\";\nimport { SvgFeishu } from \"@/libs/ui-kit/atomic/svg\";\nimport { DisableContainer } from \"@/libs/ui-kit/atomic/disable-container\";\n\nimport styles from \"./index.module.less\";\nimport { IconButton } from \"../../atomic/icon-button\";\n\nexport const SendBtn: FC<{\n  disabled?: boolean;\n  focused?: boolean;\n  onClick?: () => void;\n}> = ({ disabled, onClick }) => {\n  return (\n    <DisableContainer disabled={disabled}>\n      <IconButton\n        hoverTheme={\"hover\"}\n        onClick={onClick}\n        type=\"circle-btn\"\n        border=\"none\"\n      >\n        <SvgFeishu className={styles[\"send-btn\"]} theme={\"dark\"} />\n      </IconButton>\n    </DisableContainer>\n  );\n};\n","import { FC } from \"react\";\nimport { SvgKeyboard, SvgMicrophone } from \"@/libs/ui-kit/atomic/svg\";\n\nimport { InputType } from \"../type\";\nimport { SendBtn } from \"../send-btn\";\nimport styles from \"./index.module.less\";\nimport { logger } from \"@/libs/utils\";\nimport { IconButton } from \"../../atomic/icon-button\";\nexport const SendSwitchBtn: FC<{\n  inputType?: InputType;\n  inputValue?: string;\n  hasTextToSend?: boolean;\n  inputDisabled?: boolean;\n  isNeedAudio?: boolean;\n  focused?: boolean;\n  onSendBtnClick?: () => void;\n  onKeyboardClick?: () => void;\n  onMicrophoneClick?: () => void;\n}> = ({\n  inputDisabled,\n  onSendBtnClick,\n  hasTextToSend,\n  inputType,\n  isNeedAudio,\n  onKeyboardClick,\n  onMicrophoneClick,\n  focused,\n}) => {\n  logger.debug(\"SendSwitchBtn\", isNeedAudio);\n  const showKeyboard = isNeedAudio && inputType === InputType.Voice;\n  const showSendBtn =\n    !isNeedAudio || (inputType === InputType.Text && !!hasTextToSend);\n  const showMicrophone =\n    isNeedAudio && inputType === InputType.Text && !hasTextToSend;\n  return (\n    <>\n      {showKeyboard ? (\n        <IconButton\n          onClick={onKeyboardClick}\n          hoverTheme={\"hover\"}\n          type=\"circle-btn\"\n          border=\"none\"\n        >\n          <SvgKeyboard className={styles[\"keyboard-icon\"]} />\n        </IconButton>\n      ) : null}\n      {showMicrophone ? (\n        <IconButton\n          onClick={onMicrophoneClick}\n          hoverTheme={\"hover\"}\n          type=\"circle-btn\"\n          border=\"none\"\n        >\n          <SvgMicrophone className={styles[\"microphone-icon\"]} />\n        </IconButton>\n      ) : null}\n      {showSendBtn ? (\n        <SendBtn\n          disabled={inputDisabled || !hasTextToSend}\n          onClick={onSendBtnClick}\n          focused={focused}\n        />\n      ) : null}\n    </>\n  );\n};\n","import { Text, View } from \"@tarojs/components\";\n\nimport styles from \"./index.module.less\";\nimport { FC } from \"react\";\nimport { Dot } from \"../../atomic/dot\";\nimport { Spacing } from \"../../atomic/spacing\";\nimport { ITaskMessage } from \"../type\";\nimport { useI18n } from \"@/libs/provider\";\n\nexport const TaskMessage: FC<{\n  taskMessage?: ITaskMessage;\n}> = ({ taskMessage }) => {\n  const { isShow, options: taskOptions = [] } = taskMessage || {};\n  const i18n = useI18n();\n  if (!isShow) {\n    return null;\n  }\n  return (\n    <View className={styles[\"task-message-container\"]}>\n      <View className={styles[\"content\"]}>\n        <View>{i18n.t(\"taskMessageMyChoice\")}</View>\n        <View>\n          {taskOptions.map((item, index) => (\n            <Spacing key={index}>\n              <Dot boxHeight={20} boxWidth={20} />\n              <Text>{item}</Text>\n            </Spacing>\n          ))}\n        </View>\n      </View>\n    </View>\n  );\n};\n","import { TaroStatic } from \"@tarojs/taro\";\nimport {\n  type ChooseFileInfo,\n  type AudioRaw,\n  IOnTaskListChangeProps,\n} from \"@/libs/types\";\n\nexport enum InputType {\n  Text = \"text\",\n  Voice = \"voice\",\n}\n\nexport interface IChatInputProps {\n  isNeedUpload?: boolean;\n  isNeedTaskMessage?: boolean;\n  defaultValue?: string;\n  defaultInputType?: InputType;\n  disabled?: boolean;\n  taskList?: IOnTaskListChangeProps[\"taskList\"];\n  placeholder?: string;\n  inputAdjustDefault?: boolean;\n  isNeedAudio?: boolean;\n  frameEventTarget?: InstanceType<TaroStatic[\"Events\"]>;\n  isPcMode?: boolean;\n  onKeyBoardHeightChange?: (height: number) => void;\n  onSendTextMessage?: (text: string) => void;\n  onSendFileMessage?: (files: ChooseFileInfo[]) => void;\n  onSendAudioMessage?: (audio: AudioRaw) => void;\n  onAudioRecording?: (isRecording: boolean) => void;\n}\n\nexport interface ITaskMessage {\n  isShow: boolean;\n  options: string[];\n}\n","import { FC } from \"react\";\nimport { type ChooseFileInfo } from \"@/libs/types\";\n\nimport { SvgPlusCircle } from \"@/libs/ui-kit/atomic/svg\";\nimport { Upload } from \"../../atomic/upload\";\nimport styles from \"./index.module.less\";\nimport { TaroStatic } from \"@tarojs/taro\";\nimport { IconButton } from \"../../atomic/icon-button\";\nimport { DisableContainer } from \"../../atomic/disable-container\";\n// 文档：DOC、DOCX、XLS、XLSX、PPT、PPTX、PDF、Numbers、CSV\n// 图片：JPG、JPG2、PNG、GIF、WEBP、HEIC、HEIF、BMP、PCD、TIFF\nexport const UploadBtn: FC<{\n  onSendFileMessage?: (file: ChooseFileInfo[]) => void;\n  disabled?: boolean;\n  frameEventTarget?: InstanceType<TaroStatic[\"Events\"]>;\n}> = ({ onSendFileMessage, frameEventTarget, disabled }) => {\n  return (\n    <DisableContainer disabled={disabled}>\n      <Upload\n        accept=\".doc,.docx,.xls,.xlsx,.ppt,.pptx,.pdf,.numbers,.csv,.jpg,.jpg2,.png,.gif,.webp,.heic,.heif,.bmp,.pcd,.tiff,image/*\"\n        onChooseFile={(item) => {\n          onSendFileMessage?.(item);\n        }}\n        frameEventTarget={frameEventTarget}\n      >\n        <IconButton hoverTheme={\"hover\"} type=\"circle-btn\" border=\"none\">\n          <SvgPlusCircle className={styles[\"file-btn\"]} />\n        </IconButton>\n      </Upload>\n    </DisableContainer>\n  );\n};\n","export { MdStream } from \"./atomic/md-stream\";\nexport { BubbleText } from \"./atomic/bubble-text\";\nexport { Spacing } from \"./atomic/spacing\";\nexport { Spinning } from \"./atomic/spinning\";\nexport { Waiting } from \"./atomic/waiting\";\nexport { ErrorBoundary } from \"./atomic/error-boundary\";\nexport { Link } from \"./atomic/link\";\nexport { Button } from \"./atomic/button\";\nexport { Toast } from \"./atomic/toast\";\nexport { AudioInput } from \"./atomic/audio-input\";\nexport { AudioWave } from \"./atomic/audio-wave\";\nexport { AudioPlay } from \"./atomic/audio-play\";\nexport { Tooltip } from \"./atomic/tooltip\";\nexport { Radio } from \"./atomic/radio\";\nexport {\n  Svg,\n  SvgLoading,\n  SvgBroom,\n  SvgFeishu,\n  SvgPlusCircle,\n  SvgWarn,\n  SvgConversation,\n  SvgError,\n  SvgArrowUp,\n  SvgAudioArrowUp,\n  SvgCancel,\n} from \"./atomic/svg\";\nexport { ScrollView, type ScrollViewRef } from \"./atomic/scroll-view\";\nexport { CenterAlignedBox } from \"./atomic/center-aligned-box\";\nexport { FileChooser } from \"./atomic/file-chooser\";\nexport { ErrorRetry, ErrorRetryBtn } from \"./atomic/error-retry\";\nexport { IconButton } from \"./atomic/icon-button\";\nexport { CImage } from \"./atomic/c-image\";\n\nexport { OnBoarding } from \"./onboarding\";\nexport { SuggestionList } from \"./suggestion-list\";\nexport { ChatInput } from \"./chat-input\";\nexport {\n  MessageContainer,\n  MessageContent,\n  ImageMessage,\n  TextMessage,\n  WaitingMessage,\n  isSupportAnswerMessage,\n} from \"./message\";\n","import { ChatMessage } from \"@/exports\";\nimport { FC, useMemo, useState } from \"react\";\nimport { extractChatflowMessage } from \"../../helper/extract-chatlow-message\";\nimport { Input, Text, View } from \"@tarojs/components\";\nimport styles from \"./index.module.less\";\nimport { Button } from \"../../../atomic/button\";\nimport { Spacing } from \"../../../atomic/spacing\";\nimport cls from \"classnames\";\nimport { useI18n } from \"@/libs/provider\";\nexport interface ChatflowNodeData {\n  card_type: \"QUESTION\" | \"INPUT\";\n  input_card_data?: {\n    type: string;\n    name: string;\n  }[];\n  question_card_data?: {\n    Title: string;\n    Options: { name: string }[];\n  };\n}\n\nconst InputNode: FC<{\n  data?: ChatflowNodeData;\n  disabled?: boolean;\n  sendTextMessage?: (content: string) => void;\n}> = ({ data, sendTextMessage, disabled }) => {\n  const [inputData, setInputData] = useState<Record<string, string>>({});\n  const [hasSend, setHasSend] = useState(false);\n  const realDisabled = disabled || hasSend;\n  const i18n = useI18n();\n  return (\n    <Spacing\n      className={cls(styles[\"input-node\"], {\n        [styles[\"disabled\"]]: realDisabled,\n      })}\n      gap={12}\n      vertical\n    >\n      {data?.input_card_data?.map((item, index) => (\n        <Spacing gap={6} vertical key={index}>\n          <Text\n            className={styles[\"input-node-text\"]}\n            overflow=\"ellipsis\"\n            numberOfLines={1}\n          >\n            {item?.name}\n          </Text>\n          <Input\n            className={styles[\"input-node-input\"]}\n            maxlength={-1}\n            disabled={disabled || hasSend}\n            placeholder={i18n.t(\"chatflowNodeInputPlaceholder\")}\n            onInput={(event) => {\n              setInputData({\n                ...inputData,\n                [item.name]: event.detail.value || \"\",\n              });\n            }}\n          />\n        </Spacing>\n      ))}\n\n      <Button\n        className={styles.btn}\n        onClick={() => {\n          if (realDisabled) {\n            return;\n          }\n          setHasSend(true);\n          sendTextMessage?.(\n            data?.input_card_data\n              ?.map((item) => {\n                return `${item.name}:${inputData[item.name] || \"\"}`;\n              })\n              .join(\"\\n\") || \"\"\n          );\n        }}\n      >\n        {i18n.t(\"submit\")}\n      </Button>\n    </Spacing>\n  );\n};\nconst SwitchNode: FC<{\n  data?: ChatflowNodeData;\n  disabled?: boolean;\n  sendTextMessage?: (content: string) => void;\n}> = ({ data, disabled, sendTextMessage }) => {\n  const [hasSend, setHasSend] = useState(false);\n  const realDisabled = disabled || hasSend;\n  return (\n    <View\n      className={cls(styles[\"switch-node\"], {\n        [styles.disabled]: realDisabled,\n      })}\n    >\n      <Text className={styles[\"switch-node-text\"]}>\n        {data?.question_card_data?.Title}\n      </Text>\n      <Spacing vertical gap={6}>\n        {data?.question_card_data?.Options?.map((item, index) => (\n          <View\n            className={styles[\"switch-node-switch-item\"]}\n            key={index}\n            onClick={() => {\n              if (disabled) {\n                return;\n              }\n              setHasSend(true);\n              sendTextMessage?.(item.name);\n            }}\n          >\n            <Text\n              className={styles[\"switch-node-switch-item-text\"]}\n              numberOfLines={1}\n              overflow=\"ellipsis\"\n            >\n              {item.name}\n            </Text>\n          </View>\n        ))}\n      </Spacing>\n    </View>\n  );\n};\n\nexport const ChatflowNode: FC<{\n  message: ChatMessage;\n  disabled?: boolean;\n  sendTextMessage?: (content: string) => void;\n}> = ({ message, sendTextMessage, disabled }) => {\n  const chatflowNodeData: ChatflowNodeData | undefined = useMemo(\n    () => extractChatflowMessage(message),\n    [message]\n  );\n  if (!chatflowNodeData) {\n    return null;\n  }\n  return (\n    <>\n      {chatflowNodeData.card_type === \"INPUT\" ? (\n        <InputNode\n          data={chatflowNodeData}\n          sendTextMessage={sendTextMessage}\n          disabled={disabled}\n        />\n      ) : null}\n      {chatflowNodeData.card_type === \"QUESTION\" ? (\n        <SwitchNode\n          data={chatflowNodeData}\n          sendTextMessage={sendTextMessage}\n          disabled={disabled}\n        />\n      ) : null}\n    </>\n  );\n};\n","import { FC, useMemo } from \"react\";\n\nimport { Text, View } from \"@tarojs/components\";\n\nimport { getFileTypeByFileName } from \"@/libs/utils\";\n\nimport { SvgFileType } from \"../../../atomic/svg\";\nimport { Bubble } from \"../../../atomic/bubble\";\n\nimport styles from \"./index.module.less\";\nimport { Spacing } from \"../../../atomic/spacing\";\n\nconst getSizeStr = (size: number) => {\n  if (size < 1024) {\n    return `${size}B`;\n  } else if (size < 1024 * 1024) {\n    return `${(size / 1024).toFixed(2)}KB`;\n  } else {\n    return `${(size / (1024 * 1024)).toFixed(2)}MB`;\n  }\n};\nexport const FileMessage: FC<{\n  filename: string;\n  size: number;\n}> = ({ filename, size }) => {\n  const fileType = useMemo(() => getFileTypeByFileName(filename), [filename]);\n  return (\n    <View className={styles.file}>\n      <Bubble className={styles.container}>\n        <SvgFileType type={fileType} className={styles.svg} />\n        <Spacing vertical gap={0} flex1>\n          <Text\n            className={styles.txt}\n            maxLines={1}\n            numberOfLines={1}\n            overflow=\"ellipsis\"\n          >\n            {filename}\n          </Text>\n          <Text\n            className={styles.size}\n            maxLines={1}\n            numberOfLines={1}\n            overflow=\"ellipsis\"\n          >\n            {getSizeStr(size)}\n          </Text>\n        </Spacing>\n      </Bubble>\n    </View>\n  );\n};\n","import { FC, useState } from \"react\";\n\nimport { previewImage } from \"@tarojs/taro\";\nimport { Image, View } from \"@tarojs/components\";\n\nimport styles from \"./index.module.less\";\nimport { IOnImageClickEvent } from \"@/libs/types\";\nimport { isWeb } from \"@/libs/utils\";\nexport const ImageMessage: FC<{\n  url: string;\n  onImageClick?: IOnImageClickEvent;\n}> = ({ url, onImageClick }) => {\n  const [imageWidth, setImageWidth] = useState<number | string | undefined>();\n  return (\n    <View>\n      <Image\n        src={url}\n        mode=\"widthFix\"\n        className={styles.image}\n        style={{\n          width: imageWidth,\n        }}\n        onClick={() => {\n          if (onImageClick) {\n            onImageClick?.({ url });\n          } else {\n            previewImage({\n              urls: [url],\n              current: url,\n              enableShowPhotoDownload: true,\n            });\n          }\n        }}\n        onLoad={(res) => {\n          if (!isWeb) {\n            setImageWidth(res.detail.width || 200);\n          }\n        }}\n      />\n    </View>\n  );\n};\n","import { FC, useMemo, useState } from \"react\";\n\nimport { MdStream } from \"../../../atomic/md-stream\";\nimport { Bubble } from \"../../../atomic/bubble\";\nimport cls from \"classnames\";\nimport styles from \"./index.module.less\";\nimport { IOnImageClickEvent, IOnTaskListChange } from \"@/libs/types\";\nimport { logger } from \"@/libs/utils\";\nimport { useI18n } from \"@/libs/provider\";\nimport { usePersistCallback, useUpdateEffect } from \"@/libs/hooks\";\n\nconst MarkdownContent: FC<{\n  content: string;\n  className?: string;\n  isComplete?: boolean; // 是否消息结束\n  onImageClick?: IOnImageClickEvent;\n  onTaskChange?: IOnTaskListChange;\n  taskDisabled?: boolean;\n}> = ({\n  content,\n  isComplete = true,\n  onImageClick,\n  taskDisabled,\n  onTaskChange,\n  className,\n}) => {\n  const [isSmooth, setIsSmooth] = useState(!isComplete);\n  const i18n = useI18n();\n  const onMarkdownEnd = usePersistCallback(() => {\n    if (isSmooth !== false) {\n      setIsSmooth(false);\n    }\n  });\n  useUpdateEffect(() => {\n    onMarkdownEnd();\n  }, [isComplete]);\n\n  return (\n    <MdStream\n      className={className}\n      markdown={content}\n      isSmooth={isSmooth}\n      isFinish={isComplete}\n      onMarkdownEnd={onMarkdownEnd}\n      theme=\"light\"\n      onImageClick={onImageClick}\n      onTaskChange={onTaskChange}\n      taskDisabled={taskDisabled}\n      language={i18n.language}\n      debug={logger.isDebug()}\n    />\n  );\n};\n\nexport const MarkdownMessage: FC<{\n  content: string;\n  reasoningContent?: string;\n  isComplete?: boolean; // 是否消息结束\n  className?: string;\n  onImageClick?: IOnImageClickEvent;\n  onTaskChange?: IOnTaskListChange;\n  taskDisabled?: boolean;\n}> = ({\n  reasoningContent,\n  content,\n  isComplete = true,\n  className,\n  onImageClick,\n  taskDisabled,\n  onTaskChange,\n}) => {\n  const reasonMessage = useMemo(() => {\n    if (reasoningContent) {\n      return reasoningContent.trim().replace(/^/gm, \"> \");\n    }\n    return \"\";\n  }, [reasoningContent]);\n\n  return (\n    <Bubble isNeedBorder={false} className={cls(styles.markdown, className)}>\n      {reasonMessage ? (\n        <MarkdownContent\n          {...{ onImageClick }}\n          taskDisabled={true}\n          className={styles.reason}\n          isComplete={isComplete || !!content}\n          content={reasonMessage}\n        />\n      ) : null}\n      {!reasonMessage || content ? (\n        <MarkdownContent\n          {...{ isComplete, onImageClick, onTaskChange, taskDisabled }}\n          content={content}\n        />\n      ) : null}\n    </Bubble>\n  );\n};\n","import { FC } from \"react\";\n\nimport cls from \"classnames\";\n\nimport { BubbleText, Waiting } from \"@/libs/ui-kit\";\n\nimport styles from \"./index.module.less\";\nimport { Bubble } from \"../../../atomic/bubble\";\n\nexport const TextMessage: FC<{\n  content: string;\n  isLoadingText?: boolean;\n}> = ({ content, isLoadingText }) => (\n  <>\n    {isLoadingText ? (\n      <Bubble\n        className={cls(styles[\"question-text\"], styles.text)}\n        isNeedBorder={false}\n      >\n        <Waiting />\n      </Bubble>\n    ) : (\n      <BubbleText\n        text={content}\n        enter={true}\n        space={true}\n        className={cls(styles[\"question-text\"], styles.text)}\n        isNeedBorder={false}\n      />\n    )}\n  </>\n);\n","import { Waiting } from \"../../../atomic/waiting\";\nimport { Bubble } from \"../../../atomic/bubble\";\nimport styles from \"./index.module.less\";\nexport const WaitingMessage = () => (\n  <Bubble isNeedBorder={false} className={styles.waiting}>\n    <Waiting />\n  </Bubble>\n);\n","import { FC, PropsWithChildren } from \"react\";\nimport { Spacing } from \"../../atomic/spacing\";\nimport { View, Text } from \"@tarojs/components\";\nimport { Avatar } from \"../../atomic/avatar\";\nimport { UserInfo } from \"@/libs/types\";\nimport AvatarImg from \"../../assets/imgs/avatar.png\";\nimport styles from \"./index.module.less\";\nexport const MessageContainer: FC<\n  PropsWithChildren<{\n    senderInfo?: UserInfo;\n    className?: string;\n  }>\n> = ({ children, senderInfo, className }) => {\n  return (\n    <Spacing gap={12} className={className}>\n      <View>\n        <Avatar src={senderInfo?.avatar || AvatarImg} size=\"medium\" />\n      </View>\n      <Spacing vertical flex1 gap={5} className={styles[\"content\"]}>\n        {senderInfo?.name ? (\n          <View>\n            <Text\n              numberOfLines={1}\n              overflow=\"ellipsis\"\n              maxLines={1}\n              className={styles.txt}\n            >\n              {senderInfo?.name}\n            </Text>\n          </View>\n        ) : null}\n        {children}\n      </Spacing>\n    </Spacing>\n  );\n};\n","import { FC } from \"react\";\n\nimport type { ObjectStringItem } from \"@coze/api\";\n\nimport { safeJSONParse } from \"@/libs/utils\";\nimport { IMessageContentProps } from \"@/libs/types\";\nimport { useI18n } from \"@/libs/provider\";\nimport { extractChatflowMessage } from \"../helper/extract-chatlow-message\";\n\nimport { ErrorBoundary } from \"../../atomic/error-boundary\";\nimport { TextMessage } from \"../components/text\";\nimport { MarkdownMessage } from \"../components/markdown\";\nimport { ImageMessage } from \"../components/image\";\nimport { FileMessage } from \"../components/file\";\nimport { ChatflowNode } from \"../components/chatflow-node\";\nconst getObjectValue = (objectString: string) =>\n  safeJSONParse<ObjectStringItem[]>(objectString, []);\n\nexport const MessageContent: FC<IMessageContentProps> = (props) => {\n  const { message, isAWaiting } = props;\n  const i18n = useI18n();\n  return (\n    <ErrorBoundary\n      fallbackNode={\n        !isAWaiting ? <TextMessage content={i18n.t(\"noAnswer\")} /> : <></>\n      }\n    >\n      {/** 文本消息处理， 分为： markdown, text */}\n      {message.content_type === \"text\" ? <TextItem {...props} /> : null}\n\n      {/** 其他消息处理 */}\n      {message.content_type === \"object_string\" ? (\n        <ObjectStringItem {...props} />\n      ) : null}\n      {message.content_type === \"card\" ? <CardItem {...props} /> : null}\n    </ErrorBoundary>\n  );\n};\n\nconst TextItem: FC<IMessageContentProps> = (props) => {\n  const {\n    message,\n    isAWaiting,\n    onImageClick,\n    onTaskChange,\n    messageUiConfigMap,\n    isLastMessage,\n  } = props;\n  const { renderMessage } = messageUiConfigMap?.[\"text\"] || {};\n  if (message.content_type !== \"text\") {\n    return null;\n  }\n\n  return (\n    <>\n      {renderMessage?.(props) || (\n        <>\n          {message.type === \"question\" ? (\n            <TextMessage\n              content={message.content}\n              isLoadingText={message.isAudioTranslatingToText}\n            />\n          ) : (\n            <MarkdownMessage\n              reasoningContent={message.reasoning_content}\n              content={message.content}\n              isComplete={!isAWaiting || message.isComplete}\n              onImageClick={onImageClick}\n              onTaskChange={onTaskChange}\n              taskDisabled={!isLastMessage}\n            />\n          )}\n        </>\n      )}\n    </>\n  );\n};\nconst ObjectStringItem: FC<IMessageContentProps> = (props) => {\n  const {\n    message,\n    onImageClick,\n    messageUiConfigMap,\n    onTaskChange,\n    isLastMessage,\n  } = props;\n  const i18n = useI18n();\n  const { renderMessage } = messageUiConfigMap?.[\"text\"] || {};\n  if (message.content_type !== \"object_string\") {\n    return null;\n  }\n  return (\n    <>\n      {renderMessage?.(props) ||\n        getObjectValue(message.content)?.map((item, index) => {\n          switch (item.type) {\n            case \"text\": {\n              return (\n                <>\n                  {message.type === \"question\" ? (\n                    <TextMessage\n                      content={item.text}\n                      isLoadingText={message.isAudioTranslatingToText}\n                    />\n                  ) : (\n                    <MarkdownMessage\n                      content={item.text}\n                      isComplete={true}\n                      onImageClick={onImageClick}\n                      onTaskChange={onTaskChange}\n                      taskDisabled={!isLastMessage}\n                    />\n                  )}\n                </>\n              );\n            }\n            case \"file\": {\n              return (\n                <FileMessage\n                  // @ts-expect-error -- linter-disable-autofix\n                  filename={item.name || \"\"}\n                  key={`${item.type}_${index}`}\n                  // @ts-expect-error -- linter-disable-autofix\n                  size={item.size || 0}\n                />\n              );\n            }\n            case \"image\": {\n              return (\n                <ImageMessage\n                  // @ts-expect-error -- linter-disable-autofix\n                  url={item.file_url as string}\n                  onImageClick={onImageClick}\n                  key={`${item.type}_${index}`}\n                />\n              );\n            }\n            default: {\n              return (\n                <TextMessage\n                  content={i18n.t(\"messageTypeUnSupport\")}\n                  key={`${item.type}_${index}`}\n                />\n              );\n            }\n          }\n        })}\n    </>\n  );\n};\nconst CardItem: FC<IMessageContentProps> = (props) => {\n  const {\n    message,\n    messageUiConfigMap,\n    sendTextMessage,\n    isLastMessage,\n    isReadOnly,\n  } = props;\n  const { renderMessage: renderCardMessage } =\n    messageUiConfigMap?.[\"card\"] || {};\n  const { renderMessage: renderChatflowNodeMessage } =\n    messageUiConfigMap?.[\"chatflow_node\"] || {};\n  const chatflowNodeData = extractChatflowMessage(message);\n  const isChatflowNode = Boolean(chatflowNodeData);\n  if (message.content_type !== \"card\") {\n    return null;\n  }\n\n  return (\n    <>\n      {isChatflowNode\n        ? renderChatflowNodeMessage?.(props) || (\n            <ChatflowNode\n              message={message}\n              sendTextMessage={sendTextMessage}\n              disabled={!isLastMessage || isReadOnly}\n            />\n          )\n        : renderCardMessage?.(props) || null}\n    </>\n  );\n};\n","import { type ChatMessage } from \"@/libs/types\";\nimport { safeJSONParse } from \"@/libs/utils\";\nimport { ChatflowNodeData } from \"../components/chatflow-node\";\nexport const extractChatflowMessage = (\n  item: ChatMessage\n): ChatflowNodeData | undefined => {\n  if (item.content_type === \"card\") {\n    const contentStruct = safeJSONParse(item.content);\n    const workflowDataStr =\n      contentStruct?.[\"x_properties\"]?.[\"workflow_card_info\"];\n    if (workflowDataStr) {\n      const cardData = safeJSONParse<ChatflowNodeData>(workflowDataStr);\n      if (cardData?.card_type === \"QUESTION\" && cardData?.question_card_data) {\n        return cardData;\n      }\n      if (cardData?.card_type === \"INPUT\" && cardData?.input_card_data) {\n        return cardData;\n      }\n    }\n  }\n  return undefined;\n};\n","import { MessageUiConfigMap, type ChatMessage } from \"@/libs/types\";\nimport { extractChatflowMessage } from \"./extract-chatlow-message\";\nimport { ContentType } from \"@coze/api\";\n\nexport const isSupportAnswerMessage = (\n  item: ChatMessage,\n  messageUiMap?: MessageUiConfigMap\n) => {\n  const chatflowNode = extractChatflowMessage(item);\n  let contentType: ContentType | \"chatflow_node\" = !!Boolean(chatflowNode)\n    ? \"chatflow_node\"\n    : item.content_type;\n  if (item.type !== \"answer\") {\n    return false;\n  }\n\n  if (messageUiMap?.[contentType]?.isSupportMessage) {\n    return messageUiMap?.[contentType]?.isSupportMessage?.(item);\n  }\n  if (!item.content && !item.reasoning_content) {\n    return false;\n  }\n  if (![\"object_string\", \"text\", \"chatflow_node\"].includes(contentType)) {\n    return false;\n  }\n\n  return true;\n};\n","export { TextMessage } from \"./components/text\";\nexport { ImageMessage } from \"./components/image\";\nexport { MessageContainer } from \"./container\";\nexport { MessageContent } from \"./content\";\nexport { WaitingMessage } from \"./components/waiting\";\nexport { extractChatflowMessage } from \"./helper/extract-chatlow-message\";\nexport { isSupportAnswerMessage } from \"./helper/is-support-snaswer-message\";\n","import { FC, useMemo } from \"react\";\n\nimport { View, Text } from \"@tarojs/components\";\n\nimport { ChatInfo, IOnImageClickEvent, UserInfo } from \"@/libs/types\";\n\nimport { SuggestionList } from \"../suggestion-list\";\nimport { MarkdownMessage } from \"../message/components/markdown\";\nimport { ErrorBoundary } from \"../atomic/error-boundary\";\n\nimport styles from \"./index.module.less\";\nimport { getCdnUrl, logger } from \"@/libs/utils\";\nimport { CImage } from \"../atomic/c-image\";\nimport cls from \"classnames\";\nimport { useChatPropsStore, useIsMobile } from \"@/libs/provider\";\ninterface OnBoardingProps {\n  chat?: ChatInfo;\n  user?: UserInfo;\n  onClickSuggestion?: (text: string) => void;\n  onImageClick?: IOnImageClickEvent;\n}\n\nexport const OnBoarding: FC<OnBoardingProps> = ({\n  chat: chatInfo,\n  user: userInfo,\n  onClickSuggestion,\n  onImageClick,\n}) => {\n  const cdnBaseurlPath = useChatPropsStore(\n    (store) => store.setting?.cdnBaseUrlPath\n  );\n  const prologue = useMemo(() => {\n    const formatPrologue = (\n      chatInfo?.onboarding_info?.prologue || \"\"\n    ).replaceAll(\"{{user_name}}\", userInfo?.name || \"\");\n    return formatPrologue !== \"\\n\" ? formatPrologue : \"\";\n  }, [chatInfo?.onboarding_info?.prologue]);\n  const isVerticalCenter =\n    !prologue && !chatInfo?.onboarding_info?.suggested_questions?.length;\n  const isMobile = useIsMobile();\n  logger.debug(\"OnBoarding props\", prologue, chatInfo);\n  return (\n    <View\n      className={cls(styles.container, {\n        [styles[\"vertical-center\"]]: isVerticalCenter,\n      })}\n    >\n      <View className={styles[\"info-container\"]}>\n        <CImage\n          src={\n            chatInfo?.icon_url ||\n            getCdnUrl(cdnBaseurlPath, \"assets/imgs/coze-logo.png\")\n          }\n          className={styles[\"app-avatar\"]}\n          mode=\"aspectFill\"\n        />\n        <Text\n          className={styles[\"chat-name\"]}\n          overflow=\"ellipsis\"\n          numberOfLines={1}\n          maxLines={1}\n        >\n          {chatInfo?.name || \"\"}\n        </Text>\n        <ErrorBoundary fallbackNode={<></>}>\n          {prologue ? (\n            <MarkdownMessage\n              content={prologue}\n              isComplete={true}\n              className={styles.prologue}\n              onImageClick={onImageClick}\n            />\n          ) : null}\n        </ErrorBoundary>\n      </View>\n      <SuggestionList\n        suggestions={chatInfo?.onboarding_info?.suggested_questions || []}\n        onClickSuggestion={onClickSuggestion}\n        isDisplayAll={chatInfo?.onboarding_info?.display_all_suggestions}\n        isVertical={isMobile}\n      />\n    </View>\n  );\n};\n","import { FC } from \"react\";\n\nimport { Spacing } from \"../atomic/spacing\";\nimport { BubbleText } from \"../atomic/bubble-text\";\nimport styles from \"./index.module.less\";\nimport cls from \"classnames\";\ninterface SuggestionList {\n  suggestions: string[];\n  isVertical?: boolean;\n  isDisplayAll?: boolean;\n  onClickSuggestion?: (suggestion: string) => void;\n}\n\nexport const SuggestionList: FC<SuggestionList> = ({\n  suggestions,\n  onClickSuggestion,\n  isVertical = true,\n  isDisplayAll = false,\n}) => (\n  <Spacing\n    gap={8}\n    vertical={isVertical}\n    className={cls(styles[\"suggestion-list\"])}\n  >\n    {suggestions\n      .slice(0, isDisplayAll ? suggestions.length : 3)\n      .map((item, index) => (\n        <BubbleText\n          className={styles.suggestion}\n          text={item}\n          key={index}\n          canClick={false}\n          selectable={false}\n          onClick={() => {\n            onClickSuggestion?.(item);\n          }}\n        />\n      ))}\n  </Spacing>\n);\n","import { request } from \"@tarojs/taro\";\nimport { isFunction } from \"@tarojs/shared\";\nimport { AxiosAdapter } from \"axios\";\nimport { logger } from \"./logger\";\n\nexport const taroAdapter: AxiosAdapter = (config) => {\n  const { url, method, data, headers } = config;\n  const header = isFunction(headers.toJSON) ? headers.toJSON() : headers;\n  header[\"Content-Type\"] = header[\"Content-Type\"] || \"application/json\";\n  logger.debug(\"taroAdapter:\", config);\n  const responseType: \"text\" | \"arraybuffer\" =\n    config.responseType === \"arraybuffer\" ? \"arraybuffer\" : \"text\";\n  return new Promise((resolve, reject) => {\n    request({\n      url: url as string,\n      method: (method ?? \"GET\").toUpperCase() as any,\n      data,\n      header,\n      responseType: responseType,\n      timeout: 60 * 10 * 1000,\n      success: (res) => {\n        resolve({\n          data: res.data,\n          status: res.statusCode,\n          statusText: res.errMsg,\n          headers: res.header,\n          config,\n        });\n      },\n      fail: (err) => {\n        reject(err);\n      },\n    });\n  });\n};\n","/* eslint-disable @typescript-eslint/no-magic-numbers -- ignore */\n/* eslint-disable security/detect-object-injection -- ignore */\n\n// reference: https://gist.github.com/Yaffle/5458286\nclass TextEncoderPonyfill {\n  encode(str: string) {\n    let octets: number[] = [];\n    let length = str.length;\n    let i = 0;\n    while (i < length) {\n      let codePoint = str.codePointAt(i) as number;\n      let c = 0;\n      let bits = 0;\n      if (codePoint <= 0x0000007f) {\n        c = 0;\n        bits = 0x00;\n      } else if (codePoint <= 0x000007ff) {\n        c = 6;\n        bits = 0xc0;\n      } else if (codePoint <= 0x0000ffff) {\n        c = 12;\n        bits = 0xe0;\n      } else if (codePoint <= 0x001fffff) {\n        c = 18;\n        bits = 0xf0;\n      }\n      octets.push(bits | (codePoint >> c));\n      c -= 6;\n      while (c >= 0) {\n        octets.push(0x80 | ((codePoint >> c) & 0x3f));\n        c -= 6;\n      }\n      i += codePoint >= 0x10000 ? 2 : 1;\n    }\n    return octets;\n  }\n}\nclass TextDecoderPonyfill {\n  decode(octets: Uint8Array) {\n    let string = \"\";\n    let i = 0;\n    while (i < octets.length) {\n      let octet = octets[i];\n      let bytesNeeded = 0;\n      let codePoint = 0;\n      if (octet <= 0x7f) {\n        bytesNeeded = 0;\n        codePoint = octet & 0xff;\n      } else if (octet <= 0xdf) {\n        bytesNeeded = 1;\n        codePoint = octet & 0x1f;\n      } else if (octet <= 0xef) {\n        bytesNeeded = 2;\n        codePoint = octet & 0x0f;\n      } else if (octet <= 0xf4) {\n        bytesNeeded = 3;\n        codePoint = octet & 0x07;\n      }\n      if (octets.length - i - bytesNeeded > 0) {\n        let k = 0;\n        while (k < bytesNeeded) {\n          octet = octets[i + k + 1];\n          codePoint = (codePoint << 6) | (octet & 0x3f);\n          k += 1;\n        }\n      } else {\n        codePoint = 0xfffd;\n        bytesNeeded = octets.length - i;\n      }\n      string += String.fromCodePoint(codePoint);\n      i += bytesNeeded + 1;\n    }\n    return string;\n  }\n}\n\nexport const TextDecoder =\n  (globalThis || window).TextDecoder ?? TextDecoderPonyfill;\n\nexport const TextEncoder =\n  (globalThis || window).TextEncoder ?? TextEncoderPonyfill;\n","import { getEnv, ENV_TYPE } from \"@tarojs/taro\";\nconst env = getEnv();\nexport const isWeb = env === ENV_TYPE.WEB;\nexport const isWeapp = env === ENV_TYPE.WEAPP;\nexport const isTT = env === ENV_TYPE.TT;\nexport const isMini = !isWeb;\n","export enum Region {\n  OVERSEA = \"oversea\",\n  CN = \"cn\",\n}\n\nexport const getRegionApi = (region?: Region) => {\n  switch (region) {\n    case \"oversea\":\n      return \"https://api.coze.com\";\n    default: {\n      return \"https://api.coze.cn\";\n    }\n  }\n};\n","import { TaroStatic, Events } from \"@tarojs/taro\";\nimport { MiniChatError } from \"@/libs/utils\";\n\nexport const EventJsonDataType = Symbol(\"eventJsonDataType\");\n\nexport interface IMessageEvent {\n  event: string | symbol;\n  data: unknown;\n}\nexport type OpenHandler = (headers: Record<string, string>) => void;\nexport type CloseHandler = () => void;\nexport type MessageHandler = (data: IMessageEvent) => void;\nexport type ErrorHandler = (err: MiniChatError) => void;\nexport interface EventSourceProps {\n  url: string;\n  method?: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\n  header?: Record<string, unknown>;\n  data?: string | Record<string, unknown> | Array<unknown>;\n}\nexport enum MessageEvent {\n  ERROR = \"error\",\n  CLOSE = \"close\",\n  OPEN = \"open\",\n  MESSAGE = \"message\",\n}\n\nexport class EventSourceBase {\n  protected url: string;\n  protected method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\n  protected header: Record<string, unknown>;\n  protected data?: string | Record<string, unknown> | Array<unknown>;\n\n  protected isClosed: boolean = false;\n  protected event: InstanceType<TaroStatic[\"Events\"]> = new Events();\n\n  constructor({ url, method = \"GET\", header = {}, data }: EventSourceProps) {\n    this.url = url;\n    this.method = method;\n    this.header = header;\n    this.data = data;\n  }\n  public sendMessage() {\n    this._sendMessage();\n  }\n  protected _sendMessage() {\n    throw new MiniChatError(-1, \"not implemented\");\n  }\n  public close() {\n    if (this.isClosed) {\n      return false;\n    }\n    this.isClosed = true;\n    this.event.trigger(MessageEvent.CLOSE);\n    this.event.off();\n    return true;\n  }\n  public onError(onError: ErrorHandler) {\n    this.event.on(MessageEvent.ERROR, (err) => {\n      onError(new MiniChatError(-1, err.errMsg));\n    });\n  }\n  public onClose(onClose: CloseHandler) {\n    this.event.on(MessageEvent.CLOSE, onClose);\n  }\n  public onMessage(onMessage: MessageHandler) {\n    this.event.on(MessageEvent.MESSAGE, onMessage);\n  }\n  public onOpen(onOpen: OpenHandler) {\n    this.event.on(MessageEvent.OPEN, onOpen);\n  }\n}\n","import { isTT } from \"../device\";\nimport {\n  EventSourceBase,\n  type EventSourceProps,\n  type IMessageEvent,\n} from \"./event-source\";\nimport { TTEventSource } from \"./tt-event-source\";\nimport { WxEventSource } from \"./wx-event-source\";\n\nfunction getPromiseInfo() {\n  let resolve: ((value: undefined) => void) | undefined = undefined;\n  let reject: ((reason?: any) => void) | undefined = undefined;\n  const promise = new Promise((resolveIn, rejectIn) => {\n    resolve = resolveIn;\n    reject = rejectIn;\n  });\n  return { resolve, reject, promise };\n}\n\nexport async function* requestSSE(\n  options: EventSourceProps\n): AsyncIterable<IMessageEvent> {\n  const eventSource: EventSourceBase = isTT\n    ? new TTEventSource(options)\n    : new WxEventSource(options);\n  let yieldPromise: Promise<unknown> | undefined = undefined;\n  let resolve: ((value: unknown) => void) | undefined = undefined;\n  let reject: ((reason?: any) => void) | undefined = undefined;\n  let isDone = false;\n  let messageList: IMessageEvent[] = [];\n  eventSource.onOpen(() => {});\n  eventSource.onMessage((data) => {\n    messageList.push(data);\n    resolve?.(undefined);\n  });\n  eventSource.onClose(() => {\n    resolve?.(undefined);\n    isDone = true;\n  });\n  eventSource.onError((err) => {\n    reject?.(err);\n    isDone = true;\n  });\n  eventSource.sendMessage();\n  genNextPromise();\n  do {\n    await yieldPromise;\n    const messageListNow = messageList.splice(0);\n    genNextPromise();\n    for (let eventData of messageListNow) {\n      if (eventData) {\n        yield eventData;\n      }\n    }\n  } while (!isDone);\n\n  function genNextPromise() {\n    const {\n      resolve: resolveInit,\n      reject: rejectInit,\n      promise: promiseInit,\n    } = getPromiseInfo();\n    yieldPromise = promiseInit;\n    resolve = resolveInit;\n    reject = rejectInit;\n  }\n}\n","import { logger } from \"../logger\";\nimport { EventSourceBase, MessageEvent } from \"./event-source\";\nimport { MiniChatError } from \"@/libs/utils\";\n\n/**\n * 基于 tt.createEventSource 实现的 EventSource\n * 存在问题： 如果失败返回了json结构，会接收不到消息，直接失败。\n */\nexport class TTEventSource extends EventSourceBase {\n  private ttClient;\n  public close() {\n    if (!super.close()) {\n      return false;\n    }\n    this.ttClient?.close();\n    return true;\n  }\n\n  protected async _sendMessage() {\n    this.ttClient = tt.createEventSource({\n      url: this.url,\n      method: this.method as \"POST\" | \"GET\",\n      header: this.header,\n      timeout: 10 * 60 * 1000,\n      data: this.data,\n    });\n    logger.debug(\"TTEventSource init\", {\n      url: this.url,\n      method: this.method as \"POST\" | \"GET\",\n      header: this.header,\n      data: this.data,\n    });\n    this.ttClient.onOpen((...arg) => {\n      logger.debug(\"TTEventSource onOpen\", arg);\n      this.event.trigger(MessageEvent.OPEN, {});\n    });\n    this.ttClient.onClose((...arg) => {\n      logger.debug(\"TTEventSource onClose\", arg);\n      this.close();\n    });\n    this.ttClient.onError((errMsg) => {\n      logger.debug(\"TTEventSource onError\", errMsg);\n      this.event.trigger(MessageEvent.ERROR, new MiniChatError(-1, errMsg));\n    });\n    this.ttClient.onMessage((data) => {\n      logger.debug(\"TTEventSource onMessage\", data);\n      this.event.trigger(MessageEvent.MESSAGE, data);\n    });\n  }\n}\n","import Taro, { request } from \"@tarojs/taro\";\nimport {\n  EventSourceBase,\n  MessageEvent,\n  type IMessageEvent,\n  EventJsonDataType,\n} from \"./event-source\";\nimport { logger } from \"../logger\";\nimport { TextDecoder } from \"../decorder\";\n\nexport class WxEventSource extends EventSourceBase {\n  private task?: Taro.RequestTask<unknown>;\n  private offTaskHandler?: () => void;\n  private chunkedData = \"\";\n  private dataType: \"stream\" | \"json\" | \"unknown\" = \"unknown\";\n\n  protected _sendMessage() {\n    this.task = request({\n      url: this.url,\n      method: this.method,\n      header: this.header,\n      data: this.data,\n      enableChunked: true,\n      enableCookie: true,\n      timeout: 10 * 60 * 1000,\n      fail: (err) => {\n        this.event.trigger(MessageEvent.ERROR, err);\n      },\n      complete: () => {\n        this.close();\n      },\n    });\n    const destroyHeaderReceivedHandler = this.onHeadersReceived();\n    const destroyChunkReceivedHandler = this.onChunkReceived();\n    this.offTaskHandler = () => {\n      destroyHeaderReceivedHandler();\n      destroyChunkReceivedHandler();\n    };\n  }\n  public close() {\n    if (!super.close()) {\n      return false;\n    }\n    this.task?.abort();\n    this.offTaskHandler?.();\n    return true;\n  }\n  private getDataType(header: Record<string, unknown>) {\n    const [, contentTypeRaw] =\n      Object.entries(header).find(([key]) => {\n        if (key.toLowerCase() === \"content-type\") {\n          return true;\n        }\n        return false;\n      }) || [];\n    const contentType = (contentTypeRaw as string) || \"\";\n    if (contentType?.includes(\"text/event-stream\")) {\n      return \"stream\";\n    } else if (contentType?.includes(\"application/json\")) {\n      return \"json\";\n    }\n\n    return \"unknown\";\n  }\n  private onHeadersReceived() {\n    const func = (res) => {\n      this.dataType = this.getDataType(res.header);\n      this.event.trigger(MessageEvent.OPEN, res.header);\n      logger.debug(\"onHeadersReceived\", res.header);\n    };\n    this.task?.onHeadersReceived(func);\n    return () => {\n      this.task?.offHeadersReceived(func);\n    };\n  }\n  private onChunkReceived() {\n    const func = (res) => {\n      const uint8Array = new Uint8Array(res.data);\n      const textDecoder = new TextDecoder(\"utf-8\");\n      const data = textDecoder.decode(uint8Array);\n      logger.debug(\"onChunkReceived raw data\", data);\n      logger.debug(\"onChunkReceived data type\", this.dataType);\n      if (this.dataType === \"json\") {\n        this.event.trigger(MessageEvent.MESSAGE, {\n          event: EventJsonDataType,\n          data: data,\n        });\n        return;\n      }\n      // 处理返回的json字符串\n      this.chunkedData += data;\n      if (data.slice(-2) === \"\\n\\n\") {\n        const messageEvents = this.unpackData(this.chunkedData);\n        messageEvents.map((message) => {\n          this.event.trigger(MessageEvent.MESSAGE, message);\n        });\n        this.chunkedData = \"\";\n        logger.debug(\"onChunkReceived messageEvents\", messageEvents);\n      } else {\n        logger.debug(\"onChunkReceived messageEvents is not complete\");\n      }\n    };\n    this.task?.onChunkReceived(func);\n    return () => {\n      this.task?.offChunkReceived(func);\n    };\n  }\n  private unpackData(data: string): IMessageEvent[] {\n    const lines = data.split(\"\\n\");\n    const messageEvents: IMessageEvent[] = [];\n    let i = 0;\n    while (i < lines.length - 1) {\n      if (lines[i].startsWith(\"event:\") && lines[i + 1].startsWith(\"data:\")) {\n        const eventName = lines[i].slice(6).trim();\n        const eventData = lines[i + 1].slice(5).trim();\n        messageEvents.push({\n          event: eventName,\n          data: eventData,\n        });\n        i += 2;\n      }\n      i++;\n    }\n    return messageEvents;\n  }\n}\n","export const getCdnUrl = (baseUrl?: string, urlPath?: string) => {\n  let url = \"\";\n  let baseUrlNow =\n    baseUrl ||\n    \"https://lf3-static.bytednsdoc.com/obj/eden-cn/rkzild_lgvj/ljhwZthlaukjlkulzlp/\";\n  try {\n    return `${baseUrlNow?.replace(/\\/+$/, \"\") || \"\"}/${urlPath?.replace(\n      /^\\.?\\/+/,\n      \"\"\n    )}`;\n  } catch (err) {\n    console.error(\"Invalid URL:\", err, baseUrl, urlPath);\n  }\n  if (!url) {\n    url = \"\";\n  }\n  return url;\n};\n","import { FileTypeEnum } from \"@/libs/types\";\nconst FILE_TYPE_CONFIG = [\n  {\n    fileType: FileTypeEnum.IMAGE,\n    accept: [\".jpg\", \".jpeg\", \".png\", \".gif\", \".bmp\", \".webp\"],\n    typeStart: \"image/\",\n  },\n  {\n    fileType: FileTypeEnum.AUDIO,\n    accept: [\n      \".mp3\",\n      \".wav\",\n      \".aac\",\n      \".flac\",\n      \".ogg\",\n      \".wma\",\n      \".alac\",\n      \".mid\",\n      \".midi\",\n      \".ac3\",\n      \".dsd\",\n    ],\n    typeStart: \"audio/\",\n  },\n  {\n    fileType: FileTypeEnum.PDF,\n    accept: [\".pdf\"],\n  },\n  {\n    fileType: FileTypeEnum.DOCX,\n    accept: [\".docx\", \".doc\"],\n  },\n  {\n    fileType: FileTypeEnum.EXCEL,\n    accept: [\".xls\", \".xlsx\"],\n  },\n  {\n    fileType: FileTypeEnum.CSV,\n    accept: [\".csv\"],\n  },\n  {\n    fileType: FileTypeEnum.CODE,\n    accept: [\".py\", \".java\", \".c\", \".cpp\", \".js\", \".html\", \".css\"],\n  },\n  {\n    fileType: FileTypeEnum.VIDEO,\n    accept: [\".mp4\", \".avi\", \".mov\", \".wmv\", \".flv\", \".mkv\"],\n    typeStart: \"audio/\",\n  },\n  {\n    fileType: FileTypeEnum.TXT,\n    accept: [\".txt\"],\n  },\n  {\n    fileType: FileTypeEnum.PPT,\n    accept: [\".ppt\", \".pptx\"],\n  },\n];\n\nexport const getFileTypeByFileName = (fileName: string) => {\n  const fileInfo = FILE_TYPE_CONFIG.find(({ accept }) =>\n    accept.some((ext) => fileName.endsWith(ext))\n  );\n  if (!fileInfo) {\n    return FileTypeEnum.DEFAULT_UNKNOWN;\n  }\n  return fileInfo.fileType;\n};\n\nexport const getFileTypeByFile = (file: File) => {\n  const type = file.type;\n  const fileName = file.name;\n  const fileInfo = FILE_TYPE_CONFIG.find(({ accept, typeStart }) => {\n    if (typeStart) {\n      return type.startsWith(typeStart);\n    } else if (accept) {\n      return accept.some((ext) => fileName.endsWith(ext));\n    }\n  });\n  if (!fileInfo) {\n    return FileTypeEnum.DEFAULT_UNKNOWN;\n  }\n  return fileInfo.fileType;\n};\n","import { createSelectorQuery } from \"@tarojs/taro\";\n\nexport const getScrollInfo = (\n  selectorName: string\n): Promise<Taro.NodesRef.ScrollOffsetCallbackResult> =>\n  new Promise((resolve) => {\n    const selector = createSelectorQuery();\n    selector\n      .select(selectorName)\n      .scrollOffset((res) => {\n        resolve(res);\n      })\n      .exec();\n  });\n","import { logger } from \"./logger\";\nimport { TextEncoder } from \"./decorder\";\nimport Taro from \"@tarojs/taro\";\n\nexport const getSvgBase64 = (svg: string) => {\n  try {\n    const encoder = new TextEncoder();\n    const uint8Array = encoder.encode(svg) as unknown as ArrayBuffer;\n\n    const bases = Taro.arrayBufferToBase64(uint8Array);\n    return `data:image/svg+xml;base64,${bases}`;\n  } catch (error) {\n    logger.error(\"getSvgBase64 Error\", error);\n    return \"\";\n  }\n};\n","export { isValidContext } from \"./is-valid-context\";\nexport { safeJSONParse } from \"./safe-json-parse\";\nexport { sleep } from \"./sleep\";\nexport { getFileTypeByFileName, getFileTypeByFile } from \"./get-file-type\";\nexport { getScrollInfo } from \"./get-scroll-info\";\n\nexport { nanoid } from \"./nanoid\";\nexport { getAndOpenSetting } from \"./taro/get-and-open-setting\";\nexport { getBoundingRect } from \"./taro/get-bounding-rect\";\nexport { getViewportBoundingRect } from \"./taro/get-viewport-bounding-rect\";\n\nexport { WxEventSource } from \"./event-source/wx-event-source\";\nexport { TTEventSource } from \"./event-source/tt-event-source\";\nexport { Region, getRegionApi } from \"./env\";\nexport { requestSSE } from \"./event-source/request\";\n\nexport { MiniCozeApi } from \"./mini-coze-api\";\n\nexport { showToast } from \"./toast\";\nexport { logger, Logger } from \"./logger\";\nexport {\n  MiniChatError,\n  MiniChatErrorCode,\n  convertToMinChatError,\n} from \"./mini-chat-error\";\n\nexport { isWeb, isWeapp, isTT, isMini } from \"./device\";\nexport { getSvgBase64 } from \"./get-svg-base64\";\nexport {\n  getRecorderManager,\n  BaseRecorderManager,\n  RecorderEvent,\n} from \"./recorder-manager\";\nexport { PlayAudio, AudioPlayEvent } from \"./play-audio\";\nexport { showModal } from \"./modal\";\nexport { setClipboardData } from \"./taro/clipboard\";\nexport { getCdnUrl } from \"./get-cdn-url\";\n","import { type NonNullableType } from '@/libs/types';\nexport const isValidContext = <T extends object>(\n  context: T,\n): context is NonNullableType<T> =>\n  Object.keys(context)\n    .map(keyName => context[keyName as keyof T])\n    .reduce(\n      (prevResult, currentProperty) => prevResult && currentProperty !== null,\n      true,\n    );\n","import type { LogLevel } from \"@/libs/types\";\nexport class Logger {\n  private prefix: string;\n  private level: LogLevel;\n  constructor(prefix: string = \"\", level: LogLevel = \"release\") {\n    this.prefix = prefix;\n    this.level = level;\n  }\n  setLoglevel(level?: LogLevel) {\n    if (!level) {\n      return;\n    }\n    this.level = level;\n  }\n  seDebug() {\n    this.level = \"debug\";\n  }\n  isDebug() {\n    return this.level === \"debug\";\n  }\n  debug(...args) {\n    if (this.level !== \"debug\") {\n      return;\n    }\n    console.log(this.prefix, \"[debug]\", ...args, \"\\n\");\n  }\n  info(...args) {\n    console.info(this.prefix, \"[info]\", ...args, \"\\n\");\n  }\n  warn(...args) {\n    console.warn(this.prefix, \"[warn]\", ...args, \"\\n\");\n  }\n  error(...args) {\n    console.error(this.prefix, \"[error]\", ...args, \"\\n\");\n  }\n}\nexport const logger = new Logger(\"[coze-mini-sdk]\");\n","import type { II18n, IMiniChatError } from \"@/libs/types\";\nexport class MiniChatError extends Error implements IMiniChatError {\n  readonly code: number;\n  readonly msg: string;\n  constructor(code: number, msg: string) {\n    super(msg);\n    this.code = code;\n    this.msg = msg;\n  }\n  getErrorMessageByI18n(\n    i18n: II18n,\n    options?: Record<string, unknown>,\n    fallbackText?: string\n  ) {\n    return i18n.t(\n      `miniChatError_${this.code}`,\n      options,\n      fallbackText || this.msg\n    );\n  }\n}\n\nexport const convertToMinChatError = (error: unknown) => {\n  const miniChatError = error as MiniChatError;\n  return new MiniChatError(\n    miniChatError?.code || -1,\n    miniChatError?.msg ||\n      miniChatError?.message ||\n      miniChatError?.stack ||\n      \"unknown error\"\n  );\n};\n\nexport enum MiniChatErrorCode {\n  Unknown = -1,\n\n  Audio_Permission_Denied = 1000,\n  Audio_Translation_NoContent = 1001,\n  Custom_Conversation_Create_Error = 1002,\n  Custom_GetMessageList_Error = 10003,\n  SDK_API_OVERDUE_PAYMENT = 4011,\n  SDK_API_APP_UnPublished = 4015,\n}\n","import {\n  CozeAPI,\n  RequestOptions,\n  type ClientOptions,\n  type CreateFileReq,\n  type FileObject,\n} from \"@coze/api\";\nimport axios, {\n  type AxiosInstance,\n  type AxiosResponse,\n  type InternalAxiosRequestConfig,\n} from \"axios\";\nimport Taro from \"@tarojs/taro\";\nimport { requestSSE } from \"./event-source/request\";\nimport { EventJsonDataType } from \"./event-source/event-source\";\nimport { convertToMinChatError, MiniChatError } from \"./mini-chat-error\";\nimport { safeJSONParse } from \"./safe-json-parse\";\nimport { logger } from \"./logger\";\nimport { taroAdapter } from \"./adapter\";\nimport { isTT, isWeb } from \"./device\";\n\nenum ApiAuthError {\n  ERROR_FORBIDDEN = 401,\n  ERROR_INVALID_TOKEN = 4100,\n  ERROR_TOKEN_FORBIDDEN = 4101,\n  ERROR_TOKEN_FAILED = 700012006,\n}\ntype OnRefreshToken = (oldToken?: string) => Promise<string> | string;\ninterface FileResult {\n  code: number;\n  data: FileObject;\n}\nexport class MiniCozeApi2 extends CozeAPI {}\nexport class MiniCozeApi extends CozeAPI {\n  private onRefreshToken?: OnRefreshToken;\n  private refreshTokenPromise?: Promise<string> | string;\n  constructor({\n    onRefreshToken,\n    axiosOptions,\n    ...config\n  }: ClientOptions & {\n    onRefreshToken?: OnRefreshToken;\n  }) {\n    super({\n      ...config,\n      axiosOptions: {\n        ...(axiosOptions || {}),\n        timeout: 10 * 60 * 1000,\n        validateStatus: () => true,\n      },\n    });\n    this.onRefreshToken = onRefreshToken;\n    this.axiosInstance = axios.create({\n      adapter: !isWeb ? taroAdapter : undefined,\n    });\n    this.useAuthError();\n    this.mixTaroUpload();\n  }\n  useAuthError() {\n    this.useResponseInterceptors(\n      async (response) => {\n        const { code } = response?.data || {};\n        if (this.isAuthErrorCode(code || response.status)) {\n          // 由于 鉴权问题导致的失败，进行一次重新发送数据。\n          logger.error(\"request auth error :\", code || response.status);\n          const oldToken = this.getTokenFromHeaderAuth(\n            String(response.config.headers.getAuthorization() || \"\")\n          );\n          const token = await this.refreshToken(oldToken);\n          if (token) {\n            response.config.headers.Authorization = `Bearer ${token}`;\n            return await axios.request(response.config);\n          }\n        }\n        if (response.status < 200 || response.status > 400) {\n          logger.error(\"request error:\", response);\n          throw new Error(response.statusText);\n        }\n        return response;\n      },\n      async (response) => {\n        const { code } = response?.data || {};\n        if (this.isAuthErrorCode(code || response.status)) {\n          // 由于 鉴权问题导致的失败，进行一次重新发送数据。\n          const oldToken = this.getTokenFromHeaderAuth(\n            String(response.config.headers.getAuthorization() || \"\")\n          );\n          const token = await this.refreshToken(oldToken);\n          if (token) {\n            response.config.headers.Authorization = `Bearer ${token}`;\n            return await axios.request(response.config);\n          }\n        }\n        return response;\n      }\n    );\n  }\n  private isAuthErrorCode(code: number) {\n    return [\n      ApiAuthError.ERROR_FORBIDDEN,\n      ApiAuthError.ERROR_INVALID_TOKEN,\n      ApiAuthError.ERROR_TOKEN_FORBIDDEN,\n      ApiAuthError.ERROR_TOKEN_FAILED,\n    ].includes(code);\n  }\n  getTokenFromHeaderAuth(authorization: string) {\n    return authorization.replace(/^\\s*Bearer\\s*/, \"\").replace(/\\s+$/, \"\");\n  }\n  async refreshToken(oldToken: string) {\n    if (this.refreshTokenPromise) {\n      return this.refreshTokenPromise;\n    }\n    if (oldToken !== this.token) {\n      // 同时并发的接口已经获取过token，直接返回\n      return this.token;\n    }\n    this.refreshTokenPromise = this.onRefreshToken?.(this.token);\n    const token = await this.refreshTokenPromise;\n    this.refreshTokenPromise = undefined;\n    this.token = token || \"\";\n    return this.token;\n  }\n  useResponseInterceptors(\n    responseInterceptor:\n      | ((response: AxiosResponse) => AxiosResponse | Promise<AxiosResponse>)\n      | undefined,\n    rejectResponseInterceptor:\n      | ((response: AxiosResponse) => AxiosResponse | Promise<AxiosResponse>)\n      | undefined\n  ) {\n    this.getAxiosInstance().interceptors.response.use(\n      responseInterceptor,\n      rejectResponseInterceptor\n    );\n  }\n  useRequestInterceptors(\n    requestInterceptor: (\n      request: InternalAxiosRequestConfig\n    ) => InternalAxiosRequestConfig | Promise<InternalAxiosRequestConfig>\n  ) {\n    this.getAxiosInstance().interceptors.request.use(requestInterceptor);\n  }\n  getAxiosInstance() {\n    return this.axiosInstance as AxiosInstance;\n  }\n  makeRequest<Req, Rsp>(\n    apiUrl: string,\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    body?: Req,\n    isStream?: boolean,\n    options?: RequestOptions\n  ): Promise<Rsp> {\n    if (isWeb || !isStream) {\n      return super.makeRequest(apiUrl, method, body, isStream, options);\n    }\n    return this.requestMiniSse(apiUrl, method, body, options) as Promise<Rsp>;\n  }\n  private async *requestMiniSse<Req, Rsp>(\n    apiUrl: string,\n    method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n    body?: Req,\n    options?: RequestOptions,\n    retryNum: number = 0\n  ) {\n    // request intercptions处理\n    const self = this;\n    const oldToken = this.token;\n    const url = `${this.baseURL ?? \"\"}/${apiUrl}`;\n    const res = requestSSE({\n      url,\n      method,\n      data: body as Record<string, unknown>,\n      header: {\n        ...(this.axiosOptions?.headers || {}),\n        ...(options?.headers || {}),\n        Authorization: `Bearer ${this.token}`,\n      },\n      ...(options || {}),\n    });\n    let eventDataNum = 0;\n\n    for await (const eventData of res) {\n      if (eventData?.event === EventJsonDataType) {\n        const { code = -1, msg = \"unknown error\" } = (eventData.data || {}) as {\n          code: number;\n          msg: string;\n        };\n        if (this.isAuthErrorCode(code)) {\n          return await refreshTokenAndRetry(code, msg);\n        }\n        throw new MiniChatError(code || 0, msg);\n      }\n\n      if (eventData) {\n        eventDataNum++;\n        yield eventData as Rsp;\n      }\n    }\n    if (eventDataNum === 0) {\n      if (isTT) {\n        // 无法分辨是否token过期了， 直接重试\n        return await refreshTokenAndRetry();\n      } else {\n        throw new MiniChatError(-1, \"unknown error\");\n      }\n    }\n\n    async function refreshTokenAndRetry(\n      code: number = -1,\n      msg: string = \"unknown error\"\n    ) {\n      if (retryNum === 0) {\n        await self.refreshToken(oldToken as string);\n        return self.requestMiniSse(apiUrl, method, body, options, retryNum + 1);\n      } else {\n        throw new MiniChatError(code, msg);\n      }\n    }\n  }\n  private mixTaroUpload() {\n    if (!isWeb) {\n      this.files.upload = (params: CreateFileReq, options?: RequestOptions) => {\n        return this._uploadFile({\n          params,\n          options,\n          urlPath: \"/v1/files/upload\",\n        });\n      };\n    }\n    // @ts-expect-error -- linter-disable-autofix\n    this.audio.transcriptions = (\n      params: CreateFileReq,\n      options?: RequestOptions\n    ) => {\n      logger.debug(\"translation params\", params);\n      return this._uploadFile({\n        params,\n        options,\n        urlPath: \"/v1/audio/transcriptions\",\n      });\n    };\n  }\n  private async _uploadFile({\n    params,\n    options,\n    retryNum = 0,\n    urlPath,\n  }: {\n    params: CreateFileReq;\n    options?: RequestOptions;\n    urlPath: string;\n    retryNum?: number;\n  }) {\n    const url = `${this.baseURL ?? \"\"}${urlPath}`;\n    const oldToken = this.token;\n    try {\n      const rawResult = await Taro.uploadFile({\n        url,\n        filePath: params.file.filePath,\n        name: \"file\",\n        fileName: params.file.fileName,\n        withCredentials: false,\n        header: {\n          ...(this.axiosOptions?.headers || {}),\n          ...(options?.headers || {}),\n          Authorization: `Bearer ${this.token}`,\n        },\n        timeout: options?.timeout,\n      });\n      const { code = -1, data } = safeJSONParse<FileResult>(rawResult.data) || {\n        code: -1,\n      };\n      logger.debug(\"_uploadFile:\", { code, data });\n      if (code !== 0 || !data) {\n        if (\n          this.isAuthErrorCode(code || rawResult.statusCode) &&\n          retryNum !== 0\n        ) {\n          // 需要重试\n          await this.refreshToken(oldToken as string);\n          return await this._uploadFile({\n            params,\n            options,\n            retryNum: retryNum + 1,\n            urlPath,\n          });\n        }\n        throw new MiniChatError(code || -1, \"upload file failed\");\n      }\n      return data;\n    } catch (error) {\n      const miniChatError = convertToMinChatError(error);\n      logger.error(\"upload file error\", error);\n      throw miniChatError;\n    }\n  }\n}\n","import { TaroStatic } from \"@tarojs/taro\";\nimport { type UIModalEvent, UIEventType } from \"../types\";\nimport { logger } from \"./logger\";\n\nexport const showModal = (\n  modalEvent: UIModalEvent,\n  targetEventCenter?: InstanceType<TaroStatic[\"Events\"]>\n) => {\n  if (!targetEventCenter) {\n    logger.warn(\"showModal targetEventCenter is undefined\");\n    return;\n  }\n  targetEventCenter.trigger(UIEventType.ChatModalShow, modalEvent);\n};\n","let id = Date.now() + 100000 * Math.random();\nexport const nanoid = () => `${id++}`;\n","import Taro, { InnerAudioContext, TaroStatic, Events } from \"@tarojs/taro\";\nimport { isWeb } from \"./device\";\nimport { logger } from \"./logger\";\nimport { MiniChatError } from \"./mini-chat-error\";\n\nexport enum AudioPlayEvent {\n  STOP = \"stop\",\n  PLAY = \"play\",\n}\n\nlet playNo = 1000;\nexport class PlayAudio {\n  private static instance: PlayAudio;\n  private isStop: boolean = true;\n  private audioContext?: InnerAudioContext;\n  private event: InstanceType<TaroStatic[\"Events\"]> = new Events();\n  private audioPrm: Promise<ArrayBuffer> | null = null;\n\n  static stopNow() {\n    PlayAudio.instance?.stop();\n  }\n  async playText(\n    text: string,\n    audioSpeechFunc: (text: string) => Promise<ArrayBuffer>\n  ) {\n    if (!PlayAudio.instance?.isStop) {\n      PlayAudio.instance?.stop();\n    }\n    if (!this.audioPrm) {\n      this.audioPrm = audioSpeechFunc(text);\n    }\n    this.isStop = false;\n    try {\n      const audioData = await this.audioPrm;\n      if (this.isStop) {\n        return;\n      }\n      this.playData(audioData);\n    } catch (e) {\n      this.audioPrm = null;\n      logger.error(\"PlayAudio Get audio speech error\", e);\n      throw new MiniChatError(-1, \"Get Speech Failed\");\n    }\n  }\n  playData(data: ArrayBuffer) {\n    let tempFile = \"\";\n    if (isWeb) {\n      const blobData = new Blob([data], {\n        type: \"audio/wav\",\n      });\n      tempFile = URL.createObjectURL(blobData);\n    } else {\n      tempFile = Taro.env.USER_DATA_PATH + `/tempFile${playNo++}.wav`;\n      Taro.getFileSystemManager().writeFileSync(tempFile, data, \"binary\");\n    }\n    logger.debug(\"playData:\", tempFile);\n    this.play(tempFile);\n  }\n  async play(audioSrc: string) {\n    if (!PlayAudio.instance?.isStop) {\n      PlayAudio.instance?.stop();\n    }\n\n    this.isStop = false;\n\n    PlayAudio.instance = this;\n    this.audioContext = Taro.createInnerAudioContext();\n    this.audioContext.src = audioSrc;\n    if (!isWeb) {\n      this.audioContext.obeyMuteSwitch = false;\n    }\n    logger.debug(\"audioContext\", audioSrc);\n\n    this.audioContext.onPlay(() => {\n      logger.debug(\"audioContext onPlay\");\n      this.event.trigger(AudioPlayEvent.PLAY);\n    });\n    this.audioContext.onPause(() => {\n      this.stop();\n    });\n    this.audioContext.onError((res) => {\n      logger.error(\"audioContext onError\", res);\n      this.emitStopEvent(true);\n\n      this.stop();\n    });\n    this.audioContext.onEnded(() => {\n      logger.debug(\"audioContext onEnded\");\n      this.stop();\n    });\n    this.audioContext.onStop(() => {\n      this.unregister();\n      logger.debug(\"audioContext onStop\");\n    });\n    try {\n      await this.audioContext.play();\n    } catch (err) {\n      logger.error(\"audioContext play error\", err);\n    }\n    logger.debug(\"audioContext\", audioSrc);\n  }\n  stop() {\n    logger.debug(\"audioContext stop1\", this.isStop);\n    if (this.isStop) {\n      return;\n    }\n    try {\n      this.emitStopEvent();\n      this.audioContext?.stop();\n\n      this.unregister();\n      this.isStop = true;\n    } catch (_err) {\n      this.emitStopEvent(true);\n    }\n  }\n  on(event: AudioPlayEvent, callback: (params: any) => void) {\n    this.event.on(event, callback);\n  }\n  emitStopEvent(isError: boolean = false) {\n    logger.debug(\"audioContext emitStopEvent\", this.isStop);\n    if (this.isStop) {\n      return;\n    }\n    this.event.trigger(AudioPlayEvent.STOP, {\n      isError: isError,\n    });\n  }\n  unregister() {\n    this.audioContext?.offPlay();\n    this.audioContext?.offError();\n    this.audioContext?.offEnded();\n    this.audioContext?.offPause();\n    this.event.off();\n  }\n}\n","import {\n  RecorderEvent,\n  RecorderStartOptions,\n  BaseRecorderManager,\n} from \"./type\";\nimport { MiniChatError, MiniChatErrorCode } from \"../mini-chat-error\";\nimport { logger } from \"../logger\";\nimport { getWaveBlob2 } from \"../webm-to-wav\";\nexport class H5RecorderManager extends BaseRecorderManager {\n  private options: RecorderStartOptions = {};\n  private stream: MediaStream | null = null;\n\n  private tempFile: string = \"\";\n  private size: number = 0;\n  private duration: number = 0;\n  private wavBlob?: Blob;\n\n  private isSendCompleted: boolean = false;\n\n  private inputLBuffer: Float32Array[] = [];\n  private inputRBuffer: Float32Array[] = [];\n  private audioContext?: AudioContext;\n  private audioSource?: MediaStreamAudioSourceNode;\n  private analyser?: AnalyserNode;\n  private processor?: ScriptProcessorNode;\n\n  private getUserMedia(): Promise<MediaStream> {\n    return new Promise((resolve, reject) => {\n      const { sampleRate = 48000, numberOfChannels = 1 } = this.options;\n      let isComplete = false;\n      navigator.mediaDevices\n        .getUserMedia({\n          audio: {\n            sampleRate,\n            channelCount: numberOfChannels,\n          },\n        })\n        .then((stream) => {\n          logger.debug(\"H5RecorderManager getUserMedia success\", stream);\n          if (isComplete) {\n            this.stopStream(stream);\n          } else {\n            resolve(stream);\n          }\n          isComplete = true;\n        })\n        .catch((error) => {\n          isComplete = true;\n          logger.debug(\"H5RecorderManager getUserMedia catch\", error);\n          reject(error);\n        });\n      setTimeout(() => {\n        isComplete = true;\n        reject(new Error(\"getUserMedia timeout\"));\n      }, 3000);\n    });\n  }\n  async start(options: RecorderStartOptions) {\n    this.options = options;\n    this.options.numberOfChannels = options.numberOfChannels || 1;\n    this.options.sampleRate = options.sampleRate || 48000;\n    this.size = 0;\n    this.inputLBuffer = [];\n    this.inputRBuffer = [];\n    this.stream = null;\n    this.isSendCompleted = false;\n\n    try {\n      this.stream = await this.getUserMedia();\n      logger.debug(\n        \"H5RecorderManager stream get success\",\n        this.isStop,\n        this.stream\n      );\n\n      if (this.isStop) {\n        logger.warn(\"H5RecorderManager is stopped before it's started\");\n        this.stopStream();\n        this.emitStop();\n        return;\n      }\n      this.startRecord();\n    } catch (error) {\n      logger.error(\"H5RecorderManager getUserMedia error\", error);\n      this.emitError(\n        new MiniChatError(\n          MiniChatErrorCode.Audio_Permission_Denied,\n          \"getUserMedia error\"\n        )\n      );\n      this.stop();\n    }\n  }\n\n  private startRecord() {\n    if (!this.stream) {\n      throw new Error(\"stream is null\");\n    }\n    const numberOfChannels = this.options.numberOfChannels;\n\n    this.audioContext = new (window.AudioContext ||\n      // @ts-expect-error -- linter-disable-autofix\n      window.webkitAudioContext)();\n    this.audioSource = this.audioContext.createMediaStreamSource(this.stream);\n    this.analyser = this.audioContext.createAnalyser();\n    this.analyser.fftSize = 128;\n    const createAudioNode =\n      this.audioContext.createScriptProcessor ||\n      // @ts-expect-error -- linter-disable-autofix\n      this.audioContext.createJavaScriptNode;\n    const processor = createAudioNode.call(\n      this.audioContext,\n      4096,\n      numberOfChannels,\n      numberOfChannels\n    );\n    this.processor = processor;\n\n    this.audioSource.connect(this.analyser);\n    this.audioSource.connect(processor);\n    processor.connect(this.audioContext.destination);\n\n    this._registerVolume();\n    this.listenAudioProcess();\n  }\n\n  private listenAudioProcess() {\n    if (!this.processor) {\n      throw new Error(\"stream is null\");\n    }\n    this.processor.onaudioprocess = (event) => {\n      const lData = event.inputBuffer.getChannelData(0);\n\n      this.inputLBuffer.push(new Float32Array(lData));\n      this.size += lData.length;\n      if (this.options.numberOfChannels === 2) {\n        const rData = event.inputBuffer.getChannelData(1);\n        this.size += rData.length;\n        this.inputRBuffer.push(\n          new Float32Array(event.inputBuffer.getChannelData(1))\n        );\n      }\n    };\n  }\n  async stopMedia() {\n    if (!this.stream || this.size === 0) {\n      return;\n    }\n\n    this.audioSource?.disconnect();\n    this.analyser?.disconnect();\n    this.processor?.disconnect();\n    this.audioContext?.close();\n    this.stopStream();\n\n    const audioBuffer = this.genAudioBuffer();\n    this.duration = audioBuffer.duration * 1000;\n\n    this.wavBlob = await getWaveBlob2(audioBuffer, false);\n    this.tempFile = URL.createObjectURL(this.wavBlob);\n    this.emitStop();\n  }\n\n  private flat(size: number, inputBuffer: Float32Array[]) {\n    let data = new Float32Array(size);\n    // 合并\n    let offset = 0;\n    for (let i = 0; i < inputBuffer.length; i++) {\n      data.set(inputBuffer[i], offset);\n      offset += inputBuffer[i].length;\n    }\n\n    return data;\n  }\n\n  private genAudioBuffer() {\n    const audioBuffer = new AudioBuffer({\n      length: this.size,\n      sampleRate: this.audioContext?.sampleRate || 48000,\n      numberOfChannels: this.options.numberOfChannels || 1,\n    });\n    const singleSize =\n      this.options.numberOfChannels === 2 ? this.size / 2 : this.size;\n    const lData = this.flat(singleSize, this.inputLBuffer);\n    audioBuffer.copyToChannel(lData, 0, 0);\n    if (this.options.numberOfChannels === 2) {\n      const rData = this.flat(singleSize, this.inputRBuffer);\n      audioBuffer.copyToChannel(rData, 1, 0);\n    }\n    return audioBuffer;\n  }\n\n  private _registerVolume() {\n    if (!this.analyser) {\n      return () => {};\n    }\n\n    const dataArray = new Uint8Array(this.analyser.frequencyBinCount).slice(\n      0,\n      64\n    );\n    const getVolume = () => {\n      if (this.isStop) {\n        this.emit(RecorderEvent.VOLUME, {\n          volume: 0,\n        });\n        return;\n      }\n      // 计算音量\n      this.analyser?.getByteFrequencyData(dataArray);\n      let volumeSum = 0;\n      for (let i = 0; i < dataArray.length; i++) {\n        volumeSum += Math.abs(dataArray[i]) * Math.abs(dataArray[i]);\n      }\n      const volume = volumeSum / dataArray.length / 255 / 255;\n      this.emit(RecorderEvent.VOLUME, {\n        volume: volume < 0.002 ? 0 : volume,\n      });\n      setTimeout(() => {\n        getVolume();\n      }, 100);\n    };\n    getVolume();\n  }\n  private emitStop() {\n    if (this.isSendCompleted) {\n      return;\n    }\n    this.isSendCompleted = true;\n    this.emit(RecorderEvent.STOP, {\n      duration: this.duration || 0,\n      tempFilePath: this.tempFile,\n      fileSize: this.size,\n      content: this.wavBlob,\n      fileName: `recorder_${Date.now()}.wav`,\n    });\n  }\n  private emitError(error: MiniChatError) {\n    if (this.isSendCompleted) {\n      return;\n    }\n    this.isSendCompleted = true;\n    this.emit(RecorderEvent.ERROR, error);\n  }\n  destroy() {\n    this.stop();\n    this.event.off();\n  }\n  async stop() {\n    if (this.isStop) {\n      logger.warn(\"recorder has been stopped\");\n      return;\n    }\n    logger.debug(\"H5RecorderManager stop\");\n    this.isStop = true;\n    try {\n      await this.stopMedia();\n      this.event.off();\n      this.stream = null;\n      this.audioContext = undefined;\n      this.audioSource = undefined;\n      this.analyser = undefined;\n      this.processor = undefined;\n      this.wavBlob = undefined;\n      this.inputLBuffer = [];\n      this.inputRBuffer = [];\n    } catch (_err) {\n      this.emitError(new MiniChatError(-1, \"unknown error\"));\n    }\n  }\n  private stopStream(stream?: MediaStream) {\n    (stream || this.stream)?.getTracks().forEach((track) => {\n      logger.debug(\"H5RecorderManager , stopStream\", track);\n      track.stop();\n    });\n  }\n  pause() {\n    if (this.isStop) {\n      logger.error(\"recorder has been stopped\");\n      return;\n    }\n  }\n  resume() {\n    if (this.isStop) {\n      logger.error(\"recorder has been stopped\");\n      return;\n    }\n  }\n}\n\nexport class H5RecorderManagerInstance extends H5RecorderManager {\n  private static curInstance?: H5RecorderManagerInstance;\n  async start(options: RecorderStartOptions) {\n    if (this.isStop) {\n      throw new MiniChatError(-1, \"recorder is stop\");\n    }\n    logger.debug(\n      \"H5RedorManagerInstance start instance stopFlag\",\n      H5RecorderManagerInstance.curInstance?.isStop\n    );\n    // There's only one instance at a time.\n    if (!H5RecorderManagerInstance.curInstance?.isStop) {\n      H5RecorderManagerInstance.curInstance?.stop();\n    }\n    H5RecorderManagerInstance.curInstance = this;\n    return await super.start(options);\n  }\n}\n","import { isWeb } from \"../device\";\nimport { logger } from \"../logger\";\nimport { H5RecorderManagerInstance } from \"./h5-recorder-manager\";\nimport { TaroRecorderManager } from \"./taro-recorder-manager\";\nexport { BaseRecorderManager, RecorderEvent } from \"./type\";\nexport const getRecorderManager = () => {\n  if (isWeb) {\n    logger.debug(\"get H5 recorder manager\");\n\n    return new H5RecorderManagerInstance();\n  } else {\n    logger.debug(\"get taro recorder manager\");\n    return new TaroRecorderManager();\n  }\n};\n","import {\n  BaseRecorderManager,\n  RecorderEvent,\n  RecorderStartOptions,\n} from \"./type\";\nimport Taro from \"@tarojs/taro\";\nimport { MiniChatError, MiniChatErrorCode } from \"../mini-chat-error\";\nimport { logger } from \"../logger\";\nimport { isTT } from \"../device\";\nexport class TaroRecorderManager extends BaseRecorderManager {\n  private static recorder?: Taro.RecorderManager | null = null;\n  private static curInstance?: TaroRecorderManager;\n  private options: RecorderStartOptions = {};\n\n  private format?: keyof Taro.RecorderManager.Format;\n  private fileName?: string;\n\n  async start(options: RecorderStartOptions) {\n    if (this.isStop) {\n      throw new MiniChatError(-1, \"recorder is stop\");\n    }\n    logger.debug(\n      \"TaroRedorManager start instance stopFlag\",\n      TaroRecorderManager.curInstance?.isStop\n    );\n    // There's only one instance at a time.\n    if (!TaroRecorderManager.curInstance?.isStop) {\n      TaroRecorderManager.curInstance?.stop();\n    }\n    TaroRecorderManager.curInstance = this;\n\n    logger.debug(\n      \"TaroRedorManager start instance recorder\",\n      TaroRecorderManager.recorder\n    );\n    if (!TaroRecorderManager.recorder) {\n      TaroRecorderManager.recorder = Taro.getRecorderManager();\n      this.registerEvent();\n    }\n    this.format = isTT ? \"wav\" : \"mp3\";\n    this.fileName = `recorder_${Date.now()}.${this.format}`;\n    this.options = options;\n    const { sampleRate = 8000, numberOfChannels = 1 } = this.options;\n\n    try {\n      await this.checkPermission();\n      if (this.isStop) {\n        TaroRecorderManager.curInstance?.emit(RecorderEvent.STOP, {\n          duration: 0,\n          tempFilePath: \"\",\n          fileSize: 0,\n        });\n        TaroRecorderManager.recorder?.stop();\n        return;\n      }\n      TaroRecorderManager.recorder.start({\n        numberOfChannels,\n        sampleRate: sampleRate,\n        format: this.format,\n        frameSize: 2,\n      });\n      const getVolume = TaroRecorderManager.curInstance?.genGetVolumeFunc();\n      getVolume?.();\n    } catch (err) {\n      logger.error(\"TaroRecorderManager start error\", err);\n      this.emitError(\n        new MiniChatError(\n          MiniChatErrorCode.Audio_Permission_Denied,\n          \"Permission Denied\"\n        )\n      );\n    }\n  }\n\n  private checkPermission() {\n    return new Promise((resolve, reject) => {\n      Taro.getSetting({\n        success: (res) => {\n          logger.debug(\"TaroRecorderManager getSetting\", res);\n          if (res.authSetting[\"scope.record\"] !== true) {\n            Taro.authorize({\n              scope: \"scope.record\",\n              success: () => {\n                logger.debug(\"TaroRecorderManager authorize scope.record true\");\n                resolve(true);\n              },\n              fail: (res) => {\n                logger.error(\n                  \"TaroRecorderManager authorize scope.record false\",\n                  res\n                );\n                reject();\n              },\n            });\n          } else {\n            logger.debug(\"TaroRecorderManager getSetting scope.record true\");\n            resolve(true);\n          }\n        },\n        fail: () => {\n          logger.debug(\"TaroRecorderManager getSetting fails\");\n\n          resolve(true);\n        },\n      });\n    });\n  }\n  private registerEvent() {\n    TaroRecorderManager.recorder?.onStart(() => {\n      TaroRecorderManager.curInstance?.emit(RecorderEvent.START, {});\n    });\n    TaroRecorderManager.recorder?.onPause(() => {\n      TaroRecorderManager.curInstance?.emit(RecorderEvent.PAUSE, {});\n    });\n    TaroRecorderManager.recorder?.onResume(() => {\n      TaroRecorderManager.curInstance?.emit(RecorderEvent.RESUME, {});\n    });\n    TaroRecorderManager.recorder?.onStop((event) => {\n      TaroRecorderManager.curInstance?.emit(RecorderEvent.STOP, {\n        duration: event.duration,\n        tempFilePath: event.tempFilePath,\n        fileSize: event.fileSize,\n        fileName: this.fileName,\n      });\n    });\n    TaroRecorderManager.recorder?.onInterruptionBegin?.(() => {\n      logger.debug(\"TaroRecorderManager onInterruptionBegin\");\n      TaroRecorderManager.curInstance?.emit(RecorderEvent.INTERRUPT, {});\n    });\n    TaroRecorderManager.recorder?.onError((event) => {\n      logger.error(\"TaroRecorderManager onError\", event);\n      TaroRecorderManager.curInstance?.emitError(\n        new MiniChatError(\n          event?.errMsg?.includes(\"deny\")\n            ? MiniChatErrorCode.Audio_Permission_Denied\n            : -1,\n          event.errMsg\n        )\n      );\n    });\n  }\n  private genGetVolumeFunc() {\n    const getVolume = () => {\n      if (this.isStop) {\n        this.emit(RecorderEvent.VOLUME, {\n          volume: 0,\n        });\n        return;\n      }\n      const volume = Math.random() * 0.5;\n      this.emit(RecorderEvent.VOLUME, {\n        volume: volume < 0.002 ? 0 : volume,\n      });\n      setTimeout(() => {\n        getVolume();\n      }, 100);\n    };\n    return getVolume;\n  }\n\n  private emitError(error: MiniChatError) {\n    this.emit(RecorderEvent.ERROR, error);\n  }\n  stop() {\n    if (this.isStop) {\n      logger.warn(\"recorder has been stopped\");\n      return;\n    }\n    this.isStop = true;\n    try {\n      TaroRecorderManager.recorder?.stop();\n    } catch (err) {\n      this.emitError(new MiniChatError(-1, \"unknown error\"));\n    }\n  }\n  pause() {\n    if (this.isStop) {\n      logger.warn(\"recorder has been stopped\");\n      return;\n    }\n    TaroRecorderManager.recorder?.pause();\n  }\n  resume() {\n    if (this.isStop) {\n      logger.warn(\"recorder has been stopped\");\n      return;\n    }\n    TaroRecorderManager.recorder?.resume();\n  }\n  destroy() {\n    this.stop();\n    this.event.off();\n  }\n}\n","import Taro from \"@tarojs/taro\";\nimport { MiniChatError } from \"../mini-chat-error\";\nimport { Events, type TaroStatic } from \"@tarojs/taro\";\nimport { AudioRaw } from \"@/libs/types\";\nexport enum RecorderEvent {\n  START = \"start\",\n  PAUSE = \"pause\",\n  RESUME = \"resume\",\n  STOP = \"stop\",\n  ERROR = \"error\",\n  INTERRUPT = \"interrupt\",\n  VOLUME = \"volume\",\n}\nexport interface RecorderEventArgs {\n  [RecorderEvent.START]: unknown;\n  [RecorderEvent.PAUSE]: unknown;\n  [RecorderEvent.RESUME]: unknown;\n  [RecorderEvent.STOP]: AudioRaw;\n  [RecorderEvent.ERROR]: MiniChatError;\n  [RecorderEvent.INTERRUPT]: unknown;\n  [RecorderEvent.VOLUME]: {\n    volume: number; // 0 ~ 1;\n  };\n}\nexport interface RecorderStartOptions {\n  sampleRate?: keyof Taro.RecorderManager.SampleRate;\n  numberOfChannels?: 1 | 2;\n}\n\nexport abstract class BaseRecorderManager {\n  protected event: InstanceType<TaroStatic[\"Events\"]> = new Events();\n  protected isStop: boolean = false;\n  abstract start(options: RecorderStartOptions): Promise<void>;\n  abstract pause(): void;\n  abstract resume(): void;\n  abstract destroy(): void;\n  abstract stop(): void;\n  emit<T extends RecorderEvent>(event: T, args: RecorderEventArgs[T]) {\n    this.event.trigger(event, args);\n  }\n  on<T extends RecorderEvent>(\n    event: T,\n    callback: (args: RecorderEventArgs[T]) => void\n  ) {\n    this.event.on(event, callback);\n  }\n  off(event: RecorderEvent, callback: (args: unknown) => void) {\n    this.event.off(event, callback);\n  }\n  isStopped() {\n    return this.isStop;\n  }\n}\n","export const safeJSONParse = <T>(\n  v: T | string,\n  defaultValue: T | null = null,\n): T | null => {\n  if (typeof v === 'object') {\n    return v;\n  }\n  try {\n    return JSON.parse(String(v));\n  } catch (e) {\n    return defaultValue;\n  }\n};\n","import Taro from \"@tarojs/taro\";\nimport { isWeb } from \"../device\";\nimport { logger } from \"../logger\";\n\ninterface ClipboardProps {\n  data: string;\n  success?: (isUseWeb: boolean) => void;\n  fail?: (err: { errMsg: string }, isUseWeb: boolean) => void;\n}\n\nexport const setClipboardData = async ({\n  data,\n  success,\n  fail,\n}: ClipboardProps) => {\n  if (isWeb) {\n    try {\n      await navigator.clipboard.writeText(data);\n      success?.(true);\n      return;\n    } catch (_e) {\n      logger.warn(\"setClipboardData fail\");\n    }\n  }\n  await Taro.setClipboardData({\n    data,\n    success: () => {\n      success?.(false);\n    },\n    fail: (err) => {\n      fail?.(err, false);\n    },\n  });\n};\n","import { openSetting, getSetting } from \"@tarojs/taro\";\n\nexport const getAndOpenSetting = async (authNameList) => {\n  try {\n    const { authSetting = [] } = await getSetting();\n    if (authNameList.some((item) => !authSetting[item])) {\n      const { authSetting: authSettingNew } = await openSetting();\n      const unAuthNameList = authNameList.filter(\n        (item) => !authSettingNew[item]\n      );\n      return {\n        code: unAuthNameList.length === 0 ? 0 : 1,\n        unAuthNameList,\n      };\n    } else {\n      return {\n        code: 0,\n        unAuthNameList: [],\n      };\n    }\n  } catch (_e) {\n    return {\n      code: 1,\n      unAuthNameList: authNameList,\n    };\n  }\n};\n","import Taro, { createSelectorQuery } from \"@tarojs/taro\";\nimport { isArray } from \"@tarojs/shared\";\nexport const getBoundingRect = (\n  selectorName: string\n): Promise<Taro.NodesRef.BoundingClientRectCallbackResult[]> =>\n  new Promise((resolve) => {\n    createSelectorQuery?.()\n      ?.select(selectorName)\n      ?.boundingClientRect((res) => {\n        if (!res) {\n          resolve([]);\n          return [];\n        }\n        resolve(isArray(res) ? res : [res]);\n      })\n      .exec();\n  });\n","import Taro from \"@tarojs/taro\";\nimport { isArray } from \"@tarojs/shared\";\nimport { createSelectorQuery } from \"@tarojs/taro\";\n\nexport const getViewportBoundingRect = (): Promise<\n  Taro.NodesRef.BoundingClientRectCallbackResult[]\n> =>\n  new Promise((resolve) => {\n    createSelectorQuery?.()\n      ?.selectViewport()\n      ?.boundingClientRect((res) => {\n        if (!res) {\n          return [];\n        }\n        resolve(isArray(res) ? res : [res]);\n      })\n      .exec();\n  });\n","import { showToast as showToastTaro, TaroStatic } from \"@tarojs/taro\";\nimport { type UIChatToastEvent, UIEventType } from \"../types\";\n\nexport const showToast = (\n  options: UIChatToastEvent,\n  targetEventCenter?: InstanceType<TaroStatic[\"Events\"]>\n) => {\n  if (targetEventCenter) {\n    targetEventCenter.trigger(UIEventType.ChatToastShow, options);\n  } else if (typeof options?.content === \"string\") {\n    showToastTaro({\n      title: options.content,\n      icon: options.icon,\n      duration: options.duration || 6000,\n    });\n  }\n};\n","/* eslint-disable @typescript-eslint/no-magic-numbers -- ignore */\n/* eslint-disable security/detect-object-injection -- ignore */\n//  reference: https://github.com/upadhyaypushpendra/webm-to-wav-converter\nfunction _writeStringToArray(aString, targetArray, offset) {\n  for (let i = 0; i < aString.length; ++i)\n    targetArray[offset + i] = aString.charCodeAt(i);\n}\n\nfunction _writeInt16ToArray(aNumber, targetArray, offset) {\n  aNumber = Math.floor(aNumber);\n  targetArray[offset + 0] = aNumber & 255; // byte 1\n  targetArray[offset + 1] = (aNumber >> 8) & 255; // byte 2\n}\n\nfunction _writeInt32ToArray(aNumber, targetArray, offset) {\n  aNumber = Math.floor(aNumber);\n  targetArray[offset + 0] = aNumber & 255; // byte 1\n  targetArray[offset + 1] = (aNumber >> 8) & 255; // byte 2\n  targetArray[offset + 2] = (aNumber >> 16) & 255; // byte 3\n  targetArray[offset + 3] = (aNumber >> 24) & 255; // byte 4\n}\n\n// Return the bits of the float as a 32-bit integer value.  This\n// produces the raw bits; no intepretation of the value is done.\nfunction _floatBits(f) {\n  const buf = new ArrayBuffer(4);\n  new Float32Array(buf)[0] = f;\n  const bits = new Uint32Array(buf)[0];\n  // Return as a signed integer.\n  return bits | 0;\n}\n\nfunction _writeAudioBufferToArray(audioBuffer, targetArray, offset, bitDepth) {\n  let index = 0,\n    channel = 0;\n  const length = audioBuffer.length;\n  const channels = audioBuffer.numberOfChannels;\n  let channelData, sample;\n\n  // Clamping samples onto the 16-bit resolution.\n  for (index = 0; index < length; ++index) {\n    for (channel = 0; channel < channels; ++channel) {\n      channelData = audioBuffer.getChannelData(channel);\n\n      // Branches upon the requested bit depth\n      if (bitDepth === 16) {\n        sample = channelData[index] * 32768.0;\n        if (sample < -32768) sample = -32768;\n        else if (sample > 32767) sample = 32767;\n        _writeInt16ToArray(sample, targetArray, offset);\n        offset += 2;\n      } else if (bitDepth === 32) {\n        // This assumes we're going to out 32-float, not 32-bit linear.\n        sample = _floatBits(channelData[index]);\n        _writeInt32ToArray(sample, targetArray, offset);\n        offset += 4;\n      } else {\n        console.log(\"Invalid bit depth for PCM encoding.\");\n        return;\n      }\n    }\n  }\n}\n\n/**\n *\n * @param {Blob | Blob[]} blobData - Blob or Blob[] to be converted to audio/wave Blob\n * @param {boolean} as32BitFloat - Convert to 16-bit or 32-bit file, default 16-bit\n * @param {AudioContextOptions} contextOptions - optiosn needs to be used for encoding\n * @returns\n */\nexport async function getWaveBlob2(audioBuffer, as32BitFloat) {\n  // Encoding setup.\n  const frameLength = audioBuffer.length;\n  const numberOfChannels = audioBuffer.numberOfChannels;\n  const sampleRate = audioBuffer.sampleRate;\n  const bitsPerSample = as32BitFloat ? 32 : 16;\n  const bytesPerSample = bitsPerSample / 8;\n  const byteRate = (sampleRate * numberOfChannels * bitsPerSample) / 8;\n  const blockAlign = (numberOfChannels * bitsPerSample) / 8;\n  const wavDataByteLength = frameLength * numberOfChannels * bytesPerSample;\n  const headerByteLength = 44;\n  const totalLength = headerByteLength + wavDataByteLength;\n  const waveFileData = new Uint8Array(totalLength);\n  const subChunk1Size = 16;\n  const subChunk2Size = wavDataByteLength;\n  const chunkSize = 4 + (8 + subChunk1Size) + (8 + subChunk2Size);\n\n  _writeStringToArray(\"RIFF\", waveFileData, 0);\n  _writeInt32ToArray(chunkSize, waveFileData, 4);\n  _writeStringToArray(\"WAVE\", waveFileData, 8);\n  _writeStringToArray(\"fmt \", waveFileData, 12);\n\n  // SubChunk1Size (4)\n  _writeInt32ToArray(subChunk1Size, waveFileData, 16);\n  // AudioFormat (2): 3 means 32-bit float, 1 means integer PCM.\n  _writeInt16ToArray(as32BitFloat ? 3 : 1, waveFileData, 20);\n  // NumChannels (2)\n  _writeInt16ToArray(numberOfChannels, waveFileData, 22);\n  // SampleRate (4)\n  _writeInt32ToArray(sampleRate, waveFileData, 24);\n  // ByteRate (4)\n  _writeInt32ToArray(byteRate, waveFileData, 28);\n  // BlockAlign (2)\n  _writeInt16ToArray(blockAlign, waveFileData, 32);\n  // BitsPerSample (4)\n  _writeInt32ToArray(bitsPerSample, waveFileData, 34);\n  _writeStringToArray(\"data\", waveFileData, 36);\n  // SubChunk2Size (4)\n  _writeInt32ToArray(subChunk2Size, waveFileData, 40);\n\n  // Write actual audio data starting at offset 44.\n  _writeAudioBufferToArray(audioBuffer, waveFileData, 44, bitsPerSample);\n\n  return new Blob([waveFileData], {\n    type: \"audio/wave\",\n  });\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"footer-container\":\"index-module__footer-container___L_9Kc\"};","// extracted by mini-css-extract-plugin\nexport default {\"chatflow\":\"index-module__chatflow___Vibyy\",\"chat-slot-websdk\":\"index-module__chat-slot-websdk___vRkjf\",\"loading\":\"index-module__loading___rDodM\"};","// extracted by mini-css-extract-plugin\nexport default {\"bg-image\":\"index-module__bg-image___rzLYf\",\"mask\":\"index-module__mask___W9gfL\",\"img-container\":\"index-module__img-container___mtas7\",\"cropper-aspect-container\":\"index-module__cropper-aspect-container___NFYWv\",\"gradient\":\"index-module__gradient___ycdrX\",\"img\":\"index-module__img___idKr8\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___Nbryq\",\"content\":\"index-module__content___egTf0\",\"error-img\":\"index-module__error-img___qqI0g\",\"error-img-warn-1\":\"index-module__error-img-warn-1___QPWEY\",\"error-img-warn-dot\":\"index-module__error-img-warn-dot___q7X1F\",\"error-txt\":\"index-module__error-txt___hRXlE\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___fY4Uo\",\"footer\":\"index-module__footer___vpltC\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___hwGLP\",\"chat\":\"index-module__chat___dStqg\"};","// extracted by mini-css-extract-plugin\nexport default {\"chat-group\":\"index-module__chat-group___6SLY7\"};","// extracted by mini-css-extract-plugin\nexport default {\"pc-content\":\"index-module__pc-content___tx1dk\",\"mobile-content\":\"index-module__mobile-content___bCd_S\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___kPXif\",\"text\":\"index-module__text___B2GCf\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___zZqQg\",\"text\":\"index-module__text___nVCNS\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___Dizhf\",\"chat-group\":\"index-module__chat-group___wh61L\",\"mobile\":\"index-module__mobile___S2mXb\",\"selectable\":\"index-module__selectable___ym4dT\"};","// extracted by mini-css-extract-plugin\nexport default {\"divide-container\":\"index-module__divide-container___YHN6_\",\"divide-line\":\"index-module__divide-line___bC4dm\"};","// extracted by mini-css-extract-plugin\nexport default {\"query-message\":\"index-module__query-message___mYIv4\",\"state-slot\":\"index-module__state-slot___q4UZG\",\"disable\":\"index-module__disable___FmMZJ\",\"query-container\":\"index-module__query-container___VoPoo\"};","// extracted by mini-css-extract-plugin\nexport default {\"resp\":\"index-module__resp___rLn4z\",\"answer\":\"index-module__answer___u1DiN\",\"resp-container\":\"index-module__resp-container___KZdMS\"};","// extracted by mini-css-extract-plugin\nexport default {\"app-avatar\":\"index-module__app-avatar___hyFSu\",\"title\":\"index-module__title___vpNk1\",\"container\":\"index-module__container___cJUaG\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___gVDAl\",\"slot-container\":\"index-module__slot-container___JGyfP\",\"command-container\":\"index-module__command-container___tTP9h\",\"recording-audio\":\"index-module__recording-audio___y6wVx\",\"input-container\":\"index-module__input-container___Q3qBp\"};","// extracted by mini-css-extract-plugin\nexport default {\"loading\":\"index-module__loading___fN4Om\"};","// extracted by mini-css-extract-plugin\nexport default {\"scroll-container\":\"index-module__scroll-container___gau2D\",\"loading\":\"index-module__loading___fiUx7\"};","// extracted by mini-css-extract-plugin\nexport default {\"slot\":\"index-module__slot___fk_Pq\"};","// extracted by mini-css-extract-plugin\nexport default {\"chat-toast\":\"index-module__chat-toast___jgmow\",\"container\":\"index-module__container___v220l\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___mSJvM\"};","// extracted by mini-css-extract-plugin\nexport default {\"audioPlay\":\"index-module__audioPlay___i1gjg\",\"playing\":\"index-module__playing___LtMyo\",\"icons-blue\":\"index-module__icons-blue___GYHuJ\",\"light\":\"index-module__light___hL8vL\",\"icons-white\":\"index-module__icons-white___vZL5y\",\"gray-bold\":\"index-module__gray-bold___AL2yX\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___k10xK\",\"bar\":\"index-module__bar___pgYde\"};","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"index-module__avatar____dBFO\",\"medium\":\"index-module__medium___Q0NpQ\",\"large\":\"index-module__large___bUcFb\"};","// extracted by mini-css-extract-plugin\nexport default {\"bubble\":\"index-module__bubble___k20ev\",\"bubble-text\":\"index-module__bubble-text___abeDB\",\"small\":\"index-module__small___Ew3uG\",\"large\":\"index-module__large___hrnV6\"};","// extracted by mini-css-extract-plugin\nexport default {\"bubble\":\"index-module__bubble___NMa7J\",\"is-need-border\":\"index-module__is-need-border___UkdKI\",\"can-click\":\"index-module__can-click___UkBHO\",\"active\":\"index-module__active___vMdDg\"};","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"index-module__button___KxAYv\"};","// extracted by mini-css-extract-plugin\nexport default {\"image-error\":\"index-module__image-error___WfR7_\"};","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"index-module__wrapper___ZoVnN\"};","// extracted by mini-css-extract-plugin\nexport default {\"checkbox\":\"index-module__checkbox___SPIRR\",\"checked\":\"index-module__checked___PpIM1\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___FFAkF\",\"disabled\":\"index-module__disabled___gYJ9M\"};","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"index-module__text___PgILC\",\"retry\":\"index-module__retry___LJ9KD\"};","// extracted by mini-css-extract-plugin\nexport default {\"chooser\":\"index-module__chooser___MDG05\",\"text\":\"index-module__text___vv8Iu\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___dtoSg\",\"border\":\"index-module__border___dIkvN\",\"square-hover-btn\":\"index-module__square-hover-btn___Vc9BG\",\"hover\":\"index-module__hover___wD0kZ\",\"bold\":\"index-module__bold___KTh20\",\"large\":\"index-module__large___auahl\",\"small\":\"index-module__small___sZDJG\"};","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"index-module__link___tsOM_\"};","// extracted by mini-css-extract-plugin\nexport default {\"blockquote\":\"index-module__blockquote___opsoc\"};","// extracted by mini-css-extract-plugin\nexport default {\"code-container\":\"index-module__code-container___oH4Nm\",\"header\":\"index-module__header___tuk1Q\",\"code\":\"index-module__code___yuytR\",\"lang\":\"index-module__lang___XBHYB\",\"copy\":\"index-module__copy___utkxU\",\"content\":\"index-module__content___xhdDD\",\"text\":\"index-module__text___OLoKB\"};","// extracted by mini-css-extract-plugin\nexport default {\"heading-1\":\"index-module__heading-1___JtmiA\",\"heading-2\":\"index-module__heading-2___cZc1_\",\"heading-3\":\"index-module__heading-3___i_MfG\"};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"index-module__list___XmgwV\",\"list-item\":\"index-module__list-item___uZ7mo\",\"dot\":\"index-module__dot___tRGPF\",\"task-item\":\"index-module__task-item___M9Z54\"};","// extracted by mini-css-extract-plugin\nexport default {\"table-wrapper\":\"index-module__table-wrapper___mlo5x\",\"table\":\"index-module__table___NiIpq\",\"table-row\":\"index-module__table-row___xcdwq\",\"table-cell\":\"index-module__table-cell___h5XXF\",\"table-header\":\"index-module__table-header___laEZx\"};","// extracted by mini-css-extract-plugin\nexport default {\"break\":\"index-module__break___SsSEr\"};","// extracted by mini-css-extract-plugin\nexport default {\"break\":\"index-module__break___V44S_\"};","// extracted by mini-css-extract-plugin\nexport default {\"delete\":\"index-module__delete___i2va_\"};","// extracted by mini-css-extract-plugin\nexport default {\"emphasis\":\"index-module__emphasis___M3dc2\"};","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"index-module__image___etUul\",\"image-error\":\"index-module__image-error___SBhMy\"};","// extracted by mini-css-extract-plugin\nexport default {\"indicator\":\"index-module__indicator___4Ksm1\",\"indicator-frame\":\"index-module__indicator-frame___C1I8a\"};","// extracted by mini-css-extract-plugin\nexport default {\"inline-code\":\"index-module__inline-code___w2RwE\"};","// extracted by mini-css-extract-plugin\nexport default {\"link\":\"index-module__link___gK03x\",\"invalid\":\"index-module__invalid___xccgD\"};","// extracted by mini-css-extract-plugin\nexport default {\"strong\":\"index-module__strong___oVHn7\"};","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"index-module__text___ikOpp\",\"important\":\"index-module__important___MBOGO\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"index-module__root___R_KQi\"};","// extracted by mini-css-extract-plugin\nexport default {\"modal-container\":\"index-module__modal-container___Uu7Dd\",\"modal\":\"index-module__modal___p1pXe\",\"mask\":\"index-module__mask___mWeS3\"};","// extracted by mini-css-extract-plugin\nexport default {\"radio\":\"index-module__radio___SbFRY\",\"checked\":\"index-module__checked___j8pq8\",\"checked-circle\":\"index-module__checked-circle___EoZq2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___jHsxj\",\"arrow-down\":\"index-module__arrow-down___d4CCK\",\"arrow-down--show\":\"index-module__arrow-down--show___F5DAN\",\"scroll\":\"index-module__scroll___oz4rR\",\"children\":\"index-module__children___CyGrD\"};","// extracted by mini-css-extract-plugin\nexport default {\"spacing\":\"index-module__spacing___YhX7p\",\"horizontal-center\":\"index-module__horizontal-center___g61bc\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___ByL0s\",\"large\":\"index-module__large___or0rV\",\"svg\":\"index-module__svg___WBIm1\",\"small\":\"index-module__small___uNLyv\",\"text\":\"index-module__text___ANBoR\",\"animation-rotate\":\"index-module__animation-rotate___Tj1wt\"};","// extracted by mini-css-extract-plugin\nexport default {\"svg\":\"index-module__svg___aht22\",\"wrapper\":\"index-module__wrapper___UmqID\",\"circle\":\"index-module__circle___EAQoe\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___Y28q4\",\"content\":\"index-module__content___FxMEm\",\"icon\":\"index-module__icon___WFfDs\",\"success\":\"index-module__success___tyxFD\",\"error\":\"index-module__error___KDidJ\"};","// extracted by mini-css-extract-plugin\nexport default {\"tooltip\":\"index-module__tooltip___qm5BV\",\"content\":\"index-module__content___jZ79F\",\"top\":\"index-module__top___iM7mu\",\"click\":\"index-module__click___XsSUd\",\"show\":\"index-module__show___NwjF3\",\"hover\":\"index-module__hover___XwAk2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___wPi7Z\",\"input\":\"index-module__input___RqbAW\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___SmJoW\",\"waiting\":\"index-module__waiting___T8467\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___kgGPm\",\"text\":\"index-module__text___PED4_\",\"focused\":\"index-module__focused___KIJ2K\",\"touching\":\"index-module__touching___OarQg\",\"outside\":\"index-module__outside___n2r5q\",\"audio\":\"index-module__audio___cG9YB\",\"primary\":\"index-module__primary___Amf4k\",\"tips-container\":\"index-module__tips-container___FiYRN\",\"left-duration\":\"index-module__left-duration___o_A5i\",\"outside-tips\":\"index-module__outside-tips___DyUTp\",\"tips-text\":\"index-module__tips-text___Nc334\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___SfRYH\",\"title\":\"index-module__title___kZRIq\",\"desc\":\"index-module__desc___UNFu0\",\"img\":\"index-module__img___z3iqh\",\"btn-container\":\"index-module__btn-container___RgDEt\",\"btn\":\"index-module__btn___ibo4u\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___HvNwi\",\"audio\":\"index-module__audio___dcTsP\",\"chat-input-container\":\"index-module__chat-input-container___QQSpe\",\"chat-input-content\":\"index-module__chat-input-content___oGXAs\",\"input-container\":\"index-module__input-container___ksN_Z\",\"input\":\"index-module__input___AIHEE\",\"placeholder\":\"index-module__placeholder___AwW0f\",\"divider\":\"index-module__divider___SuwSM\",\"focused\":\"index-module__focused___HdeNo\",\"audio-recording\":\"index-module__audio-recording___MzNdP\",\"multi-mode-message\":\"index-module__multi-mode-message___kr9gm\"};","// extracted by mini-css-extract-plugin\nexport default {\"send-btn\":\"index-module__send-btn___SL66C\"};","// extracted by mini-css-extract-plugin\nexport default {\"keyboard-icon\":\"index-module__keyboard-icon___LXr74\",\"microphone-icon\":\"index-module__microphone-icon___Fw_1e\"};","// extracted by mini-css-extract-plugin\nexport default {\"task-message-container\":\"index-module__task-message-container___M9NGi\",\"content\":\"index-module__content___T9j1r\"};","// extracted by mini-css-extract-plugin\nexport default {\"file-btn\":\"index-module__file-btn___k_cy5\"};","// extracted by mini-css-extract-plugin\nexport default {\"input-node\":\"index-module__input-node___GuU9B\",\"btn\":\"index-module__btn___Lmvxu\",\"input-node-input\":\"index-module__input-node-input___emNKV\",\"disabled\":\"index-module__disabled___ZlRQZ\",\"switch-node\":\"index-module__switch-node___gO_mh\",\"switch-node-text\":\"index-module__switch-node-text___h4yug\",\"switch-node-switch-item\":\"index-module__switch-node-switch-item___Lp8kV\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___jGe6V\",\"svg\":\"index-module__svg___l4vUi\",\"txt\":\"index-module__txt___AbU7P\",\"size\":\"index-module__size___HJ25m\",\"file\":\"index-module__file___TV_F2\"};","// extracted by mini-css-extract-plugin\nexport default {\"image\":\"index-module__image___QJzjz\"};","// extracted by mini-css-extract-plugin\nexport default {\"markdown\":\"index-module__markdown___QDXQh\",\"reason\":\"index-module__reason____DntH\"};","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"index-module__text___Q_UAb\",\"question-text\":\"index-module__question-text___RR04n\"};","// extracted by mini-css-extract-plugin\nexport default {\"waiting\":\"index-module__waiting___XMj3z\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"index-module__content____XWPE\",\"txt\":\"index-module__txt___weWYQ\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"index-module__container___B89_T\",\"vertical-center\":\"index-module__vertical-center___WsKLz\",\"app-avatar\":\"index-module__app-avatar___QfDDx\",\"info-container\":\"index-module__info-container___frTpR\",\"chat-name\":\"index-module__chat-name___B7ksu\",\"chat-desc\":\"index-module__chat-desc___OpI0e\",\"prologue\":\"index-module__prologue___OU8J6\"};","// extracted by mini-css-extract-plugin\nexport default {\"suggestion\":\"index-module__suggestion___jB3n6\",\"suggestion-list\":\"index-module__suggestion-list___TVqVz\"};","/* (ignored) */","/* (ignored) */","/* (ignored) */","/* (ignored) */"],"names":[],"sourceRoot":""}